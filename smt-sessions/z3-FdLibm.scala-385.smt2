; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!2095 () Bool)

(assert start!2095)

(declare-fun b!10390 () Bool)

(declare-datatypes ((tuple2!92 0))(
  ( (tuple2!93 (_1!251 (_ FloatingPoint 11 53)) (_2!251 (_ FloatingPoint 11 53))) )
))
(declare-fun e!6031 () tuple2!92)

(declare-fun call!11 () tuple2!92)

(assert (=> b!10390 (= e!6031 call!11)))

(declare-fun b!10391 () Bool)

(declare-fun e!6030 () Bool)

(declare-fun lt!5376 () tuple2!92)

(declare-fun c!23 () (_ FloatingPoint 11 53))

(assert (=> b!10391 (= e!6030 (and (fp.geq (_1!251 lt!5376) (fp.add roundNearestTiesToEven c!23 (_2!251 lt!5376))) (let ((fp!68 (fp.add roundNearestTiesToEven (_1!251 lt!5376) (fp.add roundNearestTiesToEven c!23 (_2!251 lt!5376))))) (or (fp.isInfinite fp!68) (fp.isNaN fp!68)))))))

(assert (=> b!10391 (= lt!5376 e!6031)))

(declare-fun i!347 () (_ BitVec 32))

(declare-fun s!25 () (_ FloatingPoint 11 53))

(declare-datatypes ((array!776 0))(
  ( (array!777 (arr!342 (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (size!342 (_ BitVec 32))) )
))
(declare-fun fq!120 () array!776)

(declare-fun c!1257 () Bool)

(assert (=> b!10391 (= c!1257 (fp.geq s!25 (select (arr!342 fq!120) i!347)))))

(declare-fun b!10392 () Bool)

(assert (=> b!10392 (= e!6031 call!11)))

(declare-fun b!10393 () Bool)

(declare-fun res!8298 () Bool)

(assert (=> b!10393 (=> (not res!8298) (not e!6030))))

(declare-fun jz!77 () (_ BitVec 32))

(assert (=> b!10393 (= res!8298 (and (bvsle #b00000000000000000000000000000000 jz!77) (bvslt jz!77 #b00000000000000000000000000010100) (bvsle #b11111111111111111111111111111111 i!347) (bvsle i!347 (bvsub jz!77 #b00000000000000000000000000000001)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) s!25) (fp.leq s!25 (select (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (fp #b0 #b01111111110 #b1001001000011111101101010100010001000010110100011000)) #b00000000000000000000000000000001 (fp #b0 #b01111101000 #b0001101000100000100011100110000100011010011000100110)) #b00000000000000000000000000001010 (fp #b0 #b01100010001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001011 (fp #b0 #b01011111001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001100 (fp #b0 #b01011100001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001101 (fp #b0 #b01011001001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001110 (fp #b0 #b01010110001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001111 (fp #b0 #b01010011001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000010000 (fp #b0 #b01010000001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000010001 (fp #b0 #b01001101001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000010010 (fp #b0 #b01001010001 #b1011101001010010010101100111111111111111111111100100)) #b00000000000000000000000000010011 (fp #b0 #b01000111001 #b1011101001010010010101001100010110101101101010011000)) #b00000000000000000000000000000010 (fp #b0 #b01111010000 #b1100110001001011101001000110001100110001010001011100)) #b00000000000000000000000000000011 (fp #b0 #b01110111001 #b0100100001001011101001011110000000110111000001110000)) #b00000000000000000000000000000100 (fp #b0 #b01110100001 #b1001101000011011010011111000000000000000000000000000)) #b00000000000000000000000000000101 (fp #b0 #b01110001001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000000110 (fp #b0 #b01101110001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000000111 (fp #b0 #b01101011001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001000 (fp #b0 #b01101000001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001001 (fp #b0 #b01100101001 #b1011101001010010010101101000000000000000000000000000)) (bvadd i!347 #b00000000000000000000000000000001))) (fp.eq (fp.add roundNearestTiesToEven s!25 c!23) s!25) (bvsge i!347 #b00000000000000000000000000000000) (fp.leq s!25 (fp #b0 #b01111111111 #b0000000000000000000000000000000000000000000000000000))))))

(declare-fun b!10394 () Bool)

(declare-fun res!8299 () Bool)

(assert (=> b!10394 (=> (not res!8299) (not e!6030))))

(declare-fun fqInv!0 (array!776) Bool)

(assert (=> b!10394 (= res!8299 (fqInv!0 fq!120))))

(declare-fun res!8297 () Bool)

(assert (=> start!2095 (=> (not res!8297) (not e!6030))))

(assert (=> start!2095 (= res!8297 (= (size!342 fq!120) #b00000000000000000000000000010100))))

(assert (=> start!2095 e!6030))

(assert (=> start!2095 true))

(declare-fun array_inv!291 (array!776) Bool)

(assert (=> start!2095 (array_inv!291 fq!120)))

(declare-fun bm!8 () Bool)

(declare-fun fast2Sum!0 ((_ FloatingPoint 11 53) (_ FloatingPoint 11 53)) tuple2!92)

(assert (=> bm!8 (= call!11 (fast2Sum!0 (ite c!1257 s!25 (select (arr!342 fq!120) i!347)) (ite c!1257 (select (arr!342 fq!120) i!347) s!25)))))

(assert (= (and start!2095 res!8297) b!10394))

(assert (= (and b!10394 res!8299) b!10393))

(assert (= (and b!10393 res!8298) b!10391))

(assert (= (and b!10391 c!1257) b!10390))

(assert (= (and b!10391 (not c!1257)) b!10392))

(assert (= (or b!10390 b!10392) bm!8))

(declare-fun m!14789 () Bool)

(assert (=> b!10394 m!14789))

(declare-fun m!14791 () Bool)

(assert (=> bm!8 m!14791))

(declare-fun m!14793 () Bool)

(assert (=> bm!8 m!14793))

(declare-fun m!14795 () Bool)

(assert (=> start!2095 m!14795))

(declare-fun m!14797 () Bool)

(assert (=> b!10393 m!14797))

(assert (=> b!10391 m!14791))

(check-sat (not start!2095) (not b!10394) (not bm!8))
(check-sat)
(get-model)

(declare-fun d!4187 () Bool)

(assert (=> d!4187 (= (array_inv!291 fq!120) (bvsge (size!342 fq!120) #b00000000000000000000000000000000))))

(assert (=> start!2095 d!4187))

(declare-fun d!4189 () Bool)

(assert (=> d!4189 (= (fqInv!0 fq!120) (and (= (size!342 fq!120) #b00000000000000000000000000010100) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!342 fq!120) #b00000000000000000000000000000000)) (fp.leq (select (arr!342 fq!120) #b00000000000000000000000000000000) (fp #b0 #b01111111110 #b1001001000011111101100001101101111000000100110000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!342 fq!120) #b00000000000000000000000000000001)) (fp.leq (select (arr!342 fq!120) #b00000000000000000000000000000001) (fp #b0 #b01111101000 #b0001101000100000100011001001010011001110101111100000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!342 fq!120) #b00000000000000000000000000000010)) (fp.leq (select (arr!342 fq!120) #b00000000000000000000000000000010) (fp #b0 #b01111010000 #b1100110001001011101000011101001010011001111110100000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!342 fq!120) #b00000000000000000000000000000011)) (fp.leq (select (arr!342 fq!120) #b00000000000000000000000000000011) (fp #b0 #b01110111001 #b0100100001001011101001000100011000011011101101111000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!342 fq!120) #b00000000000000000000000000000100)) (fp.leq (select (arr!342 fq!120) #b00000000000000000000000000000100) (fp #b0 #b01110100001 #b1001101000011011010011011100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!342 fq!120) #b00000000000000000000000000000101)) (fp.leq (select (arr!342 fq!120) #b00000000000000000000000000000101) (fp #b0 #b01110001001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!342 fq!120) #b00000000000000000000000000000110)) (fp.leq (select (arr!342 fq!120) #b00000000000000000000000000000110) (fp #b0 #b01101110001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!342 fq!120) #b00000000000000000000000000000111)) (fp.leq (select (arr!342 fq!120) #b00000000000000000000000000000111) (fp #b0 #b01101011001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!342 fq!120) #b00000000000000000000000000001000)) (fp.leq (select (arr!342 fq!120) #b00000000000000000000000000001000) (fp #b0 #b01101000001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!342 fq!120) #b00000000000000000000000000001001)) (fp.leq (select (arr!342 fq!120) #b00000000000000000000000000001001) (fp #b0 #b01100101001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!342 fq!120) #b00000000000000000000000000001010)) (fp.leq (select (arr!342 fq!120) #b00000000000000000000000000001010) (fp #b0 #b01100010001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!342 fq!120) #b00000000000000000000000000001011)) (fp.leq (select (arr!342 fq!120) #b00000000000000000000000000001011) (fp #b0 #b01011111001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!342 fq!120) #b00000000000000000000000000001100)) (fp.leq (select (arr!342 fq!120) #b00000000000000000000000000001100) (fp #b0 #b01011100001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!342 fq!120) #b00000000000000000000000000001101)) (fp.leq (select (arr!342 fq!120) #b00000000000000000000000000001101) (fp #b0 #b01011001001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!342 fq!120) #b00000000000000000000000000001110)) (fp.leq (select (arr!342 fq!120) #b00000000000000000000000000001110) (fp #b0 #b01010110001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!342 fq!120) #b00000000000000000000000000001111)) (fp.leq (select (arr!342 fq!120) #b00000000000000000000000000001111) (fp #b0 #b01010011001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!342 fq!120) #b00000000000000000000000000010000)) (fp.leq (select (arr!342 fq!120) #b00000000000000000000000000010000) (fp #b0 #b01010000001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!342 fq!120) #b00000000000000000000000000010001)) (fp.leq (select (arr!342 fq!120) #b00000000000000000000000000010001) (fp #b0 #b01001101001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!342 fq!120) #b00000000000000000000000000010010)) (fp.leq (select (arr!342 fq!120) #b00000000000000000000000000010010) (fp #b0 #b01001010001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!342 fq!120) #b00000000000000000000000000010011)) (fp.leq (select (arr!342 fq!120) #b00000000000000000000000000010011) (fp #b0 #b01000111001 #b1011101001010010010101001100010110101101101010011000))))))

(declare-fun bs!1725 () Bool)

(assert (= bs!1725 d!4189))

(declare-fun m!14799 () Bool)

(assert (=> bs!1725 m!14799))

(declare-fun m!14801 () Bool)

(assert (=> bs!1725 m!14801))

(declare-fun m!14803 () Bool)

(assert (=> bs!1725 m!14803))

(declare-fun m!14805 () Bool)

(assert (=> bs!1725 m!14805))

(declare-fun m!14807 () Bool)

(assert (=> bs!1725 m!14807))

(declare-fun m!14809 () Bool)

(assert (=> bs!1725 m!14809))

(declare-fun m!14811 () Bool)

(assert (=> bs!1725 m!14811))

(declare-fun m!14813 () Bool)

(assert (=> bs!1725 m!14813))

(declare-fun m!14815 () Bool)

(assert (=> bs!1725 m!14815))

(declare-fun m!14817 () Bool)

(assert (=> bs!1725 m!14817))

(declare-fun m!14819 () Bool)

(assert (=> bs!1725 m!14819))

(declare-fun m!14821 () Bool)

(assert (=> bs!1725 m!14821))

(declare-fun m!14823 () Bool)

(assert (=> bs!1725 m!14823))

(declare-fun m!14825 () Bool)

(assert (=> bs!1725 m!14825))

(declare-fun m!14827 () Bool)

(assert (=> bs!1725 m!14827))

(declare-fun m!14829 () Bool)

(assert (=> bs!1725 m!14829))

(declare-fun m!14831 () Bool)

(assert (=> bs!1725 m!14831))

(declare-fun m!14833 () Bool)

(assert (=> bs!1725 m!14833))

(declare-fun m!14835 () Bool)

(assert (=> bs!1725 m!14835))

(declare-fun m!14837 () Bool)

(assert (=> bs!1725 m!14837))

(assert (=> b!10394 d!4189))

(declare-fun d!4191 () Bool)

(declare-fun lt!5381 () tuple2!92)

(assert (=> d!4191 (fp.eq (fp.add roundNearestTiesToEven (_1!251 lt!5381) (_2!251 lt!5381)) (_1!251 lt!5381))))

(declare-fun lt!5382 () (_ FloatingPoint 11 53))

(assert (=> d!4191 (= lt!5381 (tuple2!93 lt!5382 (fp.add roundNearestTiesToEven (fp.sub roundNearestTiesToEven (ite c!1257 s!25 (select (arr!342 fq!120) i!347)) lt!5382) (ite c!1257 (select (arr!342 fq!120) i!347) s!25))))))

(assert (=> d!4191 (= lt!5382 (fp.add roundNearestTiesToEven (ite c!1257 s!25 (select (arr!342 fq!120) i!347)) (ite c!1257 (select (arr!342 fq!120) i!347) s!25)))))

(assert (=> d!4191 (= (fast2Sum!0 (ite c!1257 s!25 (select (arr!342 fq!120) i!347)) (ite c!1257 (select (arr!342 fq!120) i!347) s!25)) lt!5381)))

(assert (=> bm!8 d!4191))

(check-sat)
