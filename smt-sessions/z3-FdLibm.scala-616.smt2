; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!3083 () Bool)

(assert start!3083)

(declare-datatypes ((array!1486 0))(
  ( (array!1487 (arr!660 (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (size!660 (_ BitVec 32))) )
))
(declare-fun fq!41 () array!1486)

(assert (=> start!3083 (and (= (size!660 fq!41) #b00000000000000000000000000010100) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!660 fq!41) #b00000000000000000000000000000000)) (fp.leq (select (arr!660 fq!41) #b00000000000000000000000000000000) (fp #b0 #b01111111110 #b1001001000011111101100001101101111000000100110000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!660 fq!41) #b00000000000000000000000000000001)) (fp.leq (select (arr!660 fq!41) #b00000000000000000000000000000001) (fp #b0 #b01111101000 #b0001101000100000100011001001010011001110101111100000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!660 fq!41) #b00000000000000000000000000000010)) (fp.leq (select (arr!660 fq!41) #b00000000000000000000000000000010) (fp #b0 #b01111010000 #b1100110001001011101000011101001010011001111110100000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!660 fq!41) #b00000000000000000000000000000011)) (fp.leq (select (arr!660 fq!41) #b00000000000000000000000000000011) (fp #b0 #b01110111001 #b0100100001001011101001000100011000011011101101111000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!660 fq!41) #b00000000000000000000000000000100)) (fp.leq (select (arr!660 fq!41) #b00000000000000000000000000000100) (fp #b0 #b01110100001 #b1001101000011011010011011100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!660 fq!41) #b00000000000000000000000000000101)) (fp.leq (select (arr!660 fq!41) #b00000000000000000000000000000101) (fp #b0 #b01110001001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!660 fq!41) #b00000000000000000000000000000110)) (fp.leq (select (arr!660 fq!41) #b00000000000000000000000000000110) (fp #b0 #b01101110001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!660 fq!41) #b00000000000000000000000000000111)) (fp.leq (select (arr!660 fq!41) #b00000000000000000000000000000111) (fp #b0 #b01101011001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!660 fq!41) #b00000000000000000000000000001000)) (fp.leq (select (arr!660 fq!41) #b00000000000000000000000000001000) (fp #b0 #b01101000001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!660 fq!41) #b00000000000000000000000000001001)) (fp.leq (select (arr!660 fq!41) #b00000000000000000000000000001001) (fp #b0 #b01100101001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!660 fq!41) #b00000000000000000000000000001010)) (fp.leq (select (arr!660 fq!41) #b00000000000000000000000000001010) (fp #b0 #b01100010001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!660 fq!41) #b00000000000000000000000000001011)) (fp.leq (select (arr!660 fq!41) #b00000000000000000000000000001011) (fp #b0 #b01011111001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!660 fq!41) #b00000000000000000000000000001100)) (fp.leq (select (arr!660 fq!41) #b00000000000000000000000000001100) (fp #b0 #b01011100001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!660 fq!41) #b00000000000000000000000000001101)) (fp.leq (select (arr!660 fq!41) #b00000000000000000000000000001101) (fp #b0 #b01011001001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!660 fq!41) #b00000000000000000000000000001110)) (bvsge #b00000000000000000000000000001110 (size!660 fq!41)))))

(declare-fun array_inv!608 (array!1486) Bool)

(assert (=> start!3083 (array_inv!608 fq!41)))

(declare-fun bs!3072 () Bool)

(assert (= bs!3072 start!3083))

(declare-fun m!26609 () Bool)

(assert (=> bs!3072 m!26609))

(declare-fun m!26611 () Bool)

(assert (=> bs!3072 m!26611))

(declare-fun m!26613 () Bool)

(assert (=> bs!3072 m!26613))

(declare-fun m!26615 () Bool)

(assert (=> bs!3072 m!26615))

(declare-fun m!26617 () Bool)

(assert (=> bs!3072 m!26617))

(declare-fun m!26619 () Bool)

(assert (=> bs!3072 m!26619))

(declare-fun m!26621 () Bool)

(assert (=> bs!3072 m!26621))

(declare-fun m!26623 () Bool)

(assert (=> bs!3072 m!26623))

(declare-fun m!26625 () Bool)

(assert (=> bs!3072 m!26625))

(declare-fun m!26627 () Bool)

(assert (=> bs!3072 m!26627))

(declare-fun m!26629 () Bool)

(assert (=> bs!3072 m!26629))

(declare-fun m!26631 () Bool)

(assert (=> bs!3072 m!26631))

(declare-fun m!26633 () Bool)

(assert (=> bs!3072 m!26633))

(declare-fun m!26635 () Bool)

(assert (=> bs!3072 m!26635))

(declare-fun m!26637 () Bool)

(assert (=> bs!3072 m!26637))

(declare-fun m!26639 () Bool)

(assert (=> bs!3072 m!26639))

(check-sat (not start!3083))
(check-sat)
