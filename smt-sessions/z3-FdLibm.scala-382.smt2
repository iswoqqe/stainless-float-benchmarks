; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!2111 () Bool)

(assert start!2111)

(declare-fun res!8615 () Bool)

(declare-fun e!6083 () Bool)

(assert (=> start!2111 (=> (not res!8615) (not e!6083))))

(declare-datatypes ((array!771 0))(
  ( (array!772 (arr!339 (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (size!339 (_ BitVec 32))) )
))
(declare-fun fq!120 () array!771)

(assert (=> start!2111 (= res!8615 (= (size!339 fq!120) #b00000000000000000000000000010100))))

(assert (=> start!2111 e!6083))

(assert (=> start!2111 true))

(declare-fun array_inv!288 (array!771) Bool)

(assert (=> start!2111 (array_inv!288 fq!120)))

(declare-fun b!10740 () Bool)

(declare-fun res!8616 () Bool)

(assert (=> b!10740 (=> (not res!8616) (not e!6083))))

(declare-fun fqInv!0 (array!771) Bool)

(assert (=> b!10740 (= res!8616 (fqInv!0 fq!120))))

(declare-fun i!347 () (_ BitVec 32))

(declare-fun b!10741 () Bool)

(declare-fun jz!77 () (_ BitVec 32))

(declare-fun c!23 () (_ FloatingPoint 11 53))

(declare-fun s!25 () (_ FloatingPoint 11 53))

(assert (=> b!10741 (= e!6083 (and (bvsle #b00000000000000000000000000000000 jz!77) (bvslt jz!77 #b00000000000000000000000000010100) (bvsle #b11111111111111111111111111111111 i!347) (bvsle i!347 (bvsub jz!77 #b00000000000000000000000000000001)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) s!25) (fp.leq s!25 (select (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (fp #b0 #b01111111110 #b1001001000011111101101010100010001000010110100011000)) #b00000000000000000000000000000001 (fp #b0 #b01111101000 #b0001101000100000100011100110000100011010011000100110)) #b00000000000000000000000000001010 (fp #b0 #b01100010001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001011 (fp #b0 #b01011111001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001100 (fp #b0 #b01011100001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001101 (fp #b0 #b01011001001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001110 (fp #b0 #b01010110001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001111 (fp #b0 #b01010011001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000010000 (fp #b0 #b01010000001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000010001 (fp #b0 #b01001101001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000010010 (fp #b0 #b01001010001 #b1011101001010010010101100111111111111111111111100100)) #b00000000000000000000000000010011 (fp #b0 #b01000111001 #b1011101001010010010101001100010110101101101010011000)) #b00000000000000000000000000000010 (fp #b0 #b01111010000 #b1100110001001011101001000110001100110001010001011100)) #b00000000000000000000000000000011 (fp #b0 #b01110111001 #b0100100001001011101001011110000000110111000001110000)) #b00000000000000000000000000000100 (fp #b0 #b01110100001 #b1001101000011011010011111000000000000000000000000000)) #b00000000000000000000000000000101 (fp #b0 #b01110001001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000000110 (fp #b0 #b01101110001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000000111 (fp #b0 #b01101011001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001000 (fp #b0 #b01101000001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001001 (fp #b0 #b01100101001 #b1011101001010010010101101000000000000000000000000000)) (bvadd i!347 #b00000000000000000000000000000001))) (fp.eq (fp.add roundNearestTiesToEven s!25 c!23) s!25) (bvsge i!347 #b00000000000000000000000000000000) (fp.leq s!25 (fp #b0 #b01111111111 #b0000000000000000000000000000000000000000000000000000)) (fp.geq s!25 (select (arr!339 fq!120) i!347)) (let ((b!3 (select (arr!339 fq!120) i!347))) (let ((fp!66 (fp.add roundNearestTiesToEven s!25 b!3))) (and (not (fp.isInfinite fp!66)) (not (fp.isNaN fp!66)) (not (fp.geq (ite (fp.lt s!25 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)) (fp.neg s!25) s!25) (ite (fp.lt b!3 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)) (fp.neg b!3) b!3))))))))))

(assert (= (and start!2111 res!8615) b!10740))

(assert (= (and b!10740 res!8616) b!10741))

(declare-fun m!16511 () Bool)

(assert (=> start!2111 m!16511))

(declare-fun m!16513 () Bool)

(assert (=> b!10740 m!16513))

(declare-fun m!16515 () Bool)

(assert (=> b!10741 m!16515))

(declare-fun m!16517 () Bool)

(assert (=> b!10741 m!16517))

(check-sat (not b!10740) (not start!2111))
(check-sat)
(get-model)

(declare-fun d!4889 () Bool)

(assert (=> d!4889 (= (fqInv!0 fq!120) (and (= (size!339 fq!120) #b00000000000000000000000000010100) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!339 fq!120) #b00000000000000000000000000000000)) (fp.leq (select (arr!339 fq!120) #b00000000000000000000000000000000) (fp #b0 #b01111111110 #b1001001000011111101100001101101111000000100110000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!339 fq!120) #b00000000000000000000000000000001)) (fp.leq (select (arr!339 fq!120) #b00000000000000000000000000000001) (fp #b0 #b01111101000 #b0001101000100000100011001001010011001110101111100000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!339 fq!120) #b00000000000000000000000000000010)) (fp.leq (select (arr!339 fq!120) #b00000000000000000000000000000010) (fp #b0 #b01111010000 #b1100110001001011101000011101001010011001111110100000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!339 fq!120) #b00000000000000000000000000000011)) (fp.leq (select (arr!339 fq!120) #b00000000000000000000000000000011) (fp #b0 #b01110111001 #b0100100001001011101001000100011000011011101101111000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!339 fq!120) #b00000000000000000000000000000100)) (fp.leq (select (arr!339 fq!120) #b00000000000000000000000000000100) (fp #b0 #b01110100001 #b1001101000011011010011011100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!339 fq!120) #b00000000000000000000000000000101)) (fp.leq (select (arr!339 fq!120) #b00000000000000000000000000000101) (fp #b0 #b01110001001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!339 fq!120) #b00000000000000000000000000000110)) (fp.leq (select (arr!339 fq!120) #b00000000000000000000000000000110) (fp #b0 #b01101110001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!339 fq!120) #b00000000000000000000000000000111)) (fp.leq (select (arr!339 fq!120) #b00000000000000000000000000000111) (fp #b0 #b01101011001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!339 fq!120) #b00000000000000000000000000001000)) (fp.leq (select (arr!339 fq!120) #b00000000000000000000000000001000) (fp #b0 #b01101000001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!339 fq!120) #b00000000000000000000000000001001)) (fp.leq (select (arr!339 fq!120) #b00000000000000000000000000001001) (fp #b0 #b01100101001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!339 fq!120) #b00000000000000000000000000001010)) (fp.leq (select (arr!339 fq!120) #b00000000000000000000000000001010) (fp #b0 #b01100010001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!339 fq!120) #b00000000000000000000000000001011)) (fp.leq (select (arr!339 fq!120) #b00000000000000000000000000001011) (fp #b0 #b01011111001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!339 fq!120) #b00000000000000000000000000001100)) (fp.leq (select (arr!339 fq!120) #b00000000000000000000000000001100) (fp #b0 #b01011100001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!339 fq!120) #b00000000000000000000000000001101)) (fp.leq (select (arr!339 fq!120) #b00000000000000000000000000001101) (fp #b0 #b01011001001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!339 fq!120) #b00000000000000000000000000001110)) (fp.leq (select (arr!339 fq!120) #b00000000000000000000000000001110) (fp #b0 #b01010110001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!339 fq!120) #b00000000000000000000000000001111)) (fp.leq (select (arr!339 fq!120) #b00000000000000000000000000001111) (fp #b0 #b01010011001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!339 fq!120) #b00000000000000000000000000010000)) (fp.leq (select (arr!339 fq!120) #b00000000000000000000000000010000) (fp #b0 #b01010000001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!339 fq!120) #b00000000000000000000000000010001)) (fp.leq (select (arr!339 fq!120) #b00000000000000000000000000010001) (fp #b0 #b01001101001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!339 fq!120) #b00000000000000000000000000010010)) (fp.leq (select (arr!339 fq!120) #b00000000000000000000000000010010) (fp #b0 #b01001010001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!339 fq!120) #b00000000000000000000000000010011)) (fp.leq (select (arr!339 fq!120) #b00000000000000000000000000010011) (fp #b0 #b01000111001 #b1011101001010010010101001100010110101101101010011000))))))

(declare-fun bs!2179 () Bool)

(assert (= bs!2179 d!4889))

(declare-fun m!16519 () Bool)

(assert (=> bs!2179 m!16519))

(declare-fun m!16521 () Bool)

(assert (=> bs!2179 m!16521))

(declare-fun m!16523 () Bool)

(assert (=> bs!2179 m!16523))

(declare-fun m!16525 () Bool)

(assert (=> bs!2179 m!16525))

(declare-fun m!16527 () Bool)

(assert (=> bs!2179 m!16527))

(declare-fun m!16529 () Bool)

(assert (=> bs!2179 m!16529))

(declare-fun m!16531 () Bool)

(assert (=> bs!2179 m!16531))

(declare-fun m!16533 () Bool)

(assert (=> bs!2179 m!16533))

(declare-fun m!16535 () Bool)

(assert (=> bs!2179 m!16535))

(declare-fun m!16537 () Bool)

(assert (=> bs!2179 m!16537))

(declare-fun m!16539 () Bool)

(assert (=> bs!2179 m!16539))

(declare-fun m!16541 () Bool)

(assert (=> bs!2179 m!16541))

(declare-fun m!16543 () Bool)

(assert (=> bs!2179 m!16543))

(declare-fun m!16545 () Bool)

(assert (=> bs!2179 m!16545))

(declare-fun m!16547 () Bool)

(assert (=> bs!2179 m!16547))

(declare-fun m!16549 () Bool)

(assert (=> bs!2179 m!16549))

(declare-fun m!16551 () Bool)

(assert (=> bs!2179 m!16551))

(declare-fun m!16553 () Bool)

(assert (=> bs!2179 m!16553))

(declare-fun m!16555 () Bool)

(assert (=> bs!2179 m!16555))

(declare-fun m!16557 () Bool)

(assert (=> bs!2179 m!16557))

(assert (=> b!10740 d!4889))

(declare-fun d!4891 () Bool)

(assert (=> d!4891 (= (array_inv!288 fq!120) (bvsge (size!339 fq!120) #b00000000000000000000000000000000))))

(assert (=> start!2111 d!4891))

(check-sat)
