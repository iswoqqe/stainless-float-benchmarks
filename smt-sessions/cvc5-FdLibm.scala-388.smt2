; Options: -q --produce-models --incremental --print-success --lang smt2.6 --arrays-exp
(set-logic ALL)

(declare-fun start!2303 () Bool)

(assert start!2303)

(declare-datatypes ((tuple2!108 0))(
  ( (tuple2!109 (_1!259 (_ FloatingPoint 11 53)) (_2!259 (_ FloatingPoint 11 53))) )
))
(declare-fun call!20 () tuple2!108)

(declare-fun i!347 () (_ BitVec 32))

(declare-fun c!1344 () Bool)

(declare-fun bm!17 () Bool)

(declare-fun s!25 () (_ FloatingPoint 11 53))

(declare-datatypes ((array!798 0))(
  ( (array!799 (arr!345 (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (size!345 (_ BitVec 32))) )
))
(declare-fun fq!120 () array!798)

(declare-fun fast2Sum!0 ((_ FloatingPoint 11 53) (_ FloatingPoint 11 53)) tuple2!108)

(assert (=> bm!17 (= call!20 (fast2Sum!0 (ite c!1344 s!25 (select (arr!345 fq!120) i!347)) (ite c!1344 (select (arr!345 fq!120) i!347) s!25)))))

(declare-fun res!9417 () Bool)

(declare-fun e!6391 () Bool)

(assert (=> start!2303 (=> (not res!9417) (not e!6391))))

(assert (=> start!2303 (= res!9417 (= (size!345 fq!120) #b00000000000000000000000000010100))))

(assert (=> start!2303 e!6391))

(assert (=> start!2303 true))

(declare-fun array_inv!294 (array!798) Bool)

(assert (=> start!2303 (array_inv!294 fq!120)))

(declare-fun b!11687 () Bool)

(declare-fun e!6390 () Bool)

(assert (=> b!11687 (= e!6391 e!6390)))

(declare-fun res!9419 () Bool)

(assert (=> b!11687 (=> (not res!9419) (not e!6390))))

(declare-fun lt!5705 () tuple2!108)

(declare-fun c!23 () (_ FloatingPoint 11 53))

(assert (=> b!11687 (= res!9419 (fp.geq (_1!259 lt!5705) (fp.add roundNearestTiesToEven c!23 (_2!259 lt!5705))))))

(declare-fun e!6388 () tuple2!108)

(assert (=> b!11687 (= lt!5705 e!6388)))

(assert (=> b!11687 (= c!1344 (fp.geq s!25 (select (arr!345 fq!120) i!347)))))

(declare-fun b!11688 () Bool)

(assert (=> b!11688 (= e!6388 call!20)))

(declare-fun b!11689 () Bool)

(declare-fun lt!5707 () (_ BitVec 32))

(assert (=> b!11689 (= e!6390 (and (bvsge lt!5707 #b00000000000000000000000000000000) (bvslt lt!5707 #b00000000000000000000000000000000)))))

(assert (=> b!11689 (= lt!5707 (bvsub i!347 #b00000000000000000000000000000001))))

(declare-fun lt!5706 () tuple2!108)

(assert (=> b!11689 (= lt!5706 (fast2Sum!0 (_1!259 lt!5705) (fp.add roundNearestTiesToEven c!23 (_2!259 lt!5705))))))

(declare-fun b!11690 () Bool)

(declare-fun res!9418 () Bool)

(assert (=> b!11690 (=> (not res!9418) (not e!6391))))

(declare-fun fqInv!0 (array!798) Bool)

(assert (=> b!11690 (= res!9418 (fqInv!0 fq!120))))

(declare-fun b!11691 () Bool)

(declare-fun res!9420 () Bool)

(assert (=> b!11691 (=> (not res!9420) (not e!6391))))

(declare-fun jz!77 () (_ BitVec 32))

(assert (=> b!11691 (= res!9420 (and (bvsle #b00000000000000000000000000000000 jz!77) (bvslt jz!77 #b00000000000000000000000000010100) (bvsle #b11111111111111111111111111111111 i!347) (bvsle i!347 (bvsub jz!77 #b00000000000000000000000000000001)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) s!25) (fp.leq s!25 (select (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (fp #b0 #b01111111110 #b1001001000011111101101010100010001000010110100011000)) #b00000000000000000000000000000001 (fp #b0 #b01111101000 #b0001101000100000100011100110000100011010011000100110)) #b00000000000000000000000000001010 (fp #b0 #b01100010001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001011 (fp #b0 #b01011111001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001100 (fp #b0 #b01011100001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001101 (fp #b0 #b01011001001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001110 (fp #b0 #b01010110001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001111 (fp #b0 #b01010011001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000010000 (fp #b0 #b01010000001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000010001 (fp #b0 #b01001101001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000010010 (fp #b0 #b01001010001 #b1011101001010010010101100111111111111111111111100100)) #b00000000000000000000000000010011 (fp #b0 #b01000111001 #b1011101001010010010101001100010110101101101010011000)) #b00000000000000000000000000000010 (fp #b0 #b01111010000 #b1100110001001011101001000110001100110001010001011100)) #b00000000000000000000000000000011 (fp #b0 #b01110111001 #b0100100001001011101001011110000000110111000001110000)) #b00000000000000000000000000000100 (fp #b0 #b01110100001 #b1001101000011011010011111000000000000000000000000000)) #b00000000000000000000000000000101 (fp #b0 #b01110001001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000000110 (fp #b0 #b01101110001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000000111 (fp #b0 #b01101011001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001000 (fp #b0 #b01101000001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001001 (fp #b0 #b01100101001 #b1011101001010010010101101000000000000000000000000000)) (bvadd i!347 #b00000000000000000000000000000001))) (fp.eq (fp.add roundNearestTiesToEven s!25 c!23) s!25) (bvsge i!347 #b00000000000000000000000000000000) (fp.leq s!25 (fp #b0 #b01111111111 #b0000000000000000000000000000000000000000000000000000))))))

(declare-fun b!11692 () Bool)

(assert (=> b!11692 (= e!6388 call!20)))

(assert (= (and start!2303 res!9417) b!11690))

(assert (= (and b!11690 res!9418) b!11691))

(assert (= (and b!11691 res!9420) b!11687))

(assert (= (and b!11687 c!1344) b!11692))

(assert (= (and b!11687 (not c!1344)) b!11688))

(assert (= (or b!11692 b!11688) bm!17))

(assert (= (and b!11687 res!9419) b!11689))

(declare-fun m!19613 () Bool)

(assert (=> b!11687 m!19613))

(declare-fun m!19615 () Bool)

(assert (=> b!11689 m!19615))

(declare-fun m!19617 () Bool)

(assert (=> b!11691 m!19617))

(declare-fun m!19619 () Bool)

(assert (=> b!11690 m!19619))

(declare-fun m!19621 () Bool)

(assert (=> start!2303 m!19621))

(assert (=> bm!17 m!19613))

(declare-fun m!19623 () Bool)

(assert (=> bm!17 m!19623))

(push 1)

(assert (not b!11690))

(assert (not start!2303))

(assert (not b!11689))

(assert (not bm!17))

(check-sat)

(pop 1)

(push 1)

(check-sat)

(pop 1)

