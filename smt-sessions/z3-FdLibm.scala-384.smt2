; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!2123 () Bool)

(assert start!2123)

(declare-fun res!8627 () Bool)

(declare-fun e!6095 () Bool)

(assert (=> start!2123 (=> (not res!8627) (not e!6095))))

(declare-datatypes ((array!777 0))(
  ( (array!778 (arr!341 (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (size!341 (_ BitVec 32))) )
))
(declare-fun fq!120 () array!777)

(assert (=> start!2123 (= res!8627 (= (size!341 fq!120) #b00000000000000000000000000010100))))

(assert (=> start!2123 e!6095))

(assert (=> start!2123 true))

(declare-fun array_inv!290 (array!777) Bool)

(assert (=> start!2123 (array_inv!290 fq!120)))

(declare-fun b!10752 () Bool)

(declare-fun res!8628 () Bool)

(assert (=> b!10752 (=> (not res!8628) (not e!6095))))

(declare-fun fqInv!0 (array!777) Bool)

(assert (=> b!10752 (= res!8628 (fqInv!0 fq!120))))

(declare-fun i!347 () (_ BitVec 32))

(declare-fun b!10753 () Bool)

(declare-fun jz!77 () (_ BitVec 32))

(declare-fun c!23 () (_ FloatingPoint 11 53))

(declare-fun s!25 () (_ FloatingPoint 11 53))

(assert (=> b!10753 (= e!6095 (and (bvsle #b00000000000000000000000000000000 jz!77) (bvslt jz!77 #b00000000000000000000000000010100) (bvsle #b11111111111111111111111111111111 i!347) (bvsle i!347 (bvsub jz!77 #b00000000000000000000000000000001)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) s!25) (fp.leq s!25 (select (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (fp #b0 #b01111111110 #b1001001000011111101101010100010001000010110100011000)) #b00000000000000000000000000000001 (fp #b0 #b01111101000 #b0001101000100000100011100110000100011010011000100110)) #b00000000000000000000000000001010 (fp #b0 #b01100010001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001011 (fp #b0 #b01011111001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001100 (fp #b0 #b01011100001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001101 (fp #b0 #b01011001001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001110 (fp #b0 #b01010110001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001111 (fp #b0 #b01010011001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000010000 (fp #b0 #b01010000001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000010001 (fp #b0 #b01001101001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000010010 (fp #b0 #b01001010001 #b1011101001010010010101100111111111111111111111100100)) #b00000000000000000000000000010011 (fp #b0 #b01000111001 #b1011101001010010010101001100010110101101101010011000)) #b00000000000000000000000000000010 (fp #b0 #b01111010000 #b1100110001001011101001000110001100110001010001011100)) #b00000000000000000000000000000011 (fp #b0 #b01110111001 #b0100100001001011101001011110000000110111000001110000)) #b00000000000000000000000000000100 (fp #b0 #b01110100001 #b1001101000011011010011111000000000000000000000000000)) #b00000000000000000000000000000101 (fp #b0 #b01110001001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000000110 (fp #b0 #b01101110001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000000111 (fp #b0 #b01101011001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001000 (fp #b0 #b01101000001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001001 (fp #b0 #b01100101001 #b1011101001010010010101101000000000000000000000000000)) (bvadd i!347 #b00000000000000000000000000000001))) (fp.eq (fp.add roundNearestTiesToEven s!25 c!23) s!25) (bvsge i!347 #b00000000000000000000000000000000) (fp.leq s!25 (fp #b0 #b01111111111 #b0000000000000000000000000000000000000000000000000000)) (not (fp.geq s!25 (select (arr!341 fq!120) i!347))) (let ((a!25 (select (arr!341 fq!120) i!347))) (let ((fp!67 (fp.add roundNearestTiesToEven a!25 s!25))) (and (not (fp.isInfinite fp!67)) (not (fp.isNaN fp!67)) (not (fp.geq (ite (fp.lt a!25 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)) (fp.neg a!25) a!25) (ite (fp.lt s!25 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)) (fp.neg s!25) s!25))))))))))

(assert (= (and start!2123 res!8627) b!10752))

(assert (= (and b!10752 res!8628) b!10753))

(declare-fun m!16607 () Bool)

(assert (=> start!2123 m!16607))

(declare-fun m!16609 () Bool)

(assert (=> b!10752 m!16609))

(declare-fun m!16611 () Bool)

(assert (=> b!10753 m!16611))

(declare-fun m!16613 () Bool)

(assert (=> b!10753 m!16613))

(check-sat (not start!2123) (not b!10752))
(check-sat)
