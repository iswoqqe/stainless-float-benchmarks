; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!2117 () Bool)

(assert start!2117)

(declare-fun res!8621 () Bool)

(declare-fun e!6089 () Bool)

(assert (=> start!2117 (=> (not res!8621) (not e!6089))))

(declare-datatypes ((array!774 0))(
  ( (array!775 (arr!340 (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (size!340 (_ BitVec 32))) )
))
(declare-fun fq!120 () array!774)

(assert (=> start!2117 (= res!8621 (= (size!340 fq!120) #b00000000000000000000000000010100))))

(assert (=> start!2117 e!6089))

(assert (=> start!2117 true))

(declare-fun array_inv!289 (array!774) Bool)

(assert (=> start!2117 (array_inv!289 fq!120)))

(declare-fun b!10746 () Bool)

(declare-fun res!8622 () Bool)

(assert (=> b!10746 (=> (not res!8622) (not e!6089))))

(declare-fun fqInv!0 (array!774) Bool)

(assert (=> b!10746 (= res!8622 (fqInv!0 fq!120))))

(declare-fun b!10747 () Bool)

(declare-fun i!347 () (_ BitVec 32))

(declare-fun jz!77 () (_ BitVec 32))

(declare-fun c!23 () (_ FloatingPoint 11 53))

(declare-fun s!25 () (_ FloatingPoint 11 53))

(assert (=> b!10747 (= e!6089 (and (bvsle #b00000000000000000000000000000000 jz!77) (bvslt jz!77 #b00000000000000000000000000010100) (bvsle #b11111111111111111111111111111111 i!347) (bvsle i!347 (bvsub jz!77 #b00000000000000000000000000000001)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) s!25) (fp.leq s!25 (select (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (fp #b0 #b01111111110 #b1001001000011111101101010100010001000010110100011000)) #b00000000000000000000000000000001 (fp #b0 #b01111101000 #b0001101000100000100011100110000100011010011000100110)) #b00000000000000000000000000001010 (fp #b0 #b01100010001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001011 (fp #b0 #b01011111001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001100 (fp #b0 #b01011100001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001101 (fp #b0 #b01011001001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001110 (fp #b0 #b01010110001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001111 (fp #b0 #b01010011001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000010000 (fp #b0 #b01010000001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000010001 (fp #b0 #b01001101001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000010010 (fp #b0 #b01001010001 #b1011101001010010010101100111111111111111111111100100)) #b00000000000000000000000000010011 (fp #b0 #b01000111001 #b1011101001010010010101001100010110101101101010011000)) #b00000000000000000000000000000010 (fp #b0 #b01111010000 #b1100110001001011101001000110001100110001010001011100)) #b00000000000000000000000000000011 (fp #b0 #b01110111001 #b0100100001001011101001011110000000110111000001110000)) #b00000000000000000000000000000100 (fp #b0 #b01110100001 #b1001101000011011010011111000000000000000000000000000)) #b00000000000000000000000000000101 (fp #b0 #b01110001001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000000110 (fp #b0 #b01101110001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000000111 (fp #b0 #b01101011001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001000 (fp #b0 #b01101000001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001001 (fp #b0 #b01100101001 #b1011101001010010010101101000000000000000000000000000)) (bvadd i!347 #b00000000000000000000000000000001))) (fp.eq (fp.add roundNearestTiesToEven s!25 c!23) s!25) (bvsge i!347 #b00000000000000000000000000000000) (fp.leq s!25 (fp #b0 #b01111111111 #b0000000000000000000000000000000000000000000000000000)) (not (fp.geq s!25 (select (arr!340 fq!120) i!347))) (let ((fp!67 (fp.add roundNearestTiesToEven (select (arr!340 fq!120) i!347) s!25))) (or (fp.isInfinite fp!67) (fp.isNaN fp!67)))))))

(assert (= (and start!2117 res!8621) b!10746))

(assert (= (and b!10746 res!8622) b!10747))

(declare-fun m!16559 () Bool)

(assert (=> start!2117 m!16559))

(declare-fun m!16561 () Bool)

(assert (=> b!10746 m!16561))

(declare-fun m!16563 () Bool)

(assert (=> b!10747 m!16563))

(declare-fun m!16565 () Bool)

(assert (=> b!10747 m!16565))

(check-sat (not start!2117) (not b!10746))
(check-sat)
(get-model)

(declare-fun d!4893 () Bool)

(assert (=> d!4893 (= (array_inv!289 fq!120) (bvsge (size!340 fq!120) #b00000000000000000000000000000000))))

(assert (=> start!2117 d!4893))

(declare-fun d!4895 () Bool)

(assert (=> d!4895 (= (fqInv!0 fq!120) (and (= (size!340 fq!120) #b00000000000000000000000000010100) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!340 fq!120) #b00000000000000000000000000000000)) (fp.leq (select (arr!340 fq!120) #b00000000000000000000000000000000) (fp #b0 #b01111111110 #b1001001000011111101100001101101111000000100110000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!340 fq!120) #b00000000000000000000000000000001)) (fp.leq (select (arr!340 fq!120) #b00000000000000000000000000000001) (fp #b0 #b01111101000 #b0001101000100000100011001001010011001110101111100000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!340 fq!120) #b00000000000000000000000000000010)) (fp.leq (select (arr!340 fq!120) #b00000000000000000000000000000010) (fp #b0 #b01111010000 #b1100110001001011101000011101001010011001111110100000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!340 fq!120) #b00000000000000000000000000000011)) (fp.leq (select (arr!340 fq!120) #b00000000000000000000000000000011) (fp #b0 #b01110111001 #b0100100001001011101001000100011000011011101101111000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!340 fq!120) #b00000000000000000000000000000100)) (fp.leq (select (arr!340 fq!120) #b00000000000000000000000000000100) (fp #b0 #b01110100001 #b1001101000011011010011011100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!340 fq!120) #b00000000000000000000000000000101)) (fp.leq (select (arr!340 fq!120) #b00000000000000000000000000000101) (fp #b0 #b01110001001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!340 fq!120) #b00000000000000000000000000000110)) (fp.leq (select (arr!340 fq!120) #b00000000000000000000000000000110) (fp #b0 #b01101110001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!340 fq!120) #b00000000000000000000000000000111)) (fp.leq (select (arr!340 fq!120) #b00000000000000000000000000000111) (fp #b0 #b01101011001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!340 fq!120) #b00000000000000000000000000001000)) (fp.leq (select (arr!340 fq!120) #b00000000000000000000000000001000) (fp #b0 #b01101000001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!340 fq!120) #b00000000000000000000000000001001)) (fp.leq (select (arr!340 fq!120) #b00000000000000000000000000001001) (fp #b0 #b01100101001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!340 fq!120) #b00000000000000000000000000001010)) (fp.leq (select (arr!340 fq!120) #b00000000000000000000000000001010) (fp #b0 #b01100010001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!340 fq!120) #b00000000000000000000000000001011)) (fp.leq (select (arr!340 fq!120) #b00000000000000000000000000001011) (fp #b0 #b01011111001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!340 fq!120) #b00000000000000000000000000001100)) (fp.leq (select (arr!340 fq!120) #b00000000000000000000000000001100) (fp #b0 #b01011100001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!340 fq!120) #b00000000000000000000000000001101)) (fp.leq (select (arr!340 fq!120) #b00000000000000000000000000001101) (fp #b0 #b01011001001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!340 fq!120) #b00000000000000000000000000001110)) (fp.leq (select (arr!340 fq!120) #b00000000000000000000000000001110) (fp #b0 #b01010110001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!340 fq!120) #b00000000000000000000000000001111)) (fp.leq (select (arr!340 fq!120) #b00000000000000000000000000001111) (fp #b0 #b01010011001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!340 fq!120) #b00000000000000000000000000010000)) (fp.leq (select (arr!340 fq!120) #b00000000000000000000000000010000) (fp #b0 #b01010000001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!340 fq!120) #b00000000000000000000000000010001)) (fp.leq (select (arr!340 fq!120) #b00000000000000000000000000010001) (fp #b0 #b01001101001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!340 fq!120) #b00000000000000000000000000010010)) (fp.leq (select (arr!340 fq!120) #b00000000000000000000000000010010) (fp #b0 #b01001010001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!340 fq!120) #b00000000000000000000000000010011)) (fp.leq (select (arr!340 fq!120) #b00000000000000000000000000010011) (fp #b0 #b01000111001 #b1011101001010010010101001100010110101101101010011000))))))

(declare-fun bs!2181 () Bool)

(assert (= bs!2181 d!4895))

(declare-fun m!16567 () Bool)

(assert (=> bs!2181 m!16567))

(declare-fun m!16569 () Bool)

(assert (=> bs!2181 m!16569))

(declare-fun m!16571 () Bool)

(assert (=> bs!2181 m!16571))

(declare-fun m!16573 () Bool)

(assert (=> bs!2181 m!16573))

(declare-fun m!16575 () Bool)

(assert (=> bs!2181 m!16575))

(declare-fun m!16577 () Bool)

(assert (=> bs!2181 m!16577))

(declare-fun m!16579 () Bool)

(assert (=> bs!2181 m!16579))

(declare-fun m!16581 () Bool)

(assert (=> bs!2181 m!16581))

(declare-fun m!16583 () Bool)

(assert (=> bs!2181 m!16583))

(declare-fun m!16585 () Bool)

(assert (=> bs!2181 m!16585))

(declare-fun m!16587 () Bool)

(assert (=> bs!2181 m!16587))

(declare-fun m!16589 () Bool)

(assert (=> bs!2181 m!16589))

(declare-fun m!16591 () Bool)

(assert (=> bs!2181 m!16591))

(declare-fun m!16593 () Bool)

(assert (=> bs!2181 m!16593))

(declare-fun m!16595 () Bool)

(assert (=> bs!2181 m!16595))

(declare-fun m!16597 () Bool)

(assert (=> bs!2181 m!16597))

(declare-fun m!16599 () Bool)

(assert (=> bs!2181 m!16599))

(declare-fun m!16601 () Bool)

(assert (=> bs!2181 m!16601))

(declare-fun m!16603 () Bool)

(assert (=> bs!2181 m!16603))

(declare-fun m!16605 () Bool)

(assert (=> bs!2181 m!16605))

(assert (=> b!10746 d!4895))

(check-sat)
