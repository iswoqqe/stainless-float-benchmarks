; Options: -q --produce-models --incremental --print-success --lang smt2.6 --arrays-exp
(set-logic ALL)

(declare-fun start!2629 () Bool)

(assert start!2629)

(declare-datatypes ((array!1016 0))(
  ( (array!1017 (arr!442 (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (size!442 (_ BitVec 32))) )
))
(declare-fun qq!34 () array!1016)

(assert (=> start!2629 (and (= (size!442 qq!34) #b00000000000000000000000000010100) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!442 qq!34) #b00000000000000000000000000000000)) (fp.leq (select (arr!442 qq!34) #b00000000000000000000000000000000) (fp #b0 #b01111111101 #b1111111111111111111111000000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!442 qq!34) #b00000000000000000000000000000001)) (fp.leq (select (arr!442 qq!34) #b00000000000000000000000000000001) (fp #b0 #b01111100110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!442 qq!34) #b00000000000000000000000000000010)) (fp.leq (select (arr!442 qq!34) #b00000000000000000000000000000010) (fp #b0 #b01111001110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!442 qq!34) #b00000000000000000000000000000011)) (fp.leq (select (arr!442 qq!34) #b00000000000000000000000000000011) (fp #b0 #b01110110110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!442 qq!34) #b00000000000000000000000000000100)) (fp.leq (select (arr!442 qq!34) #b00000000000000000000000000000100) (fp #b0 #b01110011110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!442 qq!34) #b00000000000000000000000000000101)) (bvsge #b00000000000000000000000000000101 (size!442 qq!34)))))

(declare-fun array_inv!391 (array!1016) Bool)

(assert (=> start!2629 (array_inv!391 qq!34)))

(declare-fun bs!2882 () Bool)

(assert (= bs!2882 start!2629))

(declare-fun m!22505 () Bool)

(assert (=> bs!2882 m!22505))

(declare-fun m!22507 () Bool)

(assert (=> bs!2882 m!22507))

(declare-fun m!22509 () Bool)

(assert (=> bs!2882 m!22509))

(declare-fun m!22511 () Bool)

(assert (=> bs!2882 m!22511))

(declare-fun m!22513 () Bool)

(assert (=> bs!2882 m!22513))

(declare-fun m!22515 () Bool)

(assert (=> bs!2882 m!22515))

(declare-fun m!22517 () Bool)

(assert (=> bs!2882 m!22517))

(push 1)

(assert (not start!2629))

(check-sat)

(pop 1)

(push 1)

(check-sat)

(pop 1)

