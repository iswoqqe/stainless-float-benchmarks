; Options: -q --produce-models --incremental --print-success --lang smt2.6 --arrays-exp
(set-logic ALL)

(declare-fun start!3227 () Bool)

(assert start!3227)

(declare-datatypes ((array!1486 0))(
  ( (array!1487 (arr!655 (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (size!655 (_ BitVec 32))) )
))
(declare-fun fq!41 () array!1486)

(assert (=> start!3227 (and (= (size!655 fq!41) #b00000000000000000000000000010100) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!655 fq!41) #b00000000000000000000000000000000)) (fp.leq (select (arr!655 fq!41) #b00000000000000000000000000000000) (fp #b0 #b01111111110 #b1001001000011111101100001101101111000000100110000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!655 fq!41) #b00000000000000000000000000000001)) (fp.leq (select (arr!655 fq!41) #b00000000000000000000000000000001) (fp #b0 #b01111101000 #b0001101000100000100011001001010011001110101111100000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!655 fq!41) #b00000000000000000000000000000010)) (fp.leq (select (arr!655 fq!41) #b00000000000000000000000000000010) (fp #b0 #b01111010000 #b1100110001001011101000011101001010011001111110100000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!655 fq!41) #b00000000000000000000000000000011)) (fp.leq (select (arr!655 fq!41) #b00000000000000000000000000000011) (fp #b0 #b01110111001 #b0100100001001011101001000100011000011011101101111000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!655 fq!41) #b00000000000000000000000000000100)) (fp.leq (select (arr!655 fq!41) #b00000000000000000000000000000100) (fp #b0 #b01110100001 #b1001101000011011010011011100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!655 fq!41) #b00000000000000000000000000000101)) (fp.leq (select (arr!655 fq!41) #b00000000000000000000000000000101) (fp #b0 #b01110001001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!655 fq!41) #b00000000000000000000000000000110)) (fp.leq (select (arr!655 fq!41) #b00000000000000000000000000000110) (fp #b0 #b01101110001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!655 fq!41) #b00000000000000000000000000000111)) (fp.leq (select (arr!655 fq!41) #b00000000000000000000000000000111) (fp #b0 #b01101011001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!655 fq!41) #b00000000000000000000000000001000)) (fp.leq (select (arr!655 fq!41) #b00000000000000000000000000001000) (fp #b0 #b01101000001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!655 fq!41) #b00000000000000000000000000001001)) (fp.leq (select (arr!655 fq!41) #b00000000000000000000000000001001) (fp #b0 #b01100101001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!655 fq!41) #b00000000000000000000000000001010)) (fp.leq (select (arr!655 fq!41) #b00000000000000000000000000001010) (fp #b0 #b01100010001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!655 fq!41) #b00000000000000000000000000001011)) (fp.leq (select (arr!655 fq!41) #b00000000000000000000000000001011) (fp #b0 #b01011111001 #b1011101001010010010101001100010110101101101010011000)) (bvsge #b00000000000000000000000000001100 (size!655 fq!41)))))

(declare-fun array_inv!603 (array!1486) Bool)

(assert (=> start!3227 (array_inv!603 fq!41)))

(declare-fun bs!3604 () Bool)

(assert (= bs!3604 start!3227))

(declare-fun m!29311 () Bool)

(assert (=> bs!3604 m!29311))

(declare-fun m!29313 () Bool)

(assert (=> bs!3604 m!29313))

(declare-fun m!29315 () Bool)

(assert (=> bs!3604 m!29315))

(declare-fun m!29317 () Bool)

(assert (=> bs!3604 m!29317))

(declare-fun m!29319 () Bool)

(assert (=> bs!3604 m!29319))

(declare-fun m!29321 () Bool)

(assert (=> bs!3604 m!29321))

(declare-fun m!29323 () Bool)

(assert (=> bs!3604 m!29323))

(declare-fun m!29325 () Bool)

(assert (=> bs!3604 m!29325))

(declare-fun m!29327 () Bool)

(assert (=> bs!3604 m!29327))

(declare-fun m!29329 () Bool)

(assert (=> bs!3604 m!29329))

(declare-fun m!29331 () Bool)

(assert (=> bs!3604 m!29331))

(declare-fun m!29333 () Bool)

(assert (=> bs!3604 m!29333))

(declare-fun m!29335 () Bool)

(assert (=> bs!3604 m!29335))

(push 1)

(assert (not start!3227))

(check-sat)

(pop 1)

(push 1)

(check-sat)

(pop 1)

