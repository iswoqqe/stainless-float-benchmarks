; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!1117 () Bool)

(assert start!1117)

(declare-fun res!4114 () Bool)

(declare-fun e!2669 () Bool)

(assert (=> start!1117 (=> (not res!4114) (not e!2669))))

(declare-fun jz!67 () (_ BitVec 32))

(declare-datatypes ((array!393 0))(
  ( (array!394 (arr!171 (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (size!171 (_ BitVec 32))) )
))
(declare-fun qq!69 () array!393)

(assert (=> start!1117 (= res!4114 (and (bvsle #b00000000000000000000000000000000 jz!67) (bvslt jz!67 #b00000000000000000000000000010100) (= (size!171 qq!69) #b00000000000000000000000000010100)))))

(assert (=> start!1117 e!2669))

(assert (=> start!1117 true))

(declare-fun array_inv!121 (array!393) Bool)

(assert (=> start!1117 (array_inv!121 qq!69)))

(declare-fun b!5241 () Bool)

(declare-fun res!4115 () Bool)

(assert (=> b!5241 (=> (not res!4115) (not e!2669))))

(declare-fun qqInv!0 (array!393) Bool)

(assert (=> b!5241 (= res!4115 (qqInv!0 qq!69))))

(declare-fun b!5242 () Bool)

(assert (=> b!5242 (= e!2669 (and (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (store ((as const (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (fp.mul roundNearestTiesToEven (fp #b0 #b01111111111 #b1001001000011111101101000000000000000000000000000000) (select (arr!171 qq!69) #b00000000000000000000000000000000))) #b00000000000000000000000000000000)) (fp.leq (select (store ((as const (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (fp.mul roundNearestTiesToEven (fp #b0 #b01111111111 #b1001001000011111101101000000000000000000000000000000) (select (arr!171 qq!69) #b00000000000000000000000000000000))) #b00000000000000000000000000000000) (fp #b0 #b01111111110 #b1001001000011111101100001101101111000000100110000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (store (store ((as const (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (fp.mul roundNearestTiesToEven (fp #b0 #b01111111111 #b1001001000011111101101000000000000000000000000000000) (select (arr!171 qq!69) #b00000000000000000000000000000000))) #b00000000000000000000000000000001 (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp #b0 #b01111111111 #b1001001000011111101101000000000000000000000000000000) (select (arr!171 qq!69) #b00000000000000000000000000000001)) (fp.mul roundNearestTiesToEven (fp #b0 #b01111100111 #b0100010001000010110100000000000000000000000000000000) (select (arr!171 qq!69) #b00000000000000000000000000000000)))) #b00000000000000000000000000000001)) (fp.leq (select (store (store ((as const (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (fp.mul roundNearestTiesToEven (fp #b0 #b01111111111 #b1001001000011111101101000000000000000000000000000000) (select (arr!171 qq!69) #b00000000000000000000000000000000))) #b00000000000000000000000000000001 (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp #b0 #b01111111111 #b1001001000011111101101000000000000000000000000000000) (select (arr!171 qq!69) #b00000000000000000000000000000001)) (fp.mul roundNearestTiesToEven (fp #b0 #b01111100111 #b0100010001000010110100000000000000000000000000000000) (select (arr!171 qq!69) #b00000000000000000000000000000000)))) #b00000000000000000000000000000001) (fp #b0 #b01111101000 #b0001101000100000100011001001010011001110101111100000)) (bvsge #b00000000000000000000000000000001 (size!171 qq!69))))))

(assert (= (and start!1117 res!4114) b!5241))

(assert (= (and b!5241 res!4115) b!5242))

(declare-fun m!8003 () Bool)

(assert (=> start!1117 m!8003))

(declare-fun m!8005 () Bool)

(assert (=> b!5241 m!8005))

(declare-fun m!8007 () Bool)

(assert (=> b!5242 m!8007))

(declare-fun m!8009 () Bool)

(assert (=> b!5242 m!8009))

(declare-fun m!8011 () Bool)

(assert (=> b!5242 m!8011))

(declare-fun m!8013 () Bool)

(assert (=> b!5242 m!8013))

(declare-fun m!8015 () Bool)

(assert (=> b!5242 m!8015))

(declare-fun m!8017 () Bool)

(assert (=> b!5242 m!8017))

(check-sat (not b!5241) (not start!1117))
(check-sat)
