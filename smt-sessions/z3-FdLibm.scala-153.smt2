; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!1103 () Bool)

(assert start!1103)

(declare-fun res!3776 () Bool)

(declare-fun e!2598 () Bool)

(assert (=> start!1103 (=> (not res!3776) (not e!2598))))

(declare-fun jz!67 () (_ BitVec 32))

(declare-datatypes ((array!392 0))(
  ( (array!393 (arr!171 (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (size!171 (_ BitVec 32))) )
))
(declare-fun qq!69 () array!392)

(assert (=> start!1103 (= res!3776 (and (bvsle #b00000000000000000000000000000000 jz!67) (bvslt jz!67 #b00000000000000000000000000010100) (= (size!171 qq!69) #b00000000000000000000000000010100)))))

(assert (=> start!1103 e!2598))

(assert (=> start!1103 true))

(declare-fun array_inv!121 (array!392) Bool)

(assert (=> start!1103 (array_inv!121 qq!69)))

(declare-fun b!4873 () Bool)

(declare-fun res!3777 () Bool)

(assert (=> b!4873 (=> (not res!3777) (not e!2598))))

(declare-fun qqInv!0 (array!392) Bool)

(assert (=> b!4873 (= res!3777 (qqInv!0 qq!69))))

(declare-fun b!4874 () Bool)

(assert (=> b!4874 (= e!2598 (and (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (store ((as const (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (fp.mul roundNearestTiesToEven (fp #b0 #b01111111111 #b1001001000011111101101000000000000000000000000000000) (select (arr!171 qq!69) #b00000000000000000000000000000000))) #b00000000000000000000000000000000)) (fp.leq (select (store ((as const (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (fp.mul roundNearestTiesToEven (fp #b0 #b01111111111 #b1001001000011111101101000000000000000000000000000000) (select (arr!171 qq!69) #b00000000000000000000000000000000))) #b00000000000000000000000000000000) (fp #b0 #b01111111110 #b1001001000011111101100001101101111000000100110000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (store (store ((as const (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (fp.mul roundNearestTiesToEven (fp #b0 #b01111111111 #b1001001000011111101101000000000000000000000000000000) (select (arr!171 qq!69) #b00000000000000000000000000000000))) #b00000000000000000000000000000001 (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp #b0 #b01111111111 #b1001001000011111101101000000000000000000000000000000) (select (arr!171 qq!69) #b00000000000000000000000000000001)) (fp.mul roundNearestTiesToEven (fp #b0 #b01111100111 #b0100010001000010110100000000000000000000000000000000) (select (arr!171 qq!69) #b00000000000000000000000000000000)))) #b00000000000000000000000000000001)) (fp.leq (select (store (store ((as const (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (fp.mul roundNearestTiesToEven (fp #b0 #b01111111111 #b1001001000011111101101000000000000000000000000000000) (select (arr!171 qq!69) #b00000000000000000000000000000000))) #b00000000000000000000000000000001 (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp #b0 #b01111111111 #b1001001000011111101101000000000000000000000000000000) (select (arr!171 qq!69) #b00000000000000000000000000000001)) (fp.mul roundNearestTiesToEven (fp #b0 #b01111100111 #b0100010001000010110100000000000000000000000000000000) (select (arr!171 qq!69) #b00000000000000000000000000000000)))) #b00000000000000000000000000000001) (fp #b0 #b01111101000 #b0001101000100000100011001001010011001110101111100000)) (bvsge #b00000000000000000000000000000001 (size!171 qq!69))))))

(assert (= (and start!1103 res!3776) b!4873))

(assert (= (and b!4873 res!3777) b!4874))

(declare-fun m!6323 () Bool)

(assert (=> start!1103 m!6323))

(declare-fun m!6325 () Bool)

(assert (=> b!4873 m!6325))

(declare-fun m!6327 () Bool)

(assert (=> b!4874 m!6327))

(declare-fun m!6329 () Bool)

(assert (=> b!4874 m!6329))

(declare-fun m!6331 () Bool)

(assert (=> b!4874 m!6331))

(declare-fun m!6333 () Bool)

(assert (=> b!4874 m!6333))

(declare-fun m!6335 () Bool)

(assert (=> b!4874 m!6335))

(declare-fun m!6337 () Bool)

(assert (=> b!4874 m!6337))

(check-sat (not b!4873) (not start!1103))
(check-sat)
