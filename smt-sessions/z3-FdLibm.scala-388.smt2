; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!2149 () Bool)

(assert start!2149)

(declare-fun b!10817 () Bool)

(declare-datatypes ((tuple2!98 0))(
  ( (tuple2!99 (_1!254 (_ FloatingPoint 11 53)) (_2!254 (_ FloatingPoint 11 53))) )
))
(declare-fun e!6136 () tuple2!98)

(declare-fun call!20 () tuple2!98)

(assert (=> b!10817 (= e!6136 call!20)))

(declare-fun b!10818 () Bool)

(declare-fun res!8668 () Bool)

(declare-fun e!6138 () Bool)

(assert (=> b!10818 (=> (not res!8668) (not e!6138))))

(declare-fun i!347 () (_ BitVec 32))

(declare-fun s!25 () (_ FloatingPoint 11 53))

(declare-fun jz!77 () (_ BitVec 32))

(declare-fun c!23 () (_ FloatingPoint 11 53))

(assert (=> b!10818 (= res!8668 (and (bvsle #b00000000000000000000000000000000 jz!77) (bvslt jz!77 #b00000000000000000000000000010100) (bvsle #b11111111111111111111111111111111 i!347) (bvsle i!347 (bvsub jz!77 #b00000000000000000000000000000001)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) s!25) (fp.leq s!25 (select (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (fp #b0 #b01111111110 #b1001001000011111101101010100010001000010110100011000)) #b00000000000000000000000000000001 (fp #b0 #b01111101000 #b0001101000100000100011100110000100011010011000100110)) #b00000000000000000000000000001010 (fp #b0 #b01100010001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001011 (fp #b0 #b01011111001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001100 (fp #b0 #b01011100001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001101 (fp #b0 #b01011001001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001110 (fp #b0 #b01010110001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001111 (fp #b0 #b01010011001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000010000 (fp #b0 #b01010000001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000010001 (fp #b0 #b01001101001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000010010 (fp #b0 #b01001010001 #b1011101001010010010101100111111111111111111111100100)) #b00000000000000000000000000010011 (fp #b0 #b01000111001 #b1011101001010010010101001100010110101101101010011000)) #b00000000000000000000000000000010 (fp #b0 #b01111010000 #b1100110001001011101001000110001100110001010001011100)) #b00000000000000000000000000000011 (fp #b0 #b01110111001 #b0100100001001011101001011110000000110111000001110000)) #b00000000000000000000000000000100 (fp #b0 #b01110100001 #b1001101000011011010011111000000000000000000000000000)) #b00000000000000000000000000000101 (fp #b0 #b01110001001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000000110 (fp #b0 #b01101110001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000000111 (fp #b0 #b01101011001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001000 (fp #b0 #b01101000001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001001 (fp #b0 #b01100101001 #b1011101001010010010101101000000000000000000000000000)) (bvadd i!347 #b00000000000000000000000000000001))) (fp.eq (fp.add roundNearestTiesToEven s!25 c!23) s!25) (bvsge i!347 #b00000000000000000000000000000000) (fp.leq s!25 (fp #b0 #b01111111111 #b0000000000000000000000000000000000000000000000000000))))))

(declare-fun b!10819 () Bool)

(declare-fun e!6137 () Bool)

(declare-fun lt!5487 () (_ BitVec 32))

(assert (=> b!10819 (= e!6137 (and (bvsge lt!5487 #b00000000000000000000000000000000) (bvslt lt!5487 #b00000000000000000000000000000000)))))

(assert (=> b!10819 (= lt!5487 (bvsub i!347 #b00000000000000000000000000000001))))

(declare-fun lt!5489 () tuple2!98)

(declare-fun lt!5488 () tuple2!98)

(declare-fun fast2Sum!0 ((_ FloatingPoint 11 53) (_ FloatingPoint 11 53)) tuple2!98)

(assert (=> b!10819 (= lt!5489 (fast2Sum!0 (_1!254 lt!5488) (fp.add roundNearestTiesToEven c!23 (_2!254 lt!5488))))))

(declare-fun res!8667 () Bool)

(assert (=> start!2149 (=> (not res!8667) (not e!6138))))

(declare-datatypes ((array!788 0))(
  ( (array!789 (arr!345 (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (size!345 (_ BitVec 32))) )
))
(declare-fun fq!120 () array!788)

(assert (=> start!2149 (= res!8667 (= (size!345 fq!120) #b00000000000000000000000000010100))))

(assert (=> start!2149 e!6138))

(assert (=> start!2149 true))

(declare-fun array_inv!294 (array!788) Bool)

(assert (=> start!2149 (array_inv!294 fq!120)))

(declare-fun b!10820 () Bool)

(assert (=> b!10820 (= e!6136 call!20)))

(declare-fun b!10821 () Bool)

(assert (=> b!10821 (= e!6138 e!6137)))

(declare-fun res!8670 () Bool)

(assert (=> b!10821 (=> (not res!8670) (not e!6137))))

(assert (=> b!10821 (= res!8670 (fp.geq (_1!254 lt!5488) (fp.add roundNearestTiesToEven c!23 (_2!254 lt!5488))))))

(assert (=> b!10821 (= lt!5488 e!6136)))

(declare-fun c!1284 () Bool)

(assert (=> b!10821 (= c!1284 (fp.geq s!25 (select (arr!345 fq!120) i!347)))))

(declare-fun bm!17 () Bool)

(assert (=> bm!17 (= call!20 (fast2Sum!0 (ite c!1284 s!25 (select (arr!345 fq!120) i!347)) (ite c!1284 (select (arr!345 fq!120) i!347) s!25)))))

(declare-fun b!10822 () Bool)

(declare-fun res!8669 () Bool)

(assert (=> b!10822 (=> (not res!8669) (not e!6138))))

(declare-fun fqInv!0 (array!788) Bool)

(assert (=> b!10822 (= res!8669 (fqInv!0 fq!120))))

(assert (= (and start!2149 res!8667) b!10822))

(assert (= (and b!10822 res!8669) b!10818))

(assert (= (and b!10818 res!8668) b!10821))

(assert (= (and b!10821 c!1284) b!10817))

(assert (= (and b!10821 (not c!1284)) b!10820))

(assert (= (or b!10817 b!10820) bm!17))

(assert (= (and b!10821 res!8670) b!10819))

(declare-fun m!16769 () Bool)

(assert (=> b!10821 m!16769))

(declare-fun m!16771 () Bool)

(assert (=> start!2149 m!16771))

(declare-fun m!16773 () Bool)

(assert (=> b!10822 m!16773))

(assert (=> bm!17 m!16769))

(declare-fun m!16775 () Bool)

(assert (=> bm!17 m!16775))

(declare-fun m!16777 () Bool)

(assert (=> b!10818 m!16777))

(declare-fun m!16779 () Bool)

(assert (=> b!10819 m!16779))

(check-sat (not b!10819) (not b!10822) (not bm!17) (not start!2149))
(check-sat)
