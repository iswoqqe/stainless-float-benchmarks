; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!2465 () Bool)

(assert start!2465)

(declare-datatypes ((array!996 0))(
  ( (array!997 (arr!437 (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (size!437 (_ BitVec 32))) )
))
(declare-fun qq!34 () array!996)

(assert (=> start!2465 (and (= (size!437 qq!34) #b00000000000000000000000000010100) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!437 qq!34) #b00000000000000000000000000000000)) (fp.leq (select (arr!437 qq!34) #b00000000000000000000000000000000) (fp #b0 #b01111111101 #b1111111111111111111111000000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!437 qq!34) #b00000000000000000000000000000001)) (fp.leq (select (arr!437 qq!34) #b00000000000000000000000000000001) (fp #b0 #b01111100110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!437 qq!34) #b00000000000000000000000000000010)) (fp.leq (select (arr!437 qq!34) #b00000000000000000000000000000010) (fp #b0 #b01111001110 #b1111111111111111111111100000000000000000000000000000)) (bvsge #b00000000000000000000000000000011 (size!437 qq!34)))))

(declare-fun array_inv!386 (array!996) Bool)

(assert (=> start!2465 (array_inv!386 qq!34)))

(declare-fun bs!2330 () Bool)

(assert (= bs!2330 start!2465))

(declare-fun m!19609 () Bool)

(assert (=> bs!2330 m!19609))

(declare-fun m!19611 () Bool)

(assert (=> bs!2330 m!19611))

(declare-fun m!19613 () Bool)

(assert (=> bs!2330 m!19613))

(declare-fun m!19615 () Bool)

(assert (=> bs!2330 m!19615))

(check-sat (not start!2465))
(check-sat)
