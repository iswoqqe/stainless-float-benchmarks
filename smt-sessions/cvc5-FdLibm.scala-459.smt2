; Options: -q --produce-models --incremental --print-success --lang smt2.6 --arrays-exp
(set-logic ALL)

(declare-fun start!2637 () Bool)

(assert start!2637)

(declare-datatypes ((array!1024 0))(
  ( (array!1025 (arr!446 (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (size!446 (_ BitVec 32))) )
))
(declare-fun qq!34 () array!1024)

(assert (=> start!2637 (and (= (size!446 qq!34) #b00000000000000000000000000010100) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!446 qq!34) #b00000000000000000000000000000000)) (fp.leq (select (arr!446 qq!34) #b00000000000000000000000000000000) (fp #b0 #b01111111101 #b1111111111111111111111000000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!446 qq!34) #b00000000000000000000000000000001)) (fp.leq (select (arr!446 qq!34) #b00000000000000000000000000000001) (fp #b0 #b01111100110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!446 qq!34) #b00000000000000000000000000000010)) (fp.leq (select (arr!446 qq!34) #b00000000000000000000000000000010) (fp #b0 #b01111001110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!446 qq!34) #b00000000000000000000000000000011)) (fp.leq (select (arr!446 qq!34) #b00000000000000000000000000000011) (fp #b0 #b01110110110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!446 qq!34) #b00000000000000000000000000000100)) (fp.leq (select (arr!446 qq!34) #b00000000000000000000000000000100) (fp #b0 #b01110011110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!446 qq!34) #b00000000000000000000000000000101)) (fp.leq (select (arr!446 qq!34) #b00000000000000000000000000000101) (fp #b0 #b01110000110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!446 qq!34) #b00000000000000000000000000000110)) (fp.leq (select (arr!446 qq!34) #b00000000000000000000000000000110) (fp #b0 #b01101101110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!446 qq!34) #b00000000000000000000000000000111)) (bvsge #b00000000000000000000000000000111 (size!446 qq!34)))))

(declare-fun array_inv!395 (array!1024) Bool)

(assert (=> start!2637 (array_inv!395 qq!34)))

(declare-fun bs!2890 () Bool)

(assert (= bs!2890 start!2637))

(declare-fun m!22565 () Bool)

(assert (=> bs!2890 m!22565))

(declare-fun m!22567 () Bool)

(assert (=> bs!2890 m!22567))

(declare-fun m!22569 () Bool)

(assert (=> bs!2890 m!22569))

(declare-fun m!22571 () Bool)

(assert (=> bs!2890 m!22571))

(declare-fun m!22573 () Bool)

(assert (=> bs!2890 m!22573))

(declare-fun m!22575 () Bool)

(assert (=> bs!2890 m!22575))

(declare-fun m!22577 () Bool)

(assert (=> bs!2890 m!22577))

(declare-fun m!22579 () Bool)

(assert (=> bs!2890 m!22579))

(declare-fun m!22581 () Bool)

(assert (=> bs!2890 m!22581))

(push 1)

(assert (not start!2637))

(check-sat)

(pop 1)

(push 1)

(check-sat)

(pop 1)

