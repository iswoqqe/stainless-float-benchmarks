; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!3053 () Bool)

(assert start!3053)

(declare-datatypes ((array!1456 0))(
  ( (array!1457 (arr!645 (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (size!645 (_ BitVec 32))) )
))
(declare-fun fq!41 () array!1456)

(assert (=> start!3053 (and (= (size!645 fq!41) #b00000000000000000000000000010100) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!645 fq!41) #b00000000000000000000000000000000)) (fp.leq (select (arr!645 fq!41) #b00000000000000000000000000000000) (fp #b0 #b01111111110 #b1001001000011111101100001101101111000000100110000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!645 fq!41) #b00000000000000000000000000000001)) (fp.leq (select (arr!645 fq!41) #b00000000000000000000000000000001) (fp #b0 #b01111101000 #b0001101000100000100011001001010011001110101111100000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!645 fq!41) #b00000000000000000000000000000010)) (fp.leq (select (arr!645 fq!41) #b00000000000000000000000000000010) (fp #b0 #b01111010000 #b1100110001001011101000011101001010011001111110100000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!645 fq!41) #b00000000000000000000000000000011)) (fp.leq (select (arr!645 fq!41) #b00000000000000000000000000000011) (fp #b0 #b01110111001 #b0100100001001011101001000100011000011011101101111000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!645 fq!41) #b00000000000000000000000000000100)) (fp.leq (select (arr!645 fq!41) #b00000000000000000000000000000100) (fp #b0 #b01110100001 #b1001101000011011010011011100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!645 fq!41) #b00000000000000000000000000000101)) (fp.leq (select (arr!645 fq!41) #b00000000000000000000000000000101) (fp #b0 #b01110001001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!645 fq!41) #b00000000000000000000000000000110)) (fp.leq (select (arr!645 fq!41) #b00000000000000000000000000000110) (fp #b0 #b01101110001 #b1011101001010010010101001100010110101101101010011000)) (bvsge #b00000000000000000000000000000111 (size!645 fq!41)))))

(declare-fun array_inv!593 (array!1456) Bool)

(assert (=> start!3053 (array_inv!593 fq!41)))

(declare-fun bs!3042 () Bool)

(assert (= bs!3042 start!3053))

(declare-fun m!26257 () Bool)

(assert (=> bs!3042 m!26257))

(declare-fun m!26259 () Bool)

(assert (=> bs!3042 m!26259))

(declare-fun m!26261 () Bool)

(assert (=> bs!3042 m!26261))

(declare-fun m!26263 () Bool)

(assert (=> bs!3042 m!26263))

(declare-fun m!26265 () Bool)

(assert (=> bs!3042 m!26265))

(declare-fun m!26267 () Bool)

(assert (=> bs!3042 m!26267))

(declare-fun m!26269 () Bool)

(assert (=> bs!3042 m!26269))

(declare-fun m!26271 () Bool)

(assert (=> bs!3042 m!26271))

(check-sat (not start!3053))
(check-sat)
