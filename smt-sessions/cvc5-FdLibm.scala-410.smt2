; Options: -q --produce-models --incremental --print-success --lang smt2.6 --arrays-exp
(set-logic ALL)

(declare-fun start!2375 () Bool)

(assert start!2375)

(declare-fun b!12054 () Bool)

(declare-datatypes ((tuple2!134 0))(
  ( (tuple2!135 (_1!277 (_ FloatingPoint 11 53)) (_2!277 (_ FloatingPoint 11 53))) )
))
(declare-fun e!6636 () tuple2!134)

(declare-fun call!65 () tuple2!134)

(assert (=> b!12054 (= e!6636 call!65)))

(declare-fun b!12055 () Bool)

(declare-fun e!6635 () Bool)

(declare-fun lt!5890 () (_ BitVec 32))

(assert (=> b!12055 (= e!6635 (and (bvslt lt!5890 #b00000000000000000000000000000000) (bvsge lt!5890 #b00000000000000000000000000000000)))))

(declare-fun i!347 () (_ BitVec 32))

(assert (=> b!12055 (= lt!5890 (bvsub i!347 #b00000000000000000000000000000001))))

(declare-fun lt!5888 () tuple2!134)

(declare-fun lt!5889 () tuple2!134)

(declare-fun c!23 () (_ FloatingPoint 11 53))

(declare-fun fast2Sum!0 ((_ FloatingPoint 11 53) (_ FloatingPoint 11 53)) tuple2!134)

(assert (=> b!12055 (= lt!5888 (fast2Sum!0 (_1!277 lt!5889) (fp.add roundNearestTiesToEven c!23 (_2!277 lt!5889))))))

(declare-fun res!9678 () Bool)

(declare-fun e!6634 () Bool)

(assert (=> start!2375 (=> (not res!9678) (not e!6634))))

(declare-datatypes ((array!846 0))(
  ( (array!847 (arr!367 (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (size!367 (_ BitVec 32))) )
))
(declare-fun fq!120 () array!846)

(assert (=> start!2375 (= res!9678 (= (size!367 fq!120) #b00000000000000000000000000010100))))

(assert (=> start!2375 e!6634))

(assert (=> start!2375 true))

(declare-fun array_inv!316 (array!846) Bool)

(assert (=> start!2375 (array_inv!316 fq!120)))

(declare-fun c!1399 () Bool)

(declare-fun bm!62 () Bool)

(declare-fun s!25 () (_ FloatingPoint 11 53))

(assert (=> bm!62 (= call!65 (fast2Sum!0 (ite c!1399 s!25 (select (arr!367 fq!120) i!347)) (ite c!1399 (select (arr!367 fq!120) i!347) s!25)))))

(declare-fun b!12056 () Bool)

(assert (=> b!12056 (= e!6634 e!6635)))

(declare-fun res!9681 () Bool)

(assert (=> b!12056 (=> (not res!9681) (not e!6635))))

(assert (=> b!12056 (= res!9681 (fp.geq (_1!277 lt!5889) (fp.add roundNearestTiesToEven c!23 (_2!277 lt!5889))))))

(assert (=> b!12056 (= lt!5889 e!6636)))

(assert (=> b!12056 (= c!1399 (fp.geq s!25 (select (arr!367 fq!120) i!347)))))

(declare-fun b!12057 () Bool)

(assert (=> b!12057 (= e!6636 call!65)))

(declare-fun b!12058 () Bool)

(declare-fun res!9679 () Bool)

(assert (=> b!12058 (=> (not res!9679) (not e!6634))))

(declare-fun fqInv!0 (array!846) Bool)

(assert (=> b!12058 (= res!9679 (fqInv!0 fq!120))))

(declare-fun b!12059 () Bool)

(declare-fun res!9680 () Bool)

(assert (=> b!12059 (=> (not res!9680) (not e!6634))))

(declare-fun jz!77 () (_ BitVec 32))

(assert (=> b!12059 (= res!9680 (and (bvsle #b00000000000000000000000000000000 jz!77) (bvslt jz!77 #b00000000000000000000000000010100) (bvsle #b11111111111111111111111111111111 i!347) (bvsle i!347 (bvsub jz!77 #b00000000000000000000000000000001)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) s!25) (fp.leq s!25 (select (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (fp #b0 #b01111111110 #b1001001000011111101101010100010001000010110100011000)) #b00000000000000000000000000000001 (fp #b0 #b01111101000 #b0001101000100000100011100110000100011010011000100110)) #b00000000000000000000000000001010 (fp #b0 #b01100010001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001011 (fp #b0 #b01011111001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001100 (fp #b0 #b01011100001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001101 (fp #b0 #b01011001001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001110 (fp #b0 #b01010110001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001111 (fp #b0 #b01010011001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000010000 (fp #b0 #b01010000001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000010001 (fp #b0 #b01001101001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000010010 (fp #b0 #b01001010001 #b1011101001010010010101100111111111111111111111100100)) #b00000000000000000000000000010011 (fp #b0 #b01000111001 #b1011101001010010010101001100010110101101101010011000)) #b00000000000000000000000000000010 (fp #b0 #b01111010000 #b1100110001001011101001000110001100110001010001011100)) #b00000000000000000000000000000011 (fp #b0 #b01110111001 #b0100100001001011101001011110000000110111000001110000)) #b00000000000000000000000000000100 (fp #b0 #b01110100001 #b1001101000011011010011111000000000000000000000000000)) #b00000000000000000000000000000101 (fp #b0 #b01110001001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000000110 (fp #b0 #b01101110001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000000111 (fp #b0 #b01101011001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001000 (fp #b0 #b01101000001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001001 (fp #b0 #b01100101001 #b1011101001010010010101101000000000000000000000000000)) (bvadd i!347 #b00000000000000000000000000000001))) (fp.eq (fp.add roundNearestTiesToEven s!25 c!23) s!25) (bvsge i!347 #b00000000000000000000000000000000) (fp.leq s!25 (fp #b0 #b01111111111 #b0000000000000000000000000000000000000000000000000000))))))

(assert (= (and start!2375 res!9678) b!12058))

(assert (= (and b!12058 res!9679) b!12059))

(assert (= (and b!12059 res!9680) b!12056))

(assert (= (and b!12056 c!1399) b!12054))

(assert (= (and b!12056 (not c!1399)) b!12057))

(assert (= (or b!12054 b!12057) bm!62))

(assert (= (and b!12056 res!9681) b!12055))

(declare-fun m!20017 () Bool)

(assert (=> bm!62 m!20017))

(declare-fun m!20019 () Bool)

(assert (=> bm!62 m!20019))

(declare-fun m!20021 () Bool)

(assert (=> start!2375 m!20021))

(declare-fun m!20023 () Bool)

(assert (=> b!12058 m!20023))

(declare-fun m!20025 () Bool)

(assert (=> b!12059 m!20025))

(assert (=> b!12056 m!20017))

(declare-fun m!20027 () Bool)

(assert (=> b!12055 m!20027))

(push 1)

(assert (not start!2375))

(assert (not bm!62))

(assert (not b!12055))

(assert (not b!12058))

(check-sat)

(pop 1)

(push 1)

(check-sat)

(pop 1)

