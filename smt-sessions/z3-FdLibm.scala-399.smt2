; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!2147 () Bool)

(assert start!2147)

(declare-fun b!10531 () Bool)

(declare-fun e!6137 () Bool)

(declare-fun i!347 () (_ BitVec 32))

(assert (=> b!10531 (= e!6137 (and (not (= (bvand i!347 #b10000000000000000000000000000000) #b00000000000000000000000000000000)) (not (= (bvand i!347 #b10000000000000000000000000000000) (bvand (bvsub i!347 #b00000000000000000000000000000001) #b10000000000000000000000000000000)))))))

(declare-datatypes ((tuple2!102 0))(
  ( (tuple2!103 (_1!256 (_ FloatingPoint 11 53)) (_2!256 (_ FloatingPoint 11 53))) )
))
(declare-fun lt!5432 () tuple2!102)

(declare-fun lt!5431 () tuple2!102)

(declare-fun c!23 () (_ FloatingPoint 11 53))

(declare-fun fast2Sum!0 ((_ FloatingPoint 11 53) (_ FloatingPoint 11 53)) tuple2!102)

(assert (=> b!10531 (= lt!5432 (fast2Sum!0 (_1!256 lt!5431) (fp.add roundNearestTiesToEven c!23 (_2!256 lt!5431))))))

(declare-fun b!10532 () Bool)

(declare-fun res!8405 () Bool)

(declare-fun e!6136 () Bool)

(assert (=> b!10532 (=> (not res!8405) (not e!6136))))

(declare-datatypes ((array!808 0))(
  ( (array!809 (arr!356 (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (size!356 (_ BitVec 32))) )
))
(declare-fun fq!120 () array!808)

(declare-fun fqInv!0 (array!808) Bool)

(assert (=> b!10532 (= res!8405 (fqInv!0 fq!120))))

(declare-fun call!26 () tuple2!102)

(declare-fun bm!23 () Bool)

(declare-fun c!1272 () Bool)

(declare-fun s!25 () (_ FloatingPoint 11 53))

(assert (=> bm!23 (= call!26 (fast2Sum!0 (ite c!1272 s!25 (select (arr!356 fq!120) i!347)) (ite c!1272 (select (arr!356 fq!120) i!347) s!25)))))

(declare-fun b!10533 () Bool)

(declare-fun e!6138 () tuple2!102)

(assert (=> b!10533 (= e!6138 call!26)))

(declare-fun b!10534 () Bool)

(declare-fun res!8404 () Bool)

(assert (=> b!10534 (=> (not res!8404) (not e!6136))))

(declare-fun jz!77 () (_ BitVec 32))

(assert (=> b!10534 (= res!8404 (and (bvsle #b00000000000000000000000000000000 jz!77) (bvslt jz!77 #b00000000000000000000000000010100) (bvsle #b11111111111111111111111111111111 i!347) (bvsle i!347 (bvsub jz!77 #b00000000000000000000000000000001)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) s!25) (fp.leq s!25 (select (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (fp #b0 #b01111111110 #b1001001000011111101101010100010001000010110100011000)) #b00000000000000000000000000000001 (fp #b0 #b01111101000 #b0001101000100000100011100110000100011010011000100110)) #b00000000000000000000000000001010 (fp #b0 #b01100010001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001011 (fp #b0 #b01011111001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001100 (fp #b0 #b01011100001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001101 (fp #b0 #b01011001001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001110 (fp #b0 #b01010110001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001111 (fp #b0 #b01010011001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000010000 (fp #b0 #b01010000001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000010001 (fp #b0 #b01001101001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000010010 (fp #b0 #b01001010001 #b1011101001010010010101100111111111111111111111100100)) #b00000000000000000000000000010011 (fp #b0 #b01000111001 #b1011101001010010010101001100010110101101101010011000)) #b00000000000000000000000000000010 (fp #b0 #b01111010000 #b1100110001001011101001000110001100110001010001011100)) #b00000000000000000000000000000011 (fp #b0 #b01110111001 #b0100100001001011101001011110000000110111000001110000)) #b00000000000000000000000000000100 (fp #b0 #b01110100001 #b1001101000011011010011111000000000000000000000000000)) #b00000000000000000000000000000101 (fp #b0 #b01110001001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000000110 (fp #b0 #b01101110001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000000111 (fp #b0 #b01101011001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001000 (fp #b0 #b01101000001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001001 (fp #b0 #b01100101001 #b1011101001010010010101101000000000000000000000000000)) (bvadd i!347 #b00000000000000000000000000000001))) (fp.eq (fp.add roundNearestTiesToEven s!25 c!23) s!25) (bvsge i!347 #b00000000000000000000000000000000) (fp.leq s!25 (fp #b0 #b01111111111 #b0000000000000000000000000000000000000000000000000000))))))

(declare-fun b!10535 () Bool)

(assert (=> b!10535 (= e!6136 e!6137)))

(declare-fun res!8406 () Bool)

(assert (=> b!10535 (=> (not res!8406) (not e!6137))))

(assert (=> b!10535 (= res!8406 (fp.geq (_1!256 lt!5431) (fp.add roundNearestTiesToEven c!23 (_2!256 lt!5431))))))

(assert (=> b!10535 (= lt!5431 e!6138)))

(assert (=> b!10535 (= c!1272 (fp.geq s!25 (select (arr!356 fq!120) i!347)))))

(declare-fun res!8407 () Bool)

(assert (=> start!2147 (=> (not res!8407) (not e!6136))))

(assert (=> start!2147 (= res!8407 (= (size!356 fq!120) #b00000000000000000000000000010100))))

(assert (=> start!2147 e!6136))

(assert (=> start!2147 true))

(declare-fun array_inv!305 (array!808) Bool)

(assert (=> start!2147 (array_inv!305 fq!120)))

(declare-fun b!10536 () Bool)

(assert (=> b!10536 (= e!6138 call!26)))

(assert (= (and start!2147 res!8407) b!10532))

(assert (= (and b!10532 res!8405) b!10534))

(assert (= (and b!10534 res!8404) b!10535))

(assert (= (and b!10535 c!1272) b!10536))

(assert (= (and b!10535 (not c!1272)) b!10533))

(assert (= (or b!10536 b!10533) bm!23))

(assert (= (and b!10535 res!8406) b!10531))

(declare-fun m!15057 () Bool)

(assert (=> bm!23 m!15057))

(declare-fun m!15059 () Bool)

(assert (=> bm!23 m!15059))

(declare-fun m!15061 () Bool)

(assert (=> start!2147 m!15061))

(declare-fun m!15063 () Bool)

(assert (=> b!10531 m!15063))

(declare-fun m!15065 () Bool)

(assert (=> b!10534 m!15065))

(assert (=> b!10535 m!15057))

(declare-fun m!15067 () Bool)

(assert (=> b!10532 m!15067))

(check-sat (not bm!23) (not b!10531) (not b!10532) (not start!2147))
(check-sat)
