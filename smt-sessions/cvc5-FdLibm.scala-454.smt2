; Options: -q --produce-models --incremental --print-success --lang smt2.6 --arrays-exp
(set-logic ALL)

(declare-fun start!2627 () Bool)

(assert start!2627)

(declare-datatypes ((array!1014 0))(
  ( (array!1015 (arr!441 (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (size!441 (_ BitVec 32))) )
))
(declare-fun qq!34 () array!1014)

(assert (=> start!2627 (and (= (size!441 qq!34) #b00000000000000000000000000010100) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!441 qq!34) #b00000000000000000000000000000000)) (fp.leq (select (arr!441 qq!34) #b00000000000000000000000000000000) (fp #b0 #b01111111101 #b1111111111111111111111000000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!441 qq!34) #b00000000000000000000000000000001)) (fp.leq (select (arr!441 qq!34) #b00000000000000000000000000000001) (fp #b0 #b01111100110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!441 qq!34) #b00000000000000000000000000000010)) (fp.leq (select (arr!441 qq!34) #b00000000000000000000000000000010) (fp #b0 #b01111001110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!441 qq!34) #b00000000000000000000000000000011)) (fp.leq (select (arr!441 qq!34) #b00000000000000000000000000000011) (fp #b0 #b01110110110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!441 qq!34) #b00000000000000000000000000000100)) (fp.leq (select (arr!441 qq!34) #b00000000000000000000000000000100) (fp #b0 #b01110011110 #b1111111111111111111111100000000000000000000000000000)) (bvsge #b00000000000000000000000000000101 (size!441 qq!34)))))

(declare-fun array_inv!390 (array!1014) Bool)

(assert (=> start!2627 (array_inv!390 qq!34)))

(declare-fun bs!2880 () Bool)

(assert (= bs!2880 start!2627))

(declare-fun m!22493 () Bool)

(assert (=> bs!2880 m!22493))

(declare-fun m!22495 () Bool)

(assert (=> bs!2880 m!22495))

(declare-fun m!22497 () Bool)

(assert (=> bs!2880 m!22497))

(declare-fun m!22499 () Bool)

(assert (=> bs!2880 m!22499))

(declare-fun m!22501 () Bool)

(assert (=> bs!2880 m!22501))

(declare-fun m!22503 () Bool)

(assert (=> bs!2880 m!22503))

(push 1)

(assert (not start!2627))

(check-sat)

(pop 1)

(push 1)

(check-sat)

(pop 1)

