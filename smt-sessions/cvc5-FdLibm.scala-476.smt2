; Options: -q --produce-models --incremental --print-success --lang smt2.6 --arrays-exp
(set-logic ALL)

(declare-fun start!2671 () Bool)

(assert start!2671)

(declare-datatypes ((array!1058 0))(
  ( (array!1059 (arr!463 (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (size!463 (_ BitVec 32))) )
))
(declare-fun qq!34 () array!1058)

(assert (=> start!2671 (and (= (size!463 qq!34) #b00000000000000000000000000010100) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!463 qq!34) #b00000000000000000000000000000000)) (fp.leq (select (arr!463 qq!34) #b00000000000000000000000000000000) (fp #b0 #b01111111101 #b1111111111111111111111000000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!463 qq!34) #b00000000000000000000000000000001)) (fp.leq (select (arr!463 qq!34) #b00000000000000000000000000000001) (fp #b0 #b01111100110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!463 qq!34) #b00000000000000000000000000000010)) (fp.leq (select (arr!463 qq!34) #b00000000000000000000000000000010) (fp #b0 #b01111001110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!463 qq!34) #b00000000000000000000000000000011)) (fp.leq (select (arr!463 qq!34) #b00000000000000000000000000000011) (fp #b0 #b01110110110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!463 qq!34) #b00000000000000000000000000000100)) (fp.leq (select (arr!463 qq!34) #b00000000000000000000000000000100) (fp #b0 #b01110011110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!463 qq!34) #b00000000000000000000000000000101)) (fp.leq (select (arr!463 qq!34) #b00000000000000000000000000000101) (fp #b0 #b01110000110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!463 qq!34) #b00000000000000000000000000000110)) (fp.leq (select (arr!463 qq!34) #b00000000000000000000000000000110) (fp #b0 #b01101101110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!463 qq!34) #b00000000000000000000000000000111)) (fp.leq (select (arr!463 qq!34) #b00000000000000000000000000000111) (fp #b0 #b01101010110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!463 qq!34) #b00000000000000000000000000001000)) (fp.leq (select (arr!463 qq!34) #b00000000000000000000000000001000) (fp #b0 #b01100111110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!463 qq!34) #b00000000000000000000000000001001)) (fp.leq (select (arr!463 qq!34) #b00000000000000000000000000001001) (fp #b0 #b01100100110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!463 qq!34) #b00000000000000000000000000001010)) (fp.leq (select (arr!463 qq!34) #b00000000000000000000000000001010) (fp #b0 #b01100001110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!463 qq!34) #b00000000000000000000000000001011)) (fp.leq (select (arr!463 qq!34) #b00000000000000000000000000001011) (fp #b0 #b01011110110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!463 qq!34) #b00000000000000000000000000001100)) (fp.leq (select (arr!463 qq!34) #b00000000000000000000000000001100) (fp #b0 #b01011011110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!463 qq!34) #b00000000000000000000000000001101)) (fp.leq (select (arr!463 qq!34) #b00000000000000000000000000001101) (fp #b0 #b01011000110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!463 qq!34) #b00000000000000000000000000001110)) (fp.leq (select (arr!463 qq!34) #b00000000000000000000000000001110) (fp #b0 #b01010101110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!463 qq!34) #b00000000000000000000000000001111)) (fp.leq (select (arr!463 qq!34) #b00000000000000000000000000001111) (fp #b0 #b01010010110 #b1111111111111111111111100000000000000000000000000000)) (bvsge #b00000000000000000000000000010000 (size!463 qq!34)))))

(declare-fun array_inv!412 (array!1058) Bool)

(assert (=> start!2671 (array_inv!412 qq!34)))

(declare-fun bs!2924 () Bool)

(assert (= bs!2924 start!2671))

(declare-fun m!22999 () Bool)

(assert (=> bs!2924 m!22999))

(declare-fun m!23001 () Bool)

(assert (=> bs!2924 m!23001))

(declare-fun m!23003 () Bool)

(assert (=> bs!2924 m!23003))

(declare-fun m!23005 () Bool)

(assert (=> bs!2924 m!23005))

(declare-fun m!23007 () Bool)

(assert (=> bs!2924 m!23007))

(declare-fun m!23009 () Bool)

(assert (=> bs!2924 m!23009))

(declare-fun m!23011 () Bool)

(assert (=> bs!2924 m!23011))

(declare-fun m!23013 () Bool)

(assert (=> bs!2924 m!23013))

(declare-fun m!23015 () Bool)

(assert (=> bs!2924 m!23015))

(declare-fun m!23017 () Bool)

(assert (=> bs!2924 m!23017))

(declare-fun m!23019 () Bool)

(assert (=> bs!2924 m!23019))

(declare-fun m!23021 () Bool)

(assert (=> bs!2924 m!23021))

(declare-fun m!23023 () Bool)

(assert (=> bs!2924 m!23023))

(declare-fun m!23025 () Bool)

(assert (=> bs!2924 m!23025))

(declare-fun m!23027 () Bool)

(assert (=> bs!2924 m!23027))

(declare-fun m!23029 () Bool)

(assert (=> bs!2924 m!23029))

(declare-fun m!23031 () Bool)

(assert (=> bs!2924 m!23031))

(push 1)

(assert (not start!2671))

(check-sat)

(pop 1)

(push 1)

(check-sat)

(pop 1)

