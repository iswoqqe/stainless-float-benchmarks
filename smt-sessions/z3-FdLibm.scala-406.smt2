; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!2177 () Bool)

(assert start!2177)

(declare-fun b!10737 () Bool)

(declare-datatypes ((tuple2!116 0))(
  ( (tuple2!117 (_1!268 (_ FloatingPoint 11 53)) (_2!268 (_ FloatingPoint 11 53))) )
))
(declare-fun e!6261 () tuple2!116)

(declare-fun call!53 () tuple2!116)

(assert (=> b!10737 (= e!6261 call!53)))

(declare-fun i!347 () (_ BitVec 32))

(declare-fun s!25 () (_ FloatingPoint 11 53))

(declare-datatypes ((array!824 0))(
  ( (array!825 (arr!363 (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (size!363 (_ BitVec 32))) )
))
(declare-fun fq!120 () array!824)

(declare-fun bm!50 () Bool)

(declare-fun c!1309 () Bool)

(declare-fun fast2Sum!0 ((_ FloatingPoint 11 53) (_ FloatingPoint 11 53)) tuple2!116)

(assert (=> bm!50 (= call!53 (fast2Sum!0 (ite c!1309 s!25 (select (arr!363 fq!120) i!347)) (ite c!1309 (select (arr!363 fq!120) i!347) s!25)))))

(declare-fun res!8544 () Bool)

(declare-fun e!6260 () Bool)

(assert (=> start!2177 (=> (not res!8544) (not e!6260))))

(assert (=> start!2177 (= res!8544 (= (size!363 fq!120) #b00000000000000000000000000010100))))

(assert (=> start!2177 e!6260))

(assert (=> start!2177 true))

(declare-fun array_inv!312 (array!824) Bool)

(assert (=> start!2177 (array_inv!312 fq!120)))

(declare-fun b!10738 () Bool)

(declare-fun e!6262 () Bool)

(assert (=> b!10738 (= e!6260 e!6262)))

(declare-fun res!8545 () Bool)

(assert (=> b!10738 (=> (not res!8545) (not e!6262))))

(declare-fun lt!5554 () tuple2!116)

(declare-fun c!23 () (_ FloatingPoint 11 53))

(assert (=> b!10738 (= res!8545 (fp.geq (_1!268 lt!5554) (fp.add roundNearestTiesToEven c!23 (_2!268 lt!5554))))))

(assert (=> b!10738 (= lt!5554 e!6261)))

(assert (=> b!10738 (= c!1309 (fp.geq s!25 (select (arr!363 fq!120) i!347)))))

(declare-fun b!10739 () Bool)

(declare-fun lt!5556 () (_ BitVec 32))

(declare-fun jz!77 () (_ BitVec 32))

(assert (=> b!10739 (= e!6262 (and (bvslt lt!5556 #b00000000000000000000000000000000) (bvsle #b11111111111111111111111111111111 lt!5556) (not (= (bvand jz!77 #b10000000000000000000000000000000) #b00000000000000000000000000000000)) (not (= (bvand jz!77 #b10000000000000000000000000000000) (bvand (bvsub jz!77 #b00000000000000000000000000000001) #b10000000000000000000000000000000)))))))

(assert (=> b!10739 (= lt!5556 (bvsub i!347 #b00000000000000000000000000000001))))

(declare-fun lt!5555 () tuple2!116)

(assert (=> b!10739 (= lt!5555 (fast2Sum!0 (_1!268 lt!5554) (fp.add roundNearestTiesToEven c!23 (_2!268 lt!5554))))))

(declare-fun b!10740 () Bool)

(declare-fun res!8543 () Bool)

(assert (=> b!10740 (=> (not res!8543) (not e!6260))))

(assert (=> b!10740 (= res!8543 (and (bvsle #b00000000000000000000000000000000 jz!77) (bvslt jz!77 #b00000000000000000000000000010100) (bvsle #b11111111111111111111111111111111 i!347) (bvsle i!347 (bvsub jz!77 #b00000000000000000000000000000001)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) s!25) (fp.leq s!25 (select (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (fp #b0 #b01111111110 #b1001001000011111101101010100010001000010110100011000)) #b00000000000000000000000000000001 (fp #b0 #b01111101000 #b0001101000100000100011100110000100011010011000100110)) #b00000000000000000000000000001010 (fp #b0 #b01100010001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001011 (fp #b0 #b01011111001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001100 (fp #b0 #b01011100001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001101 (fp #b0 #b01011001001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001110 (fp #b0 #b01010110001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001111 (fp #b0 #b01010011001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000010000 (fp #b0 #b01010000001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000010001 (fp #b0 #b01001101001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000010010 (fp #b0 #b01001010001 #b1011101001010010010101100111111111111111111111100100)) #b00000000000000000000000000010011 (fp #b0 #b01000111001 #b1011101001010010010101001100010110101101101010011000)) #b00000000000000000000000000000010 (fp #b0 #b01111010000 #b1100110001001011101001000110001100110001010001011100)) #b00000000000000000000000000000011 (fp #b0 #b01110111001 #b0100100001001011101001011110000000110111000001110000)) #b00000000000000000000000000000100 (fp #b0 #b01110100001 #b1001101000011011010011111000000000000000000000000000)) #b00000000000000000000000000000101 (fp #b0 #b01110001001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000000110 (fp #b0 #b01101110001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000000111 (fp #b0 #b01101011001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001000 (fp #b0 #b01101000001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001001 (fp #b0 #b01100101001 #b1011101001010010010101101000000000000000000000000000)) (bvadd i!347 #b00000000000000000000000000000001))) (fp.eq (fp.add roundNearestTiesToEven s!25 c!23) s!25) (bvsge i!347 #b00000000000000000000000000000000) (fp.leq s!25 (fp #b0 #b01111111111 #b0000000000000000000000000000000000000000000000000000))))))

(declare-fun b!10741 () Bool)

(assert (=> b!10741 (= e!6261 call!53)))

(declare-fun b!10742 () Bool)

(declare-fun res!8542 () Bool)

(assert (=> b!10742 (=> (not res!8542) (not e!6260))))

(declare-fun fqInv!0 (array!824) Bool)

(assert (=> b!10742 (= res!8542 (fqInv!0 fq!120))))

(assert (= (and start!2177 res!8544) b!10742))

(assert (= (and b!10742 res!8542) b!10740))

(assert (= (and b!10740 res!8543) b!10738))

(assert (= (and b!10738 c!1309) b!10741))

(assert (= (and b!10738 (not c!1309)) b!10737))

(assert (= (or b!10741 b!10737) bm!50))

(assert (= (and b!10738 res!8545) b!10739))

(declare-fun m!15257 () Bool)

(assert (=> bm!50 m!15257))

(declare-fun m!15259 () Bool)

(assert (=> bm!50 m!15259))

(declare-fun m!15261 () Bool)

(assert (=> b!10740 m!15261))

(declare-fun m!15263 () Bool)

(assert (=> start!2177 m!15263))

(declare-fun m!15265 () Bool)

(assert (=> b!10742 m!15265))

(assert (=> b!10738 m!15257))

(declare-fun m!15267 () Bool)

(assert (=> b!10739 m!15267))

(check-sat (not b!10742) (not bm!50) (not b!10739) (not start!2177))
(check-sat)
