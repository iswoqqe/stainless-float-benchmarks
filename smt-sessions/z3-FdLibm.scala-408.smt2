; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!2181 () Bool)

(assert start!2181)

(declare-fun b!10773 () Bool)

(declare-datatypes ((tuple2!120 0))(
  ( (tuple2!121 (_1!270 (_ FloatingPoint 11 53)) (_2!270 (_ FloatingPoint 11 53))) )
))
(declare-fun e!6285 () tuple2!120)

(declare-fun call!59 () tuple2!120)

(assert (=> b!10773 (= e!6285 call!59)))

(declare-fun i!347 () (_ BitVec 32))

(declare-fun c!1315 () Bool)

(declare-fun bm!56 () Bool)

(declare-fun s!25 () (_ FloatingPoint 11 53))

(declare-datatypes ((array!828 0))(
  ( (array!829 (arr!365 (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (size!365 (_ BitVec 32))) )
))
(declare-fun fq!120 () array!828)

(declare-fun fast2Sum!0 ((_ FloatingPoint 11 53) (_ FloatingPoint 11 53)) tuple2!120)

(assert (=> bm!56 (= call!59 (fast2Sum!0 (ite c!1315 s!25 (select (arr!365 fq!120) i!347)) (ite c!1315 (select (arr!365 fq!120) i!347) s!25)))))

(declare-fun b!10774 () Bool)

(declare-fun e!6283 () Bool)

(declare-fun e!6286 () Bool)

(assert (=> b!10774 (= e!6283 e!6286)))

(declare-fun res!8569 () Bool)

(assert (=> b!10774 (=> (not res!8569) (not e!6286))))

(declare-fun lt!5574 () tuple2!120)

(declare-fun c!23 () (_ FloatingPoint 11 53))

(assert (=> b!10774 (= res!8569 (fp.geq (_1!270 lt!5574) (fp.add roundNearestTiesToEven c!23 (_2!270 lt!5574))))))

(assert (=> b!10774 (= lt!5574 e!6285)))

(assert (=> b!10774 (= c!1315 (fp.geq s!25 (select (arr!365 fq!120) i!347)))))

(declare-fun b!10775 () Bool)

(assert (=> b!10775 (= e!6285 call!59)))

(declare-fun b!10777 () Bool)

(declare-fun res!8568 () Bool)

(assert (=> b!10777 (=> (not res!8568) (not e!6283))))

(declare-fun jz!77 () (_ BitVec 32))

(assert (=> b!10777 (= res!8568 (and (bvsle #b00000000000000000000000000000000 jz!77) (bvslt jz!77 #b00000000000000000000000000010100) (bvsle #b11111111111111111111111111111111 i!347) (bvsle i!347 (bvsub jz!77 #b00000000000000000000000000000001)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) s!25) (fp.leq s!25 (select (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (fp #b0 #b01111111110 #b1001001000011111101101010100010001000010110100011000)) #b00000000000000000000000000000001 (fp #b0 #b01111101000 #b0001101000100000100011100110000100011010011000100110)) #b00000000000000000000000000001010 (fp #b0 #b01100010001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001011 (fp #b0 #b01011111001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001100 (fp #b0 #b01011100001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001101 (fp #b0 #b01011001001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001110 (fp #b0 #b01010110001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001111 (fp #b0 #b01010011001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000010000 (fp #b0 #b01010000001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000010001 (fp #b0 #b01001101001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000010010 (fp #b0 #b01001010001 #b1011101001010010010101100111111111111111111111100100)) #b00000000000000000000000000010011 (fp #b0 #b01000111001 #b1011101001010010010101001100010110101101101010011000)) #b00000000000000000000000000000010 (fp #b0 #b01111010000 #b1100110001001011101001000110001100110001010001011100)) #b00000000000000000000000000000011 (fp #b0 #b01110111001 #b0100100001001011101001011110000000110111000001110000)) #b00000000000000000000000000000100 (fp #b0 #b01110100001 #b1001101000011011010011111000000000000000000000000000)) #b00000000000000000000000000000101 (fp #b0 #b01110001001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000000110 (fp #b0 #b01101110001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000000111 (fp #b0 #b01101011001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001000 (fp #b0 #b01101000001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001001 (fp #b0 #b01100101001 #b1011101001010010010101101000000000000000000000000000)) (bvadd i!347 #b00000000000000000000000000000001))) (fp.eq (fp.add roundNearestTiesToEven s!25 c!23) s!25) (bvsge i!347 #b00000000000000000000000000000000) (fp.leq s!25 (fp #b0 #b01111111111 #b0000000000000000000000000000000000000000000000000000))))))

(declare-fun b!10778 () Bool)

(declare-fun res!8566 () Bool)

(assert (=> b!10778 (=> (not res!8566) (not e!6283))))

(declare-fun fqInv!0 (array!828) Bool)

(assert (=> b!10778 (= res!8566 (fqInv!0 fq!120))))

(declare-fun lt!5572 () tuple2!120)

(declare-fun b!10776 () Bool)

(declare-fun lt!5573 () (_ BitVec 32))

(assert (=> b!10776 (= e!6286 (and (bvslt lt!5573 #b00000000000000000000000000000000) (bvsle #b11111111111111111111111111111111 lt!5573) (bvsle lt!5573 (bvsub jz!77 #b00000000000000000000000000000001)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (_1!270 lt!5572)) (let ((ix!270 (bvadd lt!5573 #b00000000000000000000000000000001))) (or (bvslt ix!270 #b00000000000000000000000000000000) (bvsge ix!270 #b00000000000000000000000000010100)))))))

(assert (=> b!10776 (= lt!5573 (bvsub i!347 #b00000000000000000000000000000001))))

(assert (=> b!10776 (= lt!5572 (fast2Sum!0 (_1!270 lt!5574) (fp.add roundNearestTiesToEven c!23 (_2!270 lt!5574))))))

(declare-fun res!8567 () Bool)

(assert (=> start!2181 (=> (not res!8567) (not e!6283))))

(assert (=> start!2181 (= res!8567 (= (size!365 fq!120) #b00000000000000000000000000010100))))

(assert (=> start!2181 e!6283))

(assert (=> start!2181 true))

(declare-fun array_inv!314 (array!828) Bool)

(assert (=> start!2181 (array_inv!314 fq!120)))

(assert (= (and start!2181 res!8567) b!10778))

(assert (= (and b!10778 res!8566) b!10777))

(assert (= (and b!10777 res!8568) b!10774))

(assert (= (and b!10774 c!1315) b!10775))

(assert (= (and b!10774 (not c!1315)) b!10773))

(assert (= (or b!10775 b!10773) bm!56))

(assert (= (and b!10774 res!8569) b!10776))

(declare-fun m!15281 () Bool)

(assert (=> b!10777 m!15281))

(declare-fun m!15283 () Bool)

(assert (=> b!10774 m!15283))

(declare-fun m!15285 () Bool)

(assert (=> start!2181 m!15285))

(declare-fun m!15287 () Bool)

(assert (=> b!10778 m!15287))

(declare-fun m!15289 () Bool)

(assert (=> b!10776 m!15289))

(assert (=> bm!56 m!15283))

(declare-fun m!15291 () Bool)

(assert (=> bm!56 m!15291))

(check-sat (not b!10778) (not bm!56) (not start!2181) (not b!10776))
(check-sat)
