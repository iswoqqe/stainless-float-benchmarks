; Options: -q --produce-models --incremental --print-success --lang smt2.6 --arrays-exp
(set-logic ALL)

(declare-fun start!3225 () Bool)

(assert start!3225)

(declare-datatypes ((array!1484 0))(
  ( (array!1485 (arr!654 (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (size!654 (_ BitVec 32))) )
))
(declare-fun fq!41 () array!1484)

(assert (=> start!3225 (and (= (size!654 fq!41) #b00000000000000000000000000010100) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!654 fq!41) #b00000000000000000000000000000000)) (fp.leq (select (arr!654 fq!41) #b00000000000000000000000000000000) (fp #b0 #b01111111110 #b1001001000011111101100001101101111000000100110000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!654 fq!41) #b00000000000000000000000000000001)) (fp.leq (select (arr!654 fq!41) #b00000000000000000000000000000001) (fp #b0 #b01111101000 #b0001101000100000100011001001010011001110101111100000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!654 fq!41) #b00000000000000000000000000000010)) (fp.leq (select (arr!654 fq!41) #b00000000000000000000000000000010) (fp #b0 #b01111010000 #b1100110001001011101000011101001010011001111110100000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!654 fq!41) #b00000000000000000000000000000011)) (fp.leq (select (arr!654 fq!41) #b00000000000000000000000000000011) (fp #b0 #b01110111001 #b0100100001001011101001000100011000011011101101111000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!654 fq!41) #b00000000000000000000000000000100)) (fp.leq (select (arr!654 fq!41) #b00000000000000000000000000000100) (fp #b0 #b01110100001 #b1001101000011011010011011100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!654 fq!41) #b00000000000000000000000000000101)) (fp.leq (select (arr!654 fq!41) #b00000000000000000000000000000101) (fp #b0 #b01110001001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!654 fq!41) #b00000000000000000000000000000110)) (fp.leq (select (arr!654 fq!41) #b00000000000000000000000000000110) (fp #b0 #b01101110001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!654 fq!41) #b00000000000000000000000000000111)) (fp.leq (select (arr!654 fq!41) #b00000000000000000000000000000111) (fp #b0 #b01101011001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!654 fq!41) #b00000000000000000000000000001000)) (fp.leq (select (arr!654 fq!41) #b00000000000000000000000000001000) (fp #b0 #b01101000001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!654 fq!41) #b00000000000000000000000000001001)) (fp.leq (select (arr!654 fq!41) #b00000000000000000000000000001001) (fp #b0 #b01100101001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!654 fq!41) #b00000000000000000000000000001010)) (fp.leq (select (arr!654 fq!41) #b00000000000000000000000000001010) (fp #b0 #b01100010001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!654 fq!41) #b00000000000000000000000000001011)) (bvsge #b00000000000000000000000000001011 (size!654 fq!41)))))

(declare-fun array_inv!602 (array!1484) Bool)

(assert (=> start!3225 (array_inv!602 fq!41)))

(declare-fun bs!3602 () Bool)

(assert (= bs!3602 start!3225))

(declare-fun m!29285 () Bool)

(assert (=> bs!3602 m!29285))

(declare-fun m!29287 () Bool)

(assert (=> bs!3602 m!29287))

(declare-fun m!29289 () Bool)

(assert (=> bs!3602 m!29289))

(declare-fun m!29291 () Bool)

(assert (=> bs!3602 m!29291))

(declare-fun m!29293 () Bool)

(assert (=> bs!3602 m!29293))

(declare-fun m!29295 () Bool)

(assert (=> bs!3602 m!29295))

(declare-fun m!29297 () Bool)

(assert (=> bs!3602 m!29297))

(declare-fun m!29299 () Bool)

(assert (=> bs!3602 m!29299))

(declare-fun m!29301 () Bool)

(assert (=> bs!3602 m!29301))

(declare-fun m!29303 () Bool)

(assert (=> bs!3602 m!29303))

(declare-fun m!29305 () Bool)

(assert (=> bs!3602 m!29305))

(declare-fun m!29307 () Bool)

(assert (=> bs!3602 m!29307))

(declare-fun m!29309 () Bool)

(assert (=> bs!3602 m!29309))

(push 1)

(assert (not start!3225))

(check-sat)

(pop 1)

(push 1)

(check-sat)

(pop 1)

