; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!1113 () Bool)

(assert start!1113)

(declare-fun res!4102 () Bool)

(declare-fun e!2657 () Bool)

(assert (=> start!1113 (=> (not res!4102) (not e!2657))))

(declare-fun jz!67 () (_ BitVec 32))

(declare-datatypes ((array!389 0))(
  ( (array!390 (arr!169 (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (size!169 (_ BitVec 32))) )
))
(declare-fun qq!69 () array!389)

(assert (=> start!1113 (= res!4102 (and (bvsle #b00000000000000000000000000000000 jz!67) (bvslt jz!67 #b00000000000000000000000000010100) (= (size!169 qq!69) #b00000000000000000000000000010100)))))

(assert (=> start!1113 e!2657))

(assert (=> start!1113 true))

(declare-fun array_inv!119 (array!389) Bool)

(assert (=> start!1113 (array_inv!119 qq!69)))

(declare-fun b!5229 () Bool)

(declare-fun res!4103 () Bool)

(assert (=> b!5229 (=> (not res!4103) (not e!2657))))

(declare-fun qqInv!0 (array!389) Bool)

(assert (=> b!5229 (= res!4103 (qqInv!0 qq!69))))

(declare-fun b!5230 () Bool)

(assert (=> b!5230 (= e!2657 (and (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (store ((as const (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (fp.mul roundNearestTiesToEven (fp #b0 #b01111111111 #b1001001000011111101101000000000000000000000000000000) (select (arr!169 qq!69) #b00000000000000000000000000000000))) #b00000000000000000000000000000000)) (fp.leq (select (store ((as const (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (fp.mul roundNearestTiesToEven (fp #b0 #b01111111111 #b1001001000011111101101000000000000000000000000000000) (select (arr!169 qq!69) #b00000000000000000000000000000000))) #b00000000000000000000000000000000) (fp #b0 #b01111111110 #b1001001000011111101100001101101111000000100110000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (store (store ((as const (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (fp.mul roundNearestTiesToEven (fp #b0 #b01111111111 #b1001001000011111101101000000000000000000000000000000) (select (arr!169 qq!69) #b00000000000000000000000000000000))) #b00000000000000000000000000000001 (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp #b0 #b01111111111 #b1001001000011111101101000000000000000000000000000000) (select (arr!169 qq!69) #b00000000000000000000000000000001)) (fp.mul roundNearestTiesToEven (fp #b0 #b01111100111 #b0100010001000010110100000000000000000000000000000000) (select (arr!169 qq!69) #b00000000000000000000000000000000)))) #b00000000000000000000000000000001)) (fp.leq (select (store (store ((as const (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (fp.mul roundNearestTiesToEven (fp #b0 #b01111111111 #b1001001000011111101101000000000000000000000000000000) (select (arr!169 qq!69) #b00000000000000000000000000000000))) #b00000000000000000000000000000001 (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp #b0 #b01111111111 #b1001001000011111101101000000000000000000000000000000) (select (arr!169 qq!69) #b00000000000000000000000000000001)) (fp.mul roundNearestTiesToEven (fp #b0 #b01111100111 #b0100010001000010110100000000000000000000000000000000) (select (arr!169 qq!69) #b00000000000000000000000000000000)))) #b00000000000000000000000000000001) (fp #b0 #b01111101000 #b0001101000100000100011001001010011001110101111100000)) (bvsge #b00000000000000000000000000000010 (size!169 qq!69))))))

(assert (= (and start!1113 res!4102) b!5229))

(assert (= (and b!5229 res!4103) b!5230))

(declare-fun m!7971 () Bool)

(assert (=> start!1113 m!7971))

(declare-fun m!7973 () Bool)

(assert (=> b!5229 m!7973))

(declare-fun m!7975 () Bool)

(assert (=> b!5230 m!7975))

(declare-fun m!7977 () Bool)

(assert (=> b!5230 m!7977))

(declare-fun m!7979 () Bool)

(assert (=> b!5230 m!7979))

(declare-fun m!7981 () Bool)

(assert (=> b!5230 m!7981))

(declare-fun m!7983 () Bool)

(assert (=> b!5230 m!7983))

(declare-fun m!7985 () Bool)

(assert (=> b!5230 m!7985))

(check-sat (not start!1113) (not b!5229))
(check-sat)
