; Options: -q --produce-models --incremental --print-success --lang smt2.6 --arrays-exp
(set-logic ALL)

(declare-fun start!2677 () Bool)

(assert start!2677)

(declare-datatypes ((array!1064 0))(
  ( (array!1065 (arr!466 (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (size!466 (_ BitVec 32))) )
))
(declare-fun qq!34 () array!1064)

(assert (=> start!2677 (and (= (size!466 qq!34) #b00000000000000000000000000010100) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!466 qq!34) #b00000000000000000000000000000000)) (fp.leq (select (arr!466 qq!34) #b00000000000000000000000000000000) (fp #b0 #b01111111101 #b1111111111111111111111000000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!466 qq!34) #b00000000000000000000000000000001)) (fp.leq (select (arr!466 qq!34) #b00000000000000000000000000000001) (fp #b0 #b01111100110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!466 qq!34) #b00000000000000000000000000000010)) (fp.leq (select (arr!466 qq!34) #b00000000000000000000000000000010) (fp #b0 #b01111001110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!466 qq!34) #b00000000000000000000000000000011)) (fp.leq (select (arr!466 qq!34) #b00000000000000000000000000000011) (fp #b0 #b01110110110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!466 qq!34) #b00000000000000000000000000000100)) (fp.leq (select (arr!466 qq!34) #b00000000000000000000000000000100) (fp #b0 #b01110011110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!466 qq!34) #b00000000000000000000000000000101)) (fp.leq (select (arr!466 qq!34) #b00000000000000000000000000000101) (fp #b0 #b01110000110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!466 qq!34) #b00000000000000000000000000000110)) (fp.leq (select (arr!466 qq!34) #b00000000000000000000000000000110) (fp #b0 #b01101101110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!466 qq!34) #b00000000000000000000000000000111)) (fp.leq (select (arr!466 qq!34) #b00000000000000000000000000000111) (fp #b0 #b01101010110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!466 qq!34) #b00000000000000000000000000001000)) (fp.leq (select (arr!466 qq!34) #b00000000000000000000000000001000) (fp #b0 #b01100111110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!466 qq!34) #b00000000000000000000000000001001)) (fp.leq (select (arr!466 qq!34) #b00000000000000000000000000001001) (fp #b0 #b01100100110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!466 qq!34) #b00000000000000000000000000001010)) (fp.leq (select (arr!466 qq!34) #b00000000000000000000000000001010) (fp #b0 #b01100001110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!466 qq!34) #b00000000000000000000000000001011)) (fp.leq (select (arr!466 qq!34) #b00000000000000000000000000001011) (fp #b0 #b01011110110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!466 qq!34) #b00000000000000000000000000001100)) (fp.leq (select (arr!466 qq!34) #b00000000000000000000000000001100) (fp #b0 #b01011011110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!466 qq!34) #b00000000000000000000000000001101)) (fp.leq (select (arr!466 qq!34) #b00000000000000000000000000001101) (fp #b0 #b01011000110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!466 qq!34) #b00000000000000000000000000001110)) (fp.leq (select (arr!466 qq!34) #b00000000000000000000000000001110) (fp #b0 #b01010101110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!466 qq!34) #b00000000000000000000000000001111)) (fp.leq (select (arr!466 qq!34) #b00000000000000000000000000001111) (fp #b0 #b01010010110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!466 qq!34) #b00000000000000000000000000010000)) (fp.leq (select (arr!466 qq!34) #b00000000000000000000000000010000) (fp #b0 #b01001111110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!466 qq!34) #b00000000000000000000000000010001)) (bvsge #b00000000000000000000000000010001 (size!466 qq!34)))))

(declare-fun array_inv!415 (array!1064) Bool)

(assert (=> start!2677 (array_inv!415 qq!34)))

(declare-fun bs!2930 () Bool)

(assert (= bs!2930 start!2677))

(declare-fun m!23105 () Bool)

(assert (=> bs!2930 m!23105))

(declare-fun m!23107 () Bool)

(assert (=> bs!2930 m!23107))

(declare-fun m!23109 () Bool)

(assert (=> bs!2930 m!23109))

(declare-fun m!23111 () Bool)

(assert (=> bs!2930 m!23111))

(declare-fun m!23113 () Bool)

(assert (=> bs!2930 m!23113))

(declare-fun m!23115 () Bool)

(assert (=> bs!2930 m!23115))

(declare-fun m!23117 () Bool)

(assert (=> bs!2930 m!23117))

(declare-fun m!23119 () Bool)

(assert (=> bs!2930 m!23119))

(declare-fun m!23121 () Bool)

(assert (=> bs!2930 m!23121))

(declare-fun m!23123 () Bool)

(assert (=> bs!2930 m!23123))

(declare-fun m!23125 () Bool)

(assert (=> bs!2930 m!23125))

(declare-fun m!23127 () Bool)

(assert (=> bs!2930 m!23127))

(declare-fun m!23129 () Bool)

(assert (=> bs!2930 m!23129))

(declare-fun m!23131 () Bool)

(assert (=> bs!2930 m!23131))

(declare-fun m!23133 () Bool)

(assert (=> bs!2930 m!23133))

(declare-fun m!23135 () Bool)

(assert (=> bs!2930 m!23135))

(declare-fun m!23137 () Bool)

(assert (=> bs!2930 m!23137))

(declare-fun m!23139 () Bool)

(assert (=> bs!2930 m!23139))

(declare-fun m!23141 () Bool)

(assert (=> bs!2930 m!23141))

(push 1)

(assert (not start!2677))

(check-sat)

(pop 1)

(push 1)

(check-sat)

(pop 1)

