; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!2017 () Bool)

(assert start!2017)

(declare-fun res!8376 () Bool)

(declare-fun e!5863 () Bool)

(assert (=> start!2017 (=> (not res!8376) (not e!5863))))

(declare-fun x!143 () (_ FloatingPoint 11 53))

(assert (=> start!2017 (= res!8376 (and (fp.leq (fp #b0 #b01111111111 #b0000000000000000000000000000000000000000000000000000) x!143) (not (fp.isInfinite x!143)) (not (fp.isNaN x!143))))))

(assert (=> start!2017 e!5863))

(assert (=> start!2017 true))

(declare-fun b!10393 () Bool)

(declare-fun e!5865 () Bool)

(assert (=> b!10393 (= e!5863 e!5865)))

(declare-fun res!8379 () Bool)

(assert (=> b!10393 (=> (not res!8379) (not e!5865))))

(declare-fun lt!5306 () (_ BitVec 32))

(assert (=> b!10393 (= res!8379 (and (bvsle #b11111111111111111111111111101001 lt!5306) (bvsle lt!5306 #b00000000000000000000001111101000)))))

(declare-fun lt!5310 () (_ BitVec 32))

(assert (=> b!10393 (= lt!5306 (bvsub (bvashr lt!5310 #b00000000000000000000000000010100) #b00000000000000000000010000010110))))

(declare-fun __HI!0 ((_ FloatingPoint 11 53)) (_ BitVec 32))

(assert (=> b!10393 (= lt!5310 (bvand (__HI!0 x!143) #b01111111111111111111111111111111))))

(declare-fun b!10395 () Bool)

(declare-fun e!5864 () Bool)

(declare-fun e!5862 () Bool)

(assert (=> b!10395 (= e!5864 e!5862)))

(declare-fun res!8378 () Bool)

(assert (=> b!10395 (=> res!8378 e!5862)))

(declare-fun lt!5304 () (_ BitVec 32))

(assert (=> b!10395 (= res!8378 (or (bvsgt #b00000000000000000000000000011000 lt!5304) (bvsgt lt!5304 #b00000000000000000000001111110000) (not (= (bvsrem lt!5304 #b00000000000000000000000000011000) #b00000000000000000000000000000000))))))

(declare-fun lt!5303 () (_ FloatingPoint 11 53))

(declare-fun lt!5305 () (_ FloatingPoint 11 53))

(declare-fun lt!5309 () (_ FloatingPoint 11 53))

(declare-fun lt!5308 () (_ FloatingPoint 11 53))

(assert (=> b!10395 (= lt!5303 (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven lt!5305 (select (store (store (store ((as const (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 ((_ to_fp 11 53) roundNearestTiesToEven (ite (fp.isNaN lt!5308) #b00000000000000000000000000000000 (ite (fp.gt lt!5308 ((_ to_fp 11 53) roundTowardZero #b01111111111111111111111111111111)) #b01111111111111111111111111111111 (ite (fp.lt lt!5308 ((_ to_fp 11 53) roundTowardZero #b10000000000000000000000000000000)) #b10000000000000000000000000000000 ((_ fp.to_sbv 32) roundTowardZero lt!5308)))))) #b00000000000000000000000000000001 ((_ to_fp 11 53) roundNearestTiesToEven (ite (fp.isNaN lt!5309) #b00000000000000000000000000000000 (ite (fp.gt lt!5309 ((_ to_fp 11 53) roundTowardZero #b01111111111111111111111111111111)) #b01111111111111111111111111111111 (ite (fp.lt lt!5309 ((_ to_fp 11 53) roundTowardZero #b10000000000000000000000000000000)) #b10000000000000000000000000000000 ((_ fp.to_sbv 32) roundTowardZero lt!5309)))))) #b00000000000000000000000000000010 ((_ to_fp 11 53) roundNearestTiesToEven (ite (fp.isNaN lt!5305) #b00000000000000000000000000000000 (ite (fp.gt lt!5305 ((_ to_fp 11 53) roundTowardZero #b01111111111111111111111111111111)) #b01111111111111111111111111111111 (ite (fp.lt lt!5305 ((_ to_fp 11 53) roundTowardZero #b10000000000000000000000000000000)) #b10000000000000000000000000000000 ((_ fp.to_sbv 32) roundTowardZero lt!5305)))))) #b00000000000000000000000000000010)) (fp #b0 #b10000010111 #b0000000000000000000000000000000000000000000000000000)))))

(assert (=> b!10395 (= lt!5305 (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven lt!5309 (select (store (store ((as const (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 ((_ to_fp 11 53) roundNearestTiesToEven (ite (fp.isNaN lt!5308) #b00000000000000000000000000000000 (ite (fp.gt lt!5308 ((_ to_fp 11 53) roundTowardZero #b01111111111111111111111111111111)) #b01111111111111111111111111111111 (ite (fp.lt lt!5308 ((_ to_fp 11 53) roundTowardZero #b10000000000000000000000000000000)) #b10000000000000000000000000000000 ((_ fp.to_sbv 32) roundTowardZero lt!5308)))))) #b00000000000000000000000000000001 ((_ to_fp 11 53) roundNearestTiesToEven (ite (fp.isNaN lt!5309) #b00000000000000000000000000000000 (ite (fp.gt lt!5309 ((_ to_fp 11 53) roundTowardZero #b01111111111111111111111111111111)) #b01111111111111111111111111111111 (ite (fp.lt lt!5309 ((_ to_fp 11 53) roundTowardZero #b10000000000000000000000000000000)) #b10000000000000000000000000000000 ((_ fp.to_sbv 32) roundTowardZero lt!5309)))))) #b00000000000000000000000000000001)) (fp #b0 #b10000010111 #b0000000000000000000000000000000000000000000000000000)))))

(assert (=> b!10395 (= lt!5309 (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven lt!5308 (select (store ((as const (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 ((_ to_fp 11 53) roundNearestTiesToEven (ite (fp.isNaN lt!5308) #b00000000000000000000000000000000 (ite (fp.gt lt!5308 ((_ to_fp 11 53) roundTowardZero #b01111111111111111111111111111111)) #b01111111111111111111111111111111 (ite (fp.lt lt!5308 ((_ to_fp 11 53) roundTowardZero #b10000000000000000000000000000000)) #b10000000000000000000000000000000 ((_ fp.to_sbv 32) roundTowardZero lt!5308)))))) #b00000000000000000000000000000000)) (fp #b0 #b10000010111 #b0000000000000000000000000000000000000000000000000000)))))

(declare-fun __HI!1 ((_ FloatingPoint 11 53) (_ BitVec 32)) (_ FloatingPoint 11 53))

(declare-fun __LO!1 ((_ FloatingPoint 11 53) (_ BitVec 32)) (_ FloatingPoint 11 53))

(declare-fun __LO!0 ((_ FloatingPoint 11 53)) (_ BitVec 32))

(assert (=> b!10395 (= lt!5308 (__HI!1 (__LO!1 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (__LO!0 x!143)) (bvsub lt!5310 (bvshl lt!5304 #b00000000000000000000000000010100))))))

(declare-fun b!10394 () Bool)

(assert (=> b!10394 (= e!5865 e!5864)))

(declare-fun res!8377 () Bool)

(assert (=> b!10394 (=> (not res!8377) (not e!5864))))

(assert (=> b!10394 (= res!8377 (and (bvsle #b00000000000000000000000000011000 lt!5304) (bvsle lt!5304 #b00000000000000000000001111110000) (= (bvsrem lt!5304 #b00000000000000000000000000011000) #b00000000000000000000000000000000)))))

(declare-fun lt!5307 () (_ BitVec 32))

(assert (=> b!10394 (= lt!5304 (ite (bvslt lt!5307 #b00000000000000000000000000011000) #b00000000000000000000000000011000 lt!5307))))

(assert (=> b!10394 (= lt!5307 (bvmul #b00000000000000000000000000011000 (bvsdiv (bvadd lt!5306 #b00000000000000000000000000010111) #b00000000000000000000000000011000)))))

(declare-fun b!10396 () Bool)

(declare-datatypes ((array!742 0))(
  ( (array!743 (arr!326 (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (size!326 (_ BitVec 32))) )
))
(declare-fun xxInv!0 (array!742) Bool)

(assert (=> b!10396 (= e!5862 (not (xxInv!0 (array!743 (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 ((_ to_fp 11 53) roundNearestTiesToEven (ite (fp.isNaN lt!5308) #b00000000000000000000000000000000 (ite (fp.gt lt!5308 ((_ to_fp 11 53) roundTowardZero #b01111111111111111111111111111111)) #b01111111111111111111111111111111 (ite (fp.lt lt!5308 ((_ to_fp 11 53) roundTowardZero #b10000000000000000000000000000000)) #b10000000000000000000000000000000 ((_ fp.to_sbv 32) roundTowardZero lt!5308)))))) #b00000000000000000000000000000001 ((_ to_fp 11 53) roundNearestTiesToEven (ite (fp.isNaN lt!5309) #b00000000000000000000000000000000 (ite (fp.gt lt!5309 ((_ to_fp 11 53) roundTowardZero #b01111111111111111111111111111111)) #b01111111111111111111111111111111 (ite (fp.lt lt!5309 ((_ to_fp 11 53) roundTowardZero #b10000000000000000000000000000000)) #b10000000000000000000000000000000 ((_ fp.to_sbv 32) roundTowardZero lt!5309)))))) #b00000000000000000000000000000010 ((_ to_fp 11 53) roundNearestTiesToEven (ite (fp.isNaN lt!5305) #b00000000000000000000000000000000 (ite (fp.gt lt!5305 ((_ to_fp 11 53) roundTowardZero #b01111111111111111111111111111111)) #b01111111111111111111111111111111 (ite (fp.lt lt!5305 ((_ to_fp 11 53) roundTowardZero #b10000000000000000000000000000000)) #b10000000000000000000000000000000 ((_ fp.to_sbv 32) roundTowardZero lt!5305)))))) #b00000000000000000000000000000011 ((_ to_fp 11 53) roundNearestTiesToEven (ite (fp.isNaN lt!5303) #b00000000000000000000000000000000 (ite (fp.gt lt!5303 ((_ to_fp 11 53) roundTowardZero #b01111111111111111111111111111111)) #b01111111111111111111111111111111 (ite (fp.lt lt!5303 ((_ to_fp 11 53) roundTowardZero #b10000000000000000000000000000000)) #b10000000000000000000000000000000 ((_ fp.to_sbv 32) roundTowardZero lt!5303)))))) #b00000000000000000000000000000100 ((_ to_fp 11 53) roundNearestTiesToEven (ite (fp.isNaN (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven lt!5303 (select (store (store (store (store ((as const (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 ((_ to_fp 11 53) roundNearestTiesToEven (ite (fp.isNaN lt!5308) #b00000000000000000000000000000000 (ite (fp.gt lt!5308 ((_ to_fp 11 53) roundTowardZero #b01111111111111111111111111111111)) #b01111111111111111111111111111111 (ite (fp.lt lt!5308 ((_ to_fp 11 53) roundTowardZero #b10000000000000000000000000000000)) #b10000000000000000000000000000000 ((_ fp.to_sbv 32) roundTowardZero lt!5308)))))) #b00000000000000000000000000000001 ((_ to_fp 11 53) roundNearestTiesToEven (ite (fp.isNaN lt!5309) #b00000000000000000000000000000000 (ite (fp.gt lt!5309 ((_ to_fp 11 53) roundTowardZero #b01111111111111111111111111111111)) #b01111111111111111111111111111111 (ite (fp.lt lt!5309 ((_ to_fp 11 53) roundTowardZero #b10000000000000000000000000000000)) #b10000000000000000000000000000000 ((_ fp.to_sbv 32) roundTowardZero lt!5309)))))) #b00000000000000000000000000000010 ((_ to_fp 11 53) roundNearestTiesToEven (ite (fp.isNaN lt!5305) #b00000000000000000000000000000000 (ite (fp.gt lt!5305 ((_ to_fp 11 53) roundTowardZero #b01111111111111111111111111111111)) #b01111111111111111111111111111111 (ite (fp.lt lt!5305 ((_ to_fp 11 53) roundTowardZero #b10000000000000000000000000000000)) #b10000000000000000000000000000000 ((_ fp.to_sbv 32) roundTowardZero lt!5305)))))) #b00000000000000000000000000000011 ((_ to_fp 11 53) roundNearestTiesToEven (ite (fp.isNaN lt!5303) #b00000000000000000000000000000000 (ite (fp.gt lt!5303 ((_ to_fp 11 53) roundTowardZero #b01111111111111111111111111111111)) #b01111111111111111111111111111111 (ite (fp.lt lt!5303 ((_ to_fp 11 53) roundTowardZero #b10000000000000000000000000000000)) #b10000000000000000000000000000000 ((_ fp.to_sbv 32) roundTowardZero lt!5303)))))) #b00000000000000000000000000000011)) (fp #b0 #b10000010111 #b0000000000000000000000000000000000000000000000000000))) #b00000000000000000000000000000000 (ite (fp.gt (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven lt!5303 (select (store (store (store (store ((as const (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 ((_ to_fp 11 53) roundNearestTiesToEven (ite (fp.isNaN lt!5308) #b00000000000000000000000000000000 (ite (fp.gt lt!5308 ((_ to_fp 11 53) roundTowardZero #b01111111111111111111111111111111)) #b01111111111111111111111111111111 (ite (fp.lt lt!5308 ((_ to_fp 11 53) roundTowardZero #b10000000000000000000000000000000)) #b10000000000000000000000000000000 ((_ fp.to_sbv 32) roundTowardZero lt!5308)))))) #b00000000000000000000000000000001 ((_ to_fp 11 53) roundNearestTiesToEven (ite (fp.isNaN lt!5309) #b00000000000000000000000000000000 (ite (fp.gt lt!5309 ((_ to_fp 11 53) roundTowardZero #b01111111111111111111111111111111)) #b01111111111111111111111111111111 (ite (fp.lt lt!5309 ((_ to_fp 11 53) roundTowardZero #b10000000000000000000000000000000)) #b10000000000000000000000000000000 ((_ fp.to_sbv 32) roundTowardZero lt!5309)))))) #b00000000000000000000000000000010 ((_ to_fp 11 53) roundNearestTiesToEven (ite (fp.isNaN lt!5305) #b00000000000000000000000000000000 (ite (fp.gt lt!5305 ((_ to_fp 11 53) roundTowardZero #b01111111111111111111111111111111)) #b01111111111111111111111111111111 (ite (fp.lt lt!5305 ((_ to_fp 11 53) roundTowardZero #b10000000000000000000000000000000)) #b10000000000000000000000000000000 ((_ fp.to_sbv 32) roundTowardZero lt!5305)))))) #b00000000000000000000000000000011 ((_ to_fp 11 53) roundNearestTiesToEven (ite (fp.isNaN lt!5303) #b00000000000000000000000000000000 (ite (fp.gt lt!5303 ((_ to_fp 11 53) roundTowardZero #b01111111111111111111111111111111)) #b01111111111111111111111111111111 (ite (fp.lt lt!5303 ((_ to_fp 11 53) roundTowardZero #b10000000000000000000000000000000)) #b10000000000000000000000000000000 ((_ fp.to_sbv 32) roundTowardZero lt!5303)))))) #b00000000000000000000000000000011)) (fp #b0 #b10000010111 #b0000000000000000000000000000000000000000000000000000)) ((_ to_fp 11 53) roundTowardZero #b01111111111111111111111111111111)) #b01111111111111111111111111111111 (ite (fp.lt (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven lt!5303 (select (store (store (store (store ((as const (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 ((_ to_fp 11 53) roundNearestTiesToEven (ite (fp.isNaN lt!5308) #b00000000000000000000000000000000 (ite (fp.gt lt!5308 ((_ to_fp 11 53) roundTowardZero #b01111111111111111111111111111111)) #b01111111111111111111111111111111 (ite (fp.lt lt!5308 ((_ to_fp 11 53) roundTowardZero #b10000000000000000000000000000000)) #b10000000000000000000000000000000 ((_ fp.to_sbv 32) roundTowardZero lt!5308)))))) #b00000000000000000000000000000001 ((_ to_fp 11 53) roundNearestTiesToEven (ite (fp.isNaN lt!5309) #b00000000000000000000000000000000 (ite (fp.gt lt!5309 ((_ to_fp 11 53) roundTowardZero #b01111111111111111111111111111111)) #b01111111111111111111111111111111 (ite (fp.lt lt!5309 ((_ to_fp 11 53) roundTowardZero #b10000000000000000000000000000000)) #b10000000000000000000000000000000 ((_ fp.to_sbv 32) roundTowardZero lt!5309)))))) #b00000000000000000000000000000010 ((_ to_fp 11 53) roundNearestTiesToEven (ite (fp.isNaN lt!5305) #b00000000000000000000000000000000 (ite (fp.gt lt!5305 ((_ to_fp 11 53) roundTowardZero #b01111111111111111111111111111111)) #b01111111111111111111111111111111 (ite (fp.lt lt!5305 ((_ to_fp 11 53) roundTowardZero #b10000000000000000000000000000000)) #b10000000000000000000000000000000 ((_ fp.to_sbv 32) roundTowardZero lt!5305)))))) #b00000000000000000000000000000011 ((_ to_fp 11 53) roundNearestTiesToEven (ite (fp.isNaN lt!5303) #b00000000000000000000000000000000 (ite (fp.gt lt!5303 ((_ to_fp 11 53) roundTowardZero #b01111111111111111111111111111111)) #b01111111111111111111111111111111 (ite (fp.lt lt!5303 ((_ to_fp 11 53) roundTowardZero #b10000000000000000000000000000000)) #b10000000000000000000000000000000 ((_ fp.to_sbv 32) roundTowardZero lt!5303)))))) #b00000000000000000000000000000011)) (fp #b0 #b10000010111 #b0000000000000000000000000000000000000000000000000000)) ((_ to_fp 11 53) roundTowardZero #b10000000000000000000000000000000)) #b10000000000000000000000000000000 ((_ fp.to_sbv 32) roundTowardZero (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven lt!5303 (select (store (store (store (store ((as const (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 ((_ to_fp 11 53) roundNearestTiesToEven (ite (fp.isNaN lt!5308) #b00000000000000000000000000000000 (ite (fp.gt lt!5308 ((_ to_fp 11 53) roundTowardZero #b01111111111111111111111111111111)) #b01111111111111111111111111111111 (ite (fp.lt lt!5308 ((_ to_fp 11 53) roundTowardZero #b10000000000000000000000000000000)) #b10000000000000000000000000000000 ((_ fp.to_sbv 32) roundTowardZero lt!5308)))))) #b00000000000000000000000000000001 ((_ to_fp 11 53) roundNearestTiesToEven (ite (fp.isNaN lt!5309) #b00000000000000000000000000000000 (ite (fp.gt lt!5309 ((_ to_fp 11 53) roundTowardZero #b01111111111111111111111111111111)) #b01111111111111111111111111111111 (ite (fp.lt lt!5309 ((_ to_fp 11 53) roundTowardZero #b10000000000000000000000000000000)) #b10000000000000000000000000000000 ((_ fp.to_sbv 32) roundTowardZero lt!5309)))))) #b00000000000000000000000000000010 ((_ to_fp 11 53) roundNearestTiesToEven (ite (fp.isNaN lt!5305) #b00000000000000000000000000000000 (ite (fp.gt lt!5305 ((_ to_fp 11 53) roundTowardZero #b01111111111111111111111111111111)) #b01111111111111111111111111111111 (ite (fp.lt lt!5305 ((_ to_fp 11 53) roundTowardZero #b10000000000000000000000000000000)) #b10000000000000000000000000000000 ((_ fp.to_sbv 32) roundTowardZero lt!5305)))))) #b00000000000000000000000000000011 ((_ to_fp 11 53) roundNearestTiesToEven (ite (fp.isNaN lt!5303) #b00000000000000000000000000000000 (ite (fp.gt lt!5303 ((_ to_fp 11 53) roundTowardZero #b01111111111111111111111111111111)) #b01111111111111111111111111111111 (ite (fp.lt lt!5303 ((_ to_fp 11 53) roundTowardZero #b10000000000000000000000000000000)) #b10000000000000000000000000000000 ((_ fp.to_sbv 32) roundTowardZero lt!5303)))))) #b00000000000000000000000000000011)) (fp #b0 #b10000010111 #b0000000000000000000000000000000000000000000000000000)))))))) #b00000000000000000000000000000101))))))

(assert (= (and start!2017 res!8376) b!10393))

(assert (= (and b!10393 res!8379) b!10394))

(assert (= (and b!10394 res!8377) b!10395))

(assert (= (and b!10395 (not res!8378)) b!10396))

(declare-fun m!16203 () Bool)

(assert (=> b!10393 m!16203))

(declare-fun m!16205 () Bool)

(assert (=> b!10395 m!16205))

(declare-fun m!16207 () Bool)

(assert (=> b!10395 m!16207))

(declare-fun m!16209 () Bool)

(assert (=> b!10395 m!16209))

(declare-fun m!16211 () Bool)

(assert (=> b!10395 m!16211))

(declare-fun m!16213 () Bool)

(assert (=> b!10395 m!16213))

(declare-fun m!16215 () Bool)

(assert (=> b!10395 m!16215))

(declare-fun m!16217 () Bool)

(assert (=> b!10395 m!16217))

(assert (=> b!10395 m!16213))

(declare-fun m!16219 () Bool)

(assert (=> b!10395 m!16219))

(declare-fun m!16221 () Bool)

(assert (=> b!10395 m!16221))

(assert (=> b!10395 m!16217))

(assert (=> b!10396 m!16205))

(declare-fun m!16223 () Bool)

(assert (=> b!10396 m!16223))

(declare-fun m!16225 () Bool)

(assert (=> b!10396 m!16225))

(assert (=> b!10396 m!16209))

(declare-fun m!16227 () Bool)

(assert (=> b!10396 m!16227))

(assert (=> b!10396 m!16211))

(declare-fun m!16229 () Bool)

(assert (=> b!10396 m!16229))

(check-sat (not b!10396) (not b!10395) (not b!10393))
(check-sat)
