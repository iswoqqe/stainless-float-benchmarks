; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!1991 () Bool)

(assert start!1991)

(declare-fun b!10025 () Bool)

(declare-fun e!5793 () Bool)

(declare-fun e!5792 () Bool)

(assert (=> b!10025 (= e!5793 e!5792)))

(declare-fun res!8038 () Bool)

(assert (=> b!10025 (=> (not res!8038) (not e!5792))))

(declare-fun lt!5237 () (_ BitVec 32))

(assert (=> b!10025 (= res!8038 (and (bvsle #b11111111111111111111111111101001 lt!5237) (bvsle lt!5237 #b00000000000000000000001111101000)))))

(declare-fun lt!5233 () (_ BitVec 32))

(assert (=> b!10025 (= lt!5237 (bvsub (bvashr lt!5233 #b00000000000000000000000000010100) #b00000000000000000000010000010110))))

(declare-fun x!143 () (_ FloatingPoint 11 53))

(declare-fun __HI!0 ((_ FloatingPoint 11 53)) (_ BitVec 32))

(assert (=> b!10025 (= lt!5233 (bvand (__HI!0 x!143) #b01111111111111111111111111111111))))

(declare-fun lt!5234 () (_ FloatingPoint 11 53))

(declare-fun lt!5235 () (_ FloatingPoint 11 53))

(declare-fun lt!5232 () (_ FloatingPoint 11 53))

(declare-fun lt!5238 () (_ FloatingPoint 11 53))

(declare-fun e!5791 () Bool)

(declare-fun b!10028 () Bool)

(declare-datatypes ((array!739 0))(
  ( (array!740 (arr!326 (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (size!326 (_ BitVec 32))) )
))
(declare-fun xxInv!0 (array!739) Bool)

(assert (=> b!10028 (= e!5791 (not (xxInv!0 (array!740 (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 ((_ to_fp 11 53) roundNearestTiesToEven (ite (fp.isNaN lt!5232) #b00000000000000000000000000000000 (ite (fp.gt lt!5232 ((_ to_fp 11 53) roundTowardZero #b01111111111111111111111111111111)) #b01111111111111111111111111111111 (ite (fp.lt lt!5232 ((_ to_fp 11 53) roundTowardZero #b10000000000000000000000000000000)) #b10000000000000000000000000000000 ((_ fp.to_sbv 32) roundTowardZero lt!5232)))))) #b00000000000000000000000000000001 ((_ to_fp 11 53) roundNearestTiesToEven (ite (fp.isNaN lt!5235) #b00000000000000000000000000000000 (ite (fp.gt lt!5235 ((_ to_fp 11 53) roundTowardZero #b01111111111111111111111111111111)) #b01111111111111111111111111111111 (ite (fp.lt lt!5235 ((_ to_fp 11 53) roundTowardZero #b10000000000000000000000000000000)) #b10000000000000000000000000000000 ((_ fp.to_sbv 32) roundTowardZero lt!5235)))))) #b00000000000000000000000000000010 ((_ to_fp 11 53) roundNearestTiesToEven (ite (fp.isNaN lt!5234) #b00000000000000000000000000000000 (ite (fp.gt lt!5234 ((_ to_fp 11 53) roundTowardZero #b01111111111111111111111111111111)) #b01111111111111111111111111111111 (ite (fp.lt lt!5234 ((_ to_fp 11 53) roundTowardZero #b10000000000000000000000000000000)) #b10000000000000000000000000000000 ((_ fp.to_sbv 32) roundTowardZero lt!5234)))))) #b00000000000000000000000000000011 ((_ to_fp 11 53) roundNearestTiesToEven (ite (fp.isNaN lt!5238) #b00000000000000000000000000000000 (ite (fp.gt lt!5238 ((_ to_fp 11 53) roundTowardZero #b01111111111111111111111111111111)) #b01111111111111111111111111111111 (ite (fp.lt lt!5238 ((_ to_fp 11 53) roundTowardZero #b10000000000000000000000000000000)) #b10000000000000000000000000000000 ((_ fp.to_sbv 32) roundTowardZero lt!5238)))))) #b00000000000000000000000000000100 ((_ to_fp 11 53) roundNearestTiesToEven (ite (fp.isNaN (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven lt!5238 (select (store (store (store (store ((as const (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 ((_ to_fp 11 53) roundNearestTiesToEven (ite (fp.isNaN lt!5232) #b00000000000000000000000000000000 (ite (fp.gt lt!5232 ((_ to_fp 11 53) roundTowardZero #b01111111111111111111111111111111)) #b01111111111111111111111111111111 (ite (fp.lt lt!5232 ((_ to_fp 11 53) roundTowardZero #b10000000000000000000000000000000)) #b10000000000000000000000000000000 ((_ fp.to_sbv 32) roundTowardZero lt!5232)))))) #b00000000000000000000000000000001 ((_ to_fp 11 53) roundNearestTiesToEven (ite (fp.isNaN lt!5235) #b00000000000000000000000000000000 (ite (fp.gt lt!5235 ((_ to_fp 11 53) roundTowardZero #b01111111111111111111111111111111)) #b01111111111111111111111111111111 (ite (fp.lt lt!5235 ((_ to_fp 11 53) roundTowardZero #b10000000000000000000000000000000)) #b10000000000000000000000000000000 ((_ fp.to_sbv 32) roundTowardZero lt!5235)))))) #b00000000000000000000000000000010 ((_ to_fp 11 53) roundNearestTiesToEven (ite (fp.isNaN lt!5234) #b00000000000000000000000000000000 (ite (fp.gt lt!5234 ((_ to_fp 11 53) roundTowardZero #b01111111111111111111111111111111)) #b01111111111111111111111111111111 (ite (fp.lt lt!5234 ((_ to_fp 11 53) roundTowardZero #b10000000000000000000000000000000)) #b10000000000000000000000000000000 ((_ fp.to_sbv 32) roundTowardZero lt!5234)))))) #b00000000000000000000000000000011 ((_ to_fp 11 53) roundNearestTiesToEven (ite (fp.isNaN lt!5238) #b00000000000000000000000000000000 (ite (fp.gt lt!5238 ((_ to_fp 11 53) roundTowardZero #b01111111111111111111111111111111)) #b01111111111111111111111111111111 (ite (fp.lt lt!5238 ((_ to_fp 11 53) roundTowardZero #b10000000000000000000000000000000)) #b10000000000000000000000000000000 ((_ fp.to_sbv 32) roundTowardZero lt!5238)))))) #b00000000000000000000000000000011)) (fp #b0 #b10000010111 #b0000000000000000000000000000000000000000000000000000))) #b00000000000000000000000000000000 (ite (fp.gt (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven lt!5238 (select (store (store (store (store ((as const (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 ((_ to_fp 11 53) roundNearestTiesToEven (ite (fp.isNaN lt!5232) #b00000000000000000000000000000000 (ite (fp.gt lt!5232 ((_ to_fp 11 53) roundTowardZero #b01111111111111111111111111111111)) #b01111111111111111111111111111111 (ite (fp.lt lt!5232 ((_ to_fp 11 53) roundTowardZero #b10000000000000000000000000000000)) #b10000000000000000000000000000000 ((_ fp.to_sbv 32) roundTowardZero lt!5232)))))) #b00000000000000000000000000000001 ((_ to_fp 11 53) roundNearestTiesToEven (ite (fp.isNaN lt!5235) #b00000000000000000000000000000000 (ite (fp.gt lt!5235 ((_ to_fp 11 53) roundTowardZero #b01111111111111111111111111111111)) #b01111111111111111111111111111111 (ite (fp.lt lt!5235 ((_ to_fp 11 53) roundTowardZero #b10000000000000000000000000000000)) #b10000000000000000000000000000000 ((_ fp.to_sbv 32) roundTowardZero lt!5235)))))) #b00000000000000000000000000000010 ((_ to_fp 11 53) roundNearestTiesToEven (ite (fp.isNaN lt!5234) #b00000000000000000000000000000000 (ite (fp.gt lt!5234 ((_ to_fp 11 53) roundTowardZero #b01111111111111111111111111111111)) #b01111111111111111111111111111111 (ite (fp.lt lt!5234 ((_ to_fp 11 53) roundTowardZero #b10000000000000000000000000000000)) #b10000000000000000000000000000000 ((_ fp.to_sbv 32) roundTowardZero lt!5234)))))) #b00000000000000000000000000000011 ((_ to_fp 11 53) roundNearestTiesToEven (ite (fp.isNaN lt!5238) #b00000000000000000000000000000000 (ite (fp.gt lt!5238 ((_ to_fp 11 53) roundTowardZero #b01111111111111111111111111111111)) #b01111111111111111111111111111111 (ite (fp.lt lt!5238 ((_ to_fp 11 53) roundTowardZero #b10000000000000000000000000000000)) #b10000000000000000000000000000000 ((_ fp.to_sbv 32) roundTowardZero lt!5238)))))) #b00000000000000000000000000000011)) (fp #b0 #b10000010111 #b0000000000000000000000000000000000000000000000000000)) ((_ to_fp 11 53) roundTowardZero #b01111111111111111111111111111111)) #b01111111111111111111111111111111 (ite (fp.lt (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven lt!5238 (select (store (store (store (store ((as const (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 ((_ to_fp 11 53) roundNearestTiesToEven (ite (fp.isNaN lt!5232) #b00000000000000000000000000000000 (ite (fp.gt lt!5232 ((_ to_fp 11 53) roundTowardZero #b01111111111111111111111111111111)) #b01111111111111111111111111111111 (ite (fp.lt lt!5232 ((_ to_fp 11 53) roundTowardZero #b10000000000000000000000000000000)) #b10000000000000000000000000000000 ((_ fp.to_sbv 32) roundTowardZero lt!5232)))))) #b00000000000000000000000000000001 ((_ to_fp 11 53) roundNearestTiesToEven (ite (fp.isNaN lt!5235) #b00000000000000000000000000000000 (ite (fp.gt lt!5235 ((_ to_fp 11 53) roundTowardZero #b01111111111111111111111111111111)) #b01111111111111111111111111111111 (ite (fp.lt lt!5235 ((_ to_fp 11 53) roundTowardZero #b10000000000000000000000000000000)) #b10000000000000000000000000000000 ((_ fp.to_sbv 32) roundTowardZero lt!5235)))))) #b00000000000000000000000000000010 ((_ to_fp 11 53) roundNearestTiesToEven (ite (fp.isNaN lt!5234) #b00000000000000000000000000000000 (ite (fp.gt lt!5234 ((_ to_fp 11 53) roundTowardZero #b01111111111111111111111111111111)) #b01111111111111111111111111111111 (ite (fp.lt lt!5234 ((_ to_fp 11 53) roundTowardZero #b10000000000000000000000000000000)) #b10000000000000000000000000000000 ((_ fp.to_sbv 32) roundTowardZero lt!5234)))))) #b00000000000000000000000000000011 ((_ to_fp 11 53) roundNearestTiesToEven (ite (fp.isNaN lt!5238) #b00000000000000000000000000000000 (ite (fp.gt lt!5238 ((_ to_fp 11 53) roundTowardZero #b01111111111111111111111111111111)) #b01111111111111111111111111111111 (ite (fp.lt lt!5238 ((_ to_fp 11 53) roundTowardZero #b10000000000000000000000000000000)) #b10000000000000000000000000000000 ((_ fp.to_sbv 32) roundTowardZero lt!5238)))))) #b00000000000000000000000000000011)) (fp #b0 #b10000010111 #b0000000000000000000000000000000000000000000000000000)) ((_ to_fp 11 53) roundTowardZero #b10000000000000000000000000000000)) #b10000000000000000000000000000000 ((_ fp.to_sbv 32) roundTowardZero (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven lt!5238 (select (store (store (store (store ((as const (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 ((_ to_fp 11 53) roundNearestTiesToEven (ite (fp.isNaN lt!5232) #b00000000000000000000000000000000 (ite (fp.gt lt!5232 ((_ to_fp 11 53) roundTowardZero #b01111111111111111111111111111111)) #b01111111111111111111111111111111 (ite (fp.lt lt!5232 ((_ to_fp 11 53) roundTowardZero #b10000000000000000000000000000000)) #b10000000000000000000000000000000 ((_ fp.to_sbv 32) roundTowardZero lt!5232)))))) #b00000000000000000000000000000001 ((_ to_fp 11 53) roundNearestTiesToEven (ite (fp.isNaN lt!5235) #b00000000000000000000000000000000 (ite (fp.gt lt!5235 ((_ to_fp 11 53) roundTowardZero #b01111111111111111111111111111111)) #b01111111111111111111111111111111 (ite (fp.lt lt!5235 ((_ to_fp 11 53) roundTowardZero #b10000000000000000000000000000000)) #b10000000000000000000000000000000 ((_ fp.to_sbv 32) roundTowardZero lt!5235)))))) #b00000000000000000000000000000010 ((_ to_fp 11 53) roundNearestTiesToEven (ite (fp.isNaN lt!5234) #b00000000000000000000000000000000 (ite (fp.gt lt!5234 ((_ to_fp 11 53) roundTowardZero #b01111111111111111111111111111111)) #b01111111111111111111111111111111 (ite (fp.lt lt!5234 ((_ to_fp 11 53) roundTowardZero #b10000000000000000000000000000000)) #b10000000000000000000000000000000 ((_ fp.to_sbv 32) roundTowardZero lt!5234)))))) #b00000000000000000000000000000011 ((_ to_fp 11 53) roundNearestTiesToEven (ite (fp.isNaN lt!5238) #b00000000000000000000000000000000 (ite (fp.gt lt!5238 ((_ to_fp 11 53) roundTowardZero #b01111111111111111111111111111111)) #b01111111111111111111111111111111 (ite (fp.lt lt!5238 ((_ to_fp 11 53) roundTowardZero #b10000000000000000000000000000000)) #b10000000000000000000000000000000 ((_ fp.to_sbv 32) roundTowardZero lt!5238)))))) #b00000000000000000000000000000011)) (fp #b0 #b10000010111 #b0000000000000000000000000000000000000000000000000000)))))))) #b00000000000000000000000000000101))))))

(declare-fun res!8039 () Bool)

(assert (=> start!1991 (=> (not res!8039) (not e!5793))))

(assert (=> start!1991 (= res!8039 (and (fp.leq (fp #b0 #b01111111111 #b0000000000000000000000000000000000000000000000000000) x!143) (not (fp.isInfinite x!143)) (not (fp.isNaN x!143))))))

(assert (=> start!1991 e!5793))

(assert (=> start!1991 true))

(declare-fun b!10027 () Bool)

(declare-fun e!5794 () Bool)

(assert (=> b!10027 (= e!5794 e!5791)))

(declare-fun res!8041 () Bool)

(assert (=> b!10027 (=> res!8041 e!5791)))

(declare-fun lt!5236 () (_ BitVec 32))

(assert (=> b!10027 (= res!8041 (or (bvsgt #b00000000000000000000000000011000 lt!5236) (bvsgt lt!5236 #b00000000000000000000001111110000) (not (= (bvsrem lt!5236 #b00000000000000000000000000011000) #b00000000000000000000000000000000))))))

(assert (=> b!10027 (= lt!5238 (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven lt!5234 (select (store (store (store ((as const (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 ((_ to_fp 11 53) roundNearestTiesToEven (ite (fp.isNaN lt!5232) #b00000000000000000000000000000000 (ite (fp.gt lt!5232 ((_ to_fp 11 53) roundTowardZero #b01111111111111111111111111111111)) #b01111111111111111111111111111111 (ite (fp.lt lt!5232 ((_ to_fp 11 53) roundTowardZero #b10000000000000000000000000000000)) #b10000000000000000000000000000000 ((_ fp.to_sbv 32) roundTowardZero lt!5232)))))) #b00000000000000000000000000000001 ((_ to_fp 11 53) roundNearestTiesToEven (ite (fp.isNaN lt!5235) #b00000000000000000000000000000000 (ite (fp.gt lt!5235 ((_ to_fp 11 53) roundTowardZero #b01111111111111111111111111111111)) #b01111111111111111111111111111111 (ite (fp.lt lt!5235 ((_ to_fp 11 53) roundTowardZero #b10000000000000000000000000000000)) #b10000000000000000000000000000000 ((_ fp.to_sbv 32) roundTowardZero lt!5235)))))) #b00000000000000000000000000000010 ((_ to_fp 11 53) roundNearestTiesToEven (ite (fp.isNaN lt!5234) #b00000000000000000000000000000000 (ite (fp.gt lt!5234 ((_ to_fp 11 53) roundTowardZero #b01111111111111111111111111111111)) #b01111111111111111111111111111111 (ite (fp.lt lt!5234 ((_ to_fp 11 53) roundTowardZero #b10000000000000000000000000000000)) #b10000000000000000000000000000000 ((_ fp.to_sbv 32) roundTowardZero lt!5234)))))) #b00000000000000000000000000000010)) (fp #b0 #b10000010111 #b0000000000000000000000000000000000000000000000000000)))))

(assert (=> b!10027 (= lt!5234 (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven lt!5235 (select (store (store ((as const (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 ((_ to_fp 11 53) roundNearestTiesToEven (ite (fp.isNaN lt!5232) #b00000000000000000000000000000000 (ite (fp.gt lt!5232 ((_ to_fp 11 53) roundTowardZero #b01111111111111111111111111111111)) #b01111111111111111111111111111111 (ite (fp.lt lt!5232 ((_ to_fp 11 53) roundTowardZero #b10000000000000000000000000000000)) #b10000000000000000000000000000000 ((_ fp.to_sbv 32) roundTowardZero lt!5232)))))) #b00000000000000000000000000000001 ((_ to_fp 11 53) roundNearestTiesToEven (ite (fp.isNaN lt!5235) #b00000000000000000000000000000000 (ite (fp.gt lt!5235 ((_ to_fp 11 53) roundTowardZero #b01111111111111111111111111111111)) #b01111111111111111111111111111111 (ite (fp.lt lt!5235 ((_ to_fp 11 53) roundTowardZero #b10000000000000000000000000000000)) #b10000000000000000000000000000000 ((_ fp.to_sbv 32) roundTowardZero lt!5235)))))) #b00000000000000000000000000000001)) (fp #b0 #b10000010111 #b0000000000000000000000000000000000000000000000000000)))))

(assert (=> b!10027 (= lt!5235 (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven lt!5232 (select (store ((as const (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 ((_ to_fp 11 53) roundNearestTiesToEven (ite (fp.isNaN lt!5232) #b00000000000000000000000000000000 (ite (fp.gt lt!5232 ((_ to_fp 11 53) roundTowardZero #b01111111111111111111111111111111)) #b01111111111111111111111111111111 (ite (fp.lt lt!5232 ((_ to_fp 11 53) roundTowardZero #b10000000000000000000000000000000)) #b10000000000000000000000000000000 ((_ fp.to_sbv 32) roundTowardZero lt!5232)))))) #b00000000000000000000000000000000)) (fp #b0 #b10000010111 #b0000000000000000000000000000000000000000000000000000)))))

(declare-fun __HI!1 ((_ FloatingPoint 11 53) (_ BitVec 32)) (_ FloatingPoint 11 53))

(declare-fun __LO!1 ((_ FloatingPoint 11 53) (_ BitVec 32)) (_ FloatingPoint 11 53))

(declare-fun __LO!0 ((_ FloatingPoint 11 53)) (_ BitVec 32))

(assert (=> b!10027 (= lt!5232 (__HI!1 (__LO!1 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (__LO!0 x!143)) (bvsub lt!5233 (bvshl lt!5236 #b00000000000000000000000000010100))))))

(declare-fun b!10026 () Bool)

(assert (=> b!10026 (= e!5792 e!5794)))

(declare-fun res!8040 () Bool)

(assert (=> b!10026 (=> (not res!8040) (not e!5794))))

(assert (=> b!10026 (= res!8040 (and (bvsle #b00000000000000000000000000011000 lt!5236) (bvsle lt!5236 #b00000000000000000000001111110000) (= (bvsrem lt!5236 #b00000000000000000000000000011000) #b00000000000000000000000000000000)))))

(declare-fun lt!5231 () (_ BitVec 32))

(assert (=> b!10026 (= lt!5236 (ite (bvslt lt!5231 #b00000000000000000000000000011000) #b00000000000000000000000000011000 lt!5231))))

(assert (=> b!10026 (= lt!5231 (bvmul #b00000000000000000000000000011000 (bvsdiv (bvadd lt!5237 #b00000000000000000000000000010111) #b00000000000000000000000000011000)))))

(assert (= (and start!1991 res!8039) b!10025))

(assert (= (and b!10025 res!8038) b!10026))

(assert (= (and b!10026 res!8040) b!10027))

(assert (= (and b!10027 (not res!8041)) b!10028))

(declare-fun m!14379 () Bool)

(assert (=> b!10025 m!14379))

(declare-fun m!14381 () Bool)

(assert (=> b!10028 m!14381))

(declare-fun m!14383 () Bool)

(assert (=> b!10028 m!14383))

(declare-fun m!14385 () Bool)

(assert (=> b!10028 m!14385))

(declare-fun m!14387 () Bool)

(assert (=> b!10028 m!14387))

(declare-fun m!14389 () Bool)

(assert (=> b!10028 m!14389))

(declare-fun m!14391 () Bool)

(assert (=> b!10028 m!14391))

(declare-fun m!14393 () Bool)

(assert (=> b!10028 m!14393))

(assert (=> b!10027 m!14385))

(declare-fun m!14395 () Bool)

(assert (=> b!10027 m!14395))

(declare-fun m!14397 () Bool)

(assert (=> b!10027 m!14397))

(assert (=> b!10027 m!14387))

(assert (=> b!10027 m!14391))

(declare-fun m!14399 () Bool)

(assert (=> b!10027 m!14399))

(declare-fun m!14401 () Bool)

(assert (=> b!10027 m!14401))

(declare-fun m!14403 () Bool)

(assert (=> b!10027 m!14403))

(assert (=> b!10027 m!14401))

(declare-fun m!14405 () Bool)

(assert (=> b!10027 m!14405))

(assert (=> b!10027 m!14399))

(check-sat (not b!10027) (not b!10028) (not b!10025))
(check-sat)
