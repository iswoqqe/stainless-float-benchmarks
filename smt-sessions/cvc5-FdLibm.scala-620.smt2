; Options: -q --produce-models --incremental --print-success --lang smt2.6 --arrays-exp
(set-logic ALL)

(declare-fun start!3245 () Bool)

(assert start!3245)

(declare-datatypes ((array!1504 0))(
  ( (array!1505 (arr!664 (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (size!664 (_ BitVec 32))) )
))
(declare-fun fq!41 () array!1504)

(assert (=> start!3245 (and (= (size!664 fq!41) #b00000000000000000000000000010100) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!664 fq!41) #b00000000000000000000000000000000)) (fp.leq (select (arr!664 fq!41) #b00000000000000000000000000000000) (fp #b0 #b01111111110 #b1001001000011111101100001101101111000000100110000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!664 fq!41) #b00000000000000000000000000000001)) (fp.leq (select (arr!664 fq!41) #b00000000000000000000000000000001) (fp #b0 #b01111101000 #b0001101000100000100011001001010011001110101111100000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!664 fq!41) #b00000000000000000000000000000010)) (fp.leq (select (arr!664 fq!41) #b00000000000000000000000000000010) (fp #b0 #b01111010000 #b1100110001001011101000011101001010011001111110100000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!664 fq!41) #b00000000000000000000000000000011)) (fp.leq (select (arr!664 fq!41) #b00000000000000000000000000000011) (fp #b0 #b01110111001 #b0100100001001011101001000100011000011011101101111000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!664 fq!41) #b00000000000000000000000000000100)) (fp.leq (select (arr!664 fq!41) #b00000000000000000000000000000100) (fp #b0 #b01110100001 #b1001101000011011010011011100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!664 fq!41) #b00000000000000000000000000000101)) (fp.leq (select (arr!664 fq!41) #b00000000000000000000000000000101) (fp #b0 #b01110001001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!664 fq!41) #b00000000000000000000000000000110)) (fp.leq (select (arr!664 fq!41) #b00000000000000000000000000000110) (fp #b0 #b01101110001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!664 fq!41) #b00000000000000000000000000000111)) (fp.leq (select (arr!664 fq!41) #b00000000000000000000000000000111) (fp #b0 #b01101011001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!664 fq!41) #b00000000000000000000000000001000)) (fp.leq (select (arr!664 fq!41) #b00000000000000000000000000001000) (fp #b0 #b01101000001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!664 fq!41) #b00000000000000000000000000001001)) (fp.leq (select (arr!664 fq!41) #b00000000000000000000000000001001) (fp #b0 #b01100101001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!664 fq!41) #b00000000000000000000000000001010)) (fp.leq (select (arr!664 fq!41) #b00000000000000000000000000001010) (fp #b0 #b01100010001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!664 fq!41) #b00000000000000000000000000001011)) (fp.leq (select (arr!664 fq!41) #b00000000000000000000000000001011) (fp #b0 #b01011111001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!664 fq!41) #b00000000000000000000000000001100)) (fp.leq (select (arr!664 fq!41) #b00000000000000000000000000001100) (fp #b0 #b01011100001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!664 fq!41) #b00000000000000000000000000001101)) (fp.leq (select (arr!664 fq!41) #b00000000000000000000000000001101) (fp #b0 #b01011001001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!664 fq!41) #b00000000000000000000000000001110)) (fp.leq (select (arr!664 fq!41) #b00000000000000000000000000001110) (fp #b0 #b01010110001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!664 fq!41) #b00000000000000000000000000001111)) (fp.leq (select (arr!664 fq!41) #b00000000000000000000000000001111) (fp #b0 #b01010011001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!664 fq!41) #b00000000000000000000000000010000)) (bvsge #b00000000000000000000000000010000 (size!664 fq!41)))))

(declare-fun array_inv!612 (array!1504) Bool)

(assert (=> start!3245 (array_inv!612 fq!41)))

(declare-fun bs!3622 () Bool)

(assert (= bs!3622 start!3245))

(declare-fun m!29585 () Bool)

(assert (=> bs!3622 m!29585))

(declare-fun m!29587 () Bool)

(assert (=> bs!3622 m!29587))

(declare-fun m!29589 () Bool)

(assert (=> bs!3622 m!29589))

(declare-fun m!29591 () Bool)

(assert (=> bs!3622 m!29591))

(declare-fun m!29593 () Bool)

(assert (=> bs!3622 m!29593))

(declare-fun m!29595 () Bool)

(assert (=> bs!3622 m!29595))

(declare-fun m!29597 () Bool)

(assert (=> bs!3622 m!29597))

(declare-fun m!29599 () Bool)

(assert (=> bs!3622 m!29599))

(declare-fun m!29601 () Bool)

(assert (=> bs!3622 m!29601))

(declare-fun m!29603 () Bool)

(assert (=> bs!3622 m!29603))

(declare-fun m!29605 () Bool)

(assert (=> bs!3622 m!29605))

(declare-fun m!29607 () Bool)

(assert (=> bs!3622 m!29607))

(declare-fun m!29609 () Bool)

(assert (=> bs!3622 m!29609))

(declare-fun m!29611 () Bool)

(assert (=> bs!3622 m!29611))

(declare-fun m!29613 () Bool)

(assert (=> bs!3622 m!29613))

(declare-fun m!29615 () Bool)

(assert (=> bs!3622 m!29615))

(declare-fun m!29617 () Bool)

(assert (=> bs!3622 m!29617))

(declare-fun m!29619 () Bool)

(assert (=> bs!3622 m!29619))

(push 1)

(assert (not start!3245))

(check-sat)

(pop 1)

(push 1)

(check-sat)

(pop 1)

