; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!2105 () Bool)

(assert start!2105)

(declare-fun res!8609 () Bool)

(declare-fun e!6077 () Bool)

(assert (=> start!2105 (=> (not res!8609) (not e!6077))))

(declare-datatypes ((array!768 0))(
  ( (array!769 (arr!338 (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (size!338 (_ BitVec 32))) )
))
(declare-fun fq!120 () array!768)

(assert (=> start!2105 (= res!8609 (= (size!338 fq!120) #b00000000000000000000000000010100))))

(assert (=> start!2105 e!6077))

(assert (=> start!2105 true))

(declare-fun array_inv!287 (array!768) Bool)

(assert (=> start!2105 (array_inv!287 fq!120)))

(declare-fun b!10734 () Bool)

(declare-fun res!8610 () Bool)

(assert (=> b!10734 (=> (not res!8610) (not e!6077))))

(declare-fun fqInv!0 (array!768) Bool)

(assert (=> b!10734 (= res!8610 (fqInv!0 fq!120))))

(declare-fun b!10735 () Bool)

(declare-fun i!347 () (_ BitVec 32))

(declare-fun jz!77 () (_ BitVec 32))

(declare-fun c!23 () (_ FloatingPoint 11 53))

(declare-fun s!25 () (_ FloatingPoint 11 53))

(assert (=> b!10735 (= e!6077 (and (bvsle #b00000000000000000000000000000000 jz!77) (bvslt jz!77 #b00000000000000000000000000010100) (bvsle #b11111111111111111111111111111111 i!347) (bvsle i!347 (bvsub jz!77 #b00000000000000000000000000000001)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) s!25) (fp.leq s!25 (select (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (fp #b0 #b01111111110 #b1001001000011111101101010100010001000010110100011000)) #b00000000000000000000000000000001 (fp #b0 #b01111101000 #b0001101000100000100011100110000100011010011000100110)) #b00000000000000000000000000001010 (fp #b0 #b01100010001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001011 (fp #b0 #b01011111001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001100 (fp #b0 #b01011100001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001101 (fp #b0 #b01011001001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001110 (fp #b0 #b01010110001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001111 (fp #b0 #b01010011001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000010000 (fp #b0 #b01010000001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000010001 (fp #b0 #b01001101001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000010010 (fp #b0 #b01001010001 #b1011101001010010010101100111111111111111111111100100)) #b00000000000000000000000000010011 (fp #b0 #b01000111001 #b1011101001010010010101001100010110101101101010011000)) #b00000000000000000000000000000010 (fp #b0 #b01111010000 #b1100110001001011101001000110001100110001010001011100)) #b00000000000000000000000000000011 (fp #b0 #b01110111001 #b0100100001001011101001011110000000110111000001110000)) #b00000000000000000000000000000100 (fp #b0 #b01110100001 #b1001101000011011010011111000000000000000000000000000)) #b00000000000000000000000000000101 (fp #b0 #b01110001001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000000110 (fp #b0 #b01101110001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000000111 (fp #b0 #b01101011001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001000 (fp #b0 #b01101000001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001001 (fp #b0 #b01100101001 #b1011101001010010010101101000000000000000000000000000)) (bvadd i!347 #b00000000000000000000000000000001))) (fp.eq (fp.add roundNearestTiesToEven s!25 c!23) s!25) (bvsge i!347 #b00000000000000000000000000000000) (fp.leq s!25 (fp #b0 #b01111111111 #b0000000000000000000000000000000000000000000000000000)) (fp.geq s!25 (select (arr!338 fq!120) i!347)) (let ((fp!66 (fp.add roundNearestTiesToEven s!25 (select (arr!338 fq!120) i!347)))) (or (fp.isInfinite fp!66) (fp.isNaN fp!66)))))))

(assert (= (and start!2105 res!8609) b!10734))

(assert (= (and b!10734 res!8610) b!10735))

(declare-fun m!16463 () Bool)

(assert (=> start!2105 m!16463))

(declare-fun m!16465 () Bool)

(assert (=> b!10734 m!16465))

(declare-fun m!16467 () Bool)

(assert (=> b!10735 m!16467))

(declare-fun m!16469 () Bool)

(assert (=> b!10735 m!16469))

(check-sat (not b!10734) (not start!2105))
(check-sat)
(get-model)

(declare-fun d!4885 () Bool)

(assert (=> d!4885 (= (fqInv!0 fq!120) (and (= (size!338 fq!120) #b00000000000000000000000000010100) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!338 fq!120) #b00000000000000000000000000000000)) (fp.leq (select (arr!338 fq!120) #b00000000000000000000000000000000) (fp #b0 #b01111111110 #b1001001000011111101100001101101111000000100110000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!338 fq!120) #b00000000000000000000000000000001)) (fp.leq (select (arr!338 fq!120) #b00000000000000000000000000000001) (fp #b0 #b01111101000 #b0001101000100000100011001001010011001110101111100000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!338 fq!120) #b00000000000000000000000000000010)) (fp.leq (select (arr!338 fq!120) #b00000000000000000000000000000010) (fp #b0 #b01111010000 #b1100110001001011101000011101001010011001111110100000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!338 fq!120) #b00000000000000000000000000000011)) (fp.leq (select (arr!338 fq!120) #b00000000000000000000000000000011) (fp #b0 #b01110111001 #b0100100001001011101001000100011000011011101101111000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!338 fq!120) #b00000000000000000000000000000100)) (fp.leq (select (arr!338 fq!120) #b00000000000000000000000000000100) (fp #b0 #b01110100001 #b1001101000011011010011011100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!338 fq!120) #b00000000000000000000000000000101)) (fp.leq (select (arr!338 fq!120) #b00000000000000000000000000000101) (fp #b0 #b01110001001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!338 fq!120) #b00000000000000000000000000000110)) (fp.leq (select (arr!338 fq!120) #b00000000000000000000000000000110) (fp #b0 #b01101110001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!338 fq!120) #b00000000000000000000000000000111)) (fp.leq (select (arr!338 fq!120) #b00000000000000000000000000000111) (fp #b0 #b01101011001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!338 fq!120) #b00000000000000000000000000001000)) (fp.leq (select (arr!338 fq!120) #b00000000000000000000000000001000) (fp #b0 #b01101000001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!338 fq!120) #b00000000000000000000000000001001)) (fp.leq (select (arr!338 fq!120) #b00000000000000000000000000001001) (fp #b0 #b01100101001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!338 fq!120) #b00000000000000000000000000001010)) (fp.leq (select (arr!338 fq!120) #b00000000000000000000000000001010) (fp #b0 #b01100010001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!338 fq!120) #b00000000000000000000000000001011)) (fp.leq (select (arr!338 fq!120) #b00000000000000000000000000001011) (fp #b0 #b01011111001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!338 fq!120) #b00000000000000000000000000001100)) (fp.leq (select (arr!338 fq!120) #b00000000000000000000000000001100) (fp #b0 #b01011100001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!338 fq!120) #b00000000000000000000000000001101)) (fp.leq (select (arr!338 fq!120) #b00000000000000000000000000001101) (fp #b0 #b01011001001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!338 fq!120) #b00000000000000000000000000001110)) (fp.leq (select (arr!338 fq!120) #b00000000000000000000000000001110) (fp #b0 #b01010110001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!338 fq!120) #b00000000000000000000000000001111)) (fp.leq (select (arr!338 fq!120) #b00000000000000000000000000001111) (fp #b0 #b01010011001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!338 fq!120) #b00000000000000000000000000010000)) (fp.leq (select (arr!338 fq!120) #b00000000000000000000000000010000) (fp #b0 #b01010000001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!338 fq!120) #b00000000000000000000000000010001)) (fp.leq (select (arr!338 fq!120) #b00000000000000000000000000010001) (fp #b0 #b01001101001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!338 fq!120) #b00000000000000000000000000010010)) (fp.leq (select (arr!338 fq!120) #b00000000000000000000000000010010) (fp #b0 #b01001010001 #b1011101001010010010101001100010110101101101010011000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!338 fq!120) #b00000000000000000000000000010011)) (fp.leq (select (arr!338 fq!120) #b00000000000000000000000000010011) (fp #b0 #b01000111001 #b1011101001010010010101001100010110101101101010011000))))))

(declare-fun bs!2177 () Bool)

(assert (= bs!2177 d!4885))

(declare-fun m!16471 () Bool)

(assert (=> bs!2177 m!16471))

(declare-fun m!16473 () Bool)

(assert (=> bs!2177 m!16473))

(declare-fun m!16475 () Bool)

(assert (=> bs!2177 m!16475))

(declare-fun m!16477 () Bool)

(assert (=> bs!2177 m!16477))

(declare-fun m!16479 () Bool)

(assert (=> bs!2177 m!16479))

(declare-fun m!16481 () Bool)

(assert (=> bs!2177 m!16481))

(declare-fun m!16483 () Bool)

(assert (=> bs!2177 m!16483))

(declare-fun m!16485 () Bool)

(assert (=> bs!2177 m!16485))

(declare-fun m!16487 () Bool)

(assert (=> bs!2177 m!16487))

(declare-fun m!16489 () Bool)

(assert (=> bs!2177 m!16489))

(declare-fun m!16491 () Bool)

(assert (=> bs!2177 m!16491))

(declare-fun m!16493 () Bool)

(assert (=> bs!2177 m!16493))

(declare-fun m!16495 () Bool)

(assert (=> bs!2177 m!16495))

(declare-fun m!16497 () Bool)

(assert (=> bs!2177 m!16497))

(declare-fun m!16499 () Bool)

(assert (=> bs!2177 m!16499))

(declare-fun m!16501 () Bool)

(assert (=> bs!2177 m!16501))

(declare-fun m!16503 () Bool)

(assert (=> bs!2177 m!16503))

(declare-fun m!16505 () Bool)

(assert (=> bs!2177 m!16505))

(declare-fun m!16507 () Bool)

(assert (=> bs!2177 m!16507))

(declare-fun m!16509 () Bool)

(assert (=> bs!2177 m!16509))

(assert (=> b!10734 d!4885))

(declare-fun d!4887 () Bool)

(assert (=> d!4887 (= (array_inv!287 fq!120) (bvsge (size!338 fq!120) #b00000000000000000000000000000000))))

(assert (=> start!2105 d!4887))

(check-sat)
