; Options: -q --produce-models --incremental --print-success --lang smt2.6 --arrays-exp
(set-logic ALL)

(declare-fun start!2655 () Bool)

(assert start!2655)

(declare-datatypes ((array!1042 0))(
  ( (array!1043 (arr!455 (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (size!455 (_ BitVec 32))) )
))
(declare-fun qq!34 () array!1042)

(assert (=> start!2655 (and (= (size!455 qq!34) #b00000000000000000000000000010100) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!455 qq!34) #b00000000000000000000000000000000)) (fp.leq (select (arr!455 qq!34) #b00000000000000000000000000000000) (fp #b0 #b01111111101 #b1111111111111111111111000000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!455 qq!34) #b00000000000000000000000000000001)) (fp.leq (select (arr!455 qq!34) #b00000000000000000000000000000001) (fp #b0 #b01111100110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!455 qq!34) #b00000000000000000000000000000010)) (fp.leq (select (arr!455 qq!34) #b00000000000000000000000000000010) (fp #b0 #b01111001110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!455 qq!34) #b00000000000000000000000000000011)) (fp.leq (select (arr!455 qq!34) #b00000000000000000000000000000011) (fp #b0 #b01110110110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!455 qq!34) #b00000000000000000000000000000100)) (fp.leq (select (arr!455 qq!34) #b00000000000000000000000000000100) (fp #b0 #b01110011110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!455 qq!34) #b00000000000000000000000000000101)) (fp.leq (select (arr!455 qq!34) #b00000000000000000000000000000101) (fp #b0 #b01110000110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!455 qq!34) #b00000000000000000000000000000110)) (fp.leq (select (arr!455 qq!34) #b00000000000000000000000000000110) (fp #b0 #b01101101110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!455 qq!34) #b00000000000000000000000000000111)) (fp.leq (select (arr!455 qq!34) #b00000000000000000000000000000111) (fp #b0 #b01101010110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!455 qq!34) #b00000000000000000000000000001000)) (fp.leq (select (arr!455 qq!34) #b00000000000000000000000000001000) (fp #b0 #b01100111110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!455 qq!34) #b00000000000000000000000000001001)) (fp.leq (select (arr!455 qq!34) #b00000000000000000000000000001001) (fp #b0 #b01100100110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!455 qq!34) #b00000000000000000000000000001010)) (fp.leq (select (arr!455 qq!34) #b00000000000000000000000000001010) (fp #b0 #b01100001110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!455 qq!34) #b00000000000000000000000000001011)) (fp.leq (select (arr!455 qq!34) #b00000000000000000000000000001011) (fp #b0 #b01011110110 #b1111111111111111111111100000000000000000000000000000)) (bvsge #b00000000000000000000000000001100 (size!455 qq!34)))))

(declare-fun array_inv!404 (array!1042) Bool)

(assert (=> start!2655 (array_inv!404 qq!34)))

(declare-fun bs!2908 () Bool)

(assert (= bs!2908 start!2655))

(declare-fun m!22759 () Bool)

(assert (=> bs!2908 m!22759))

(declare-fun m!22761 () Bool)

(assert (=> bs!2908 m!22761))

(declare-fun m!22763 () Bool)

(assert (=> bs!2908 m!22763))

(declare-fun m!22765 () Bool)

(assert (=> bs!2908 m!22765))

(declare-fun m!22767 () Bool)

(assert (=> bs!2908 m!22767))

(declare-fun m!22769 () Bool)

(assert (=> bs!2908 m!22769))

(declare-fun m!22771 () Bool)

(assert (=> bs!2908 m!22771))

(declare-fun m!22773 () Bool)

(assert (=> bs!2908 m!22773))

(declare-fun m!22775 () Bool)

(assert (=> bs!2908 m!22775))

(declare-fun m!22777 () Bool)

(assert (=> bs!2908 m!22777))

(declare-fun m!22779 () Bool)

(assert (=> bs!2908 m!22779))

(declare-fun m!22781 () Bool)

(assert (=> bs!2908 m!22781))

(declare-fun m!22783 () Bool)

(assert (=> bs!2908 m!22783))

(push 1)

(assert (not start!2655))

(check-sat)

(pop 1)

(push 1)

(check-sat)

(pop 1)

