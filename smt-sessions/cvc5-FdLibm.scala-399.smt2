; Options: -q --produce-models --incremental --print-success --lang smt2.6 --arrays-exp
(set-logic ALL)

(declare-fun start!2331 () Bool)

(assert start!2331)

(declare-fun res!9493 () Bool)

(declare-fun e!6465 () Bool)

(assert (=> start!2331 (=> (not res!9493) (not e!6465))))

(declare-datatypes ((array!821 0))(
  ( (array!822 (arr!356 (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (size!356 (_ BitVec 32))) )
))
(declare-fun fq!120 () array!821)

(assert (=> start!2331 (= res!9493 (= (size!356 fq!120) #b00000000000000000000000000010100))))

(assert (=> start!2331 e!6465))

(assert (=> start!2331 true))

(declare-fun array_inv!305 (array!821) Bool)

(assert (=> start!2331 (array_inv!305 fq!120)))

(declare-fun b!11775 () Bool)

(declare-fun e!6464 () Bool)

(assert (=> b!11775 (= e!6465 e!6464)))

(declare-fun res!9494 () Bool)

(assert (=> b!11775 (=> (not res!9494) (not e!6464))))

(declare-datatypes ((tuple2!112 0))(
  ( (tuple2!113 (_1!261 (_ FloatingPoint 11 53)) (_2!261 (_ FloatingPoint 11 53))) )
))
(declare-fun lt!5722 () tuple2!112)

(declare-fun c!23 () (_ FloatingPoint 11 53))

(assert (=> b!11775 (= res!9494 (fp.geq (_1!261 lt!5722) (fp.add roundNearestTiesToEven c!23 (_2!261 lt!5722))))))

(declare-fun e!6463 () tuple2!112)

(assert (=> b!11775 (= lt!5722 e!6463)))

(declare-fun i!347 () (_ BitVec 32))

(declare-fun c!1350 () Bool)

(declare-fun s!25 () (_ FloatingPoint 11 53))

(assert (=> b!11775 (= c!1350 (fp.geq s!25 (select (arr!356 fq!120) i!347)))))

(declare-fun call!26 () tuple2!112)

(declare-fun bm!23 () Bool)

(declare-fun fast2Sum!0 ((_ FloatingPoint 11 53) (_ FloatingPoint 11 53)) tuple2!112)

(assert (=> bm!23 (= call!26 (fast2Sum!0 (ite c!1350 s!25 (select (arr!356 fq!120) i!347)) (ite c!1350 (select (arr!356 fq!120) i!347) s!25)))))

(declare-fun b!11776 () Bool)

(assert (=> b!11776 (= e!6463 call!26)))

(declare-fun b!11777 () Bool)

(assert (=> b!11777 (= e!6464 (and (not (= (bvand i!347 #b10000000000000000000000000000000) #b00000000000000000000000000000000)) (not (= (bvand i!347 #b10000000000000000000000000000000) (bvand (bvsub i!347 #b00000000000000000000000000000001) #b10000000000000000000000000000000)))))))

(declare-fun lt!5721 () tuple2!112)

(assert (=> b!11777 (= lt!5721 (fast2Sum!0 (_1!261 lt!5722) (fp.add roundNearestTiesToEven c!23 (_2!261 lt!5722))))))

(declare-fun b!11778 () Bool)

(declare-fun res!9495 () Bool)

(assert (=> b!11778 (=> (not res!9495) (not e!6465))))

(declare-fun jz!77 () (_ BitVec 32))

(assert (=> b!11778 (= res!9495 (and (bvsle #b00000000000000000000000000000000 jz!77) (bvslt jz!77 #b00000000000000000000000000010100) (bvsle #b11111111111111111111111111111111 i!347) (bvsle i!347 (bvsub jz!77 #b00000000000000000000000000000001)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) s!25) (fp.leq s!25 (select (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (fp #b0 #b01111111110 #b1001001000011111101101010100010001000010110100011000)) #b00000000000000000000000000000001 (fp #b0 #b01111101000 #b0001101000100000100011100110000100011010011000100110)) #b00000000000000000000000000001010 (fp #b0 #b01100010001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001011 (fp #b0 #b01011111001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001100 (fp #b0 #b01011100001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001101 (fp #b0 #b01011001001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001110 (fp #b0 #b01010110001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001111 (fp #b0 #b01010011001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000010000 (fp #b0 #b01010000001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000010001 (fp #b0 #b01001101001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000010010 (fp #b0 #b01001010001 #b1011101001010010010101100111111111111111111111100100)) #b00000000000000000000000000010011 (fp #b0 #b01000111001 #b1011101001010010010101001100010110101101101010011000)) #b00000000000000000000000000000010 (fp #b0 #b01111010000 #b1100110001001011101001000110001100110001010001011100)) #b00000000000000000000000000000011 (fp #b0 #b01110111001 #b0100100001001011101001011110000000110111000001110000)) #b00000000000000000000000000000100 (fp #b0 #b01110100001 #b1001101000011011010011111000000000000000000000000000)) #b00000000000000000000000000000101 (fp #b0 #b01110001001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000000110 (fp #b0 #b01101110001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000000111 (fp #b0 #b01101011001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001000 (fp #b0 #b01101000001 #b1011101001010010010101101000000000000000000000000000)) #b00000000000000000000000000001001 (fp #b0 #b01100101001 #b1011101001010010010101101000000000000000000000000000)) (bvadd i!347 #b00000000000000000000000000000001))) (fp.eq (fp.add roundNearestTiesToEven s!25 c!23) s!25) (bvsge i!347 #b00000000000000000000000000000000) (fp.leq s!25 (fp #b0 #b01111111111 #b0000000000000000000000000000000000000000000000000000))))))

(declare-fun b!11779 () Bool)

(assert (=> b!11779 (= e!6463 call!26)))

(declare-fun b!11780 () Bool)

(declare-fun res!9492 () Bool)

(assert (=> b!11780 (=> (not res!9492) (not e!6465))))

(declare-fun fqInv!0 (array!821) Bool)

(assert (=> b!11780 (= res!9492 (fqInv!0 fq!120))))

(assert (= (and start!2331 res!9493) b!11780))

(assert (= (and b!11780 res!9492) b!11778))

(assert (= (and b!11778 res!9495) b!11775))

(assert (= (and b!11775 c!1350) b!11779))

(assert (= (and b!11775 (not c!1350)) b!11776))

(assert (= (or b!11779 b!11776) bm!23))

(assert (= (and b!11775 res!9494) b!11777))

(declare-fun m!19727 () Bool)

(assert (=> b!11775 m!19727))

(assert (=> bm!23 m!19727))

(declare-fun m!19729 () Bool)

(assert (=> bm!23 m!19729))

(declare-fun m!19731 () Bool)

(assert (=> b!11778 m!19731))

(declare-fun m!19733 () Bool)

(assert (=> b!11777 m!19733))

(declare-fun m!19735 () Bool)

(assert (=> start!2331 m!19735))

(declare-fun m!19737 () Bool)

(assert (=> b!11780 m!19737))

(push 1)

(assert (not b!11777))

(assert (not bm!23))

(assert (not start!2331))

(assert (not b!11780))

(check-sat)

(pop 1)

(push 1)

(check-sat)

(pop 1)

