; Options: -q --produce-models --incremental --print-success --lang smt2.6 --arrays-exp
(set-logic ALL)

(declare-fun start!2645 () Bool)

(assert start!2645)

(declare-datatypes ((array!1032 0))(
  ( (array!1033 (arr!450 (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (size!450 (_ BitVec 32))) )
))
(declare-fun qq!34 () array!1032)

(assert (=> start!2645 (and (= (size!450 qq!34) #b00000000000000000000000000010100) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!450 qq!34) #b00000000000000000000000000000000)) (fp.leq (select (arr!450 qq!34) #b00000000000000000000000000000000) (fp #b0 #b01111111101 #b1111111111111111111111000000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!450 qq!34) #b00000000000000000000000000000001)) (fp.leq (select (arr!450 qq!34) #b00000000000000000000000000000001) (fp #b0 #b01111100110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!450 qq!34) #b00000000000000000000000000000010)) (fp.leq (select (arr!450 qq!34) #b00000000000000000000000000000010) (fp #b0 #b01111001110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!450 qq!34) #b00000000000000000000000000000011)) (fp.leq (select (arr!450 qq!34) #b00000000000000000000000000000011) (fp #b0 #b01110110110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!450 qq!34) #b00000000000000000000000000000100)) (fp.leq (select (arr!450 qq!34) #b00000000000000000000000000000100) (fp #b0 #b01110011110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!450 qq!34) #b00000000000000000000000000000101)) (fp.leq (select (arr!450 qq!34) #b00000000000000000000000000000101) (fp #b0 #b01110000110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!450 qq!34) #b00000000000000000000000000000110)) (fp.leq (select (arr!450 qq!34) #b00000000000000000000000000000110) (fp #b0 #b01101101110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!450 qq!34) #b00000000000000000000000000000111)) (fp.leq (select (arr!450 qq!34) #b00000000000000000000000000000111) (fp #b0 #b01101010110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!450 qq!34) #b00000000000000000000000000001000)) (fp.leq (select (arr!450 qq!34) #b00000000000000000000000000001000) (fp #b0 #b01100111110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!450 qq!34) #b00000000000000000000000000001001)) (bvsge #b00000000000000000000000000001001 (size!450 qq!34)))))

(declare-fun array_inv!399 (array!1032) Bool)

(assert (=> start!2645 (array_inv!399 qq!34)))

(declare-fun bs!2898 () Bool)

(assert (= bs!2898 start!2645))

(declare-fun m!22641 () Bool)

(assert (=> bs!2898 m!22641))

(declare-fun m!22643 () Bool)

(assert (=> bs!2898 m!22643))

(declare-fun m!22645 () Bool)

(assert (=> bs!2898 m!22645))

(declare-fun m!22647 () Bool)

(assert (=> bs!2898 m!22647))

(declare-fun m!22649 () Bool)

(assert (=> bs!2898 m!22649))

(declare-fun m!22651 () Bool)

(assert (=> bs!2898 m!22651))

(declare-fun m!22653 () Bool)

(assert (=> bs!2898 m!22653))

(declare-fun m!22655 () Bool)

(assert (=> bs!2898 m!22655))

(declare-fun m!22657 () Bool)

(assert (=> bs!2898 m!22657))

(declare-fun m!22659 () Bool)

(assert (=> bs!2898 m!22659))

(declare-fun m!22661 () Bool)

(assert (=> bs!2898 m!22661))

(push 1)

(assert (not start!2645))

(check-sat)

(pop 1)

(push 1)

(check-sat)

(pop 1)

