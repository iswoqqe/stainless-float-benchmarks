; Options: -q --produce-models --incremental --print-success --lang smt2.6 --arrays-exp
(set-logic ALL)

(declare-fun start!2633 () Bool)

(assert start!2633)

(declare-datatypes ((array!1020 0))(
  ( (array!1021 (arr!444 (Array (_ BitVec 32) (_ FloatingPoint 11 53))) (size!444 (_ BitVec 32))) )
))
(declare-fun qq!34 () array!1020)

(assert (=> start!2633 (and (= (size!444 qq!34) #b00000000000000000000000000010100) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!444 qq!34) #b00000000000000000000000000000000)) (fp.leq (select (arr!444 qq!34) #b00000000000000000000000000000000) (fp #b0 #b01111111101 #b1111111111111111111111000000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!444 qq!34) #b00000000000000000000000000000001)) (fp.leq (select (arr!444 qq!34) #b00000000000000000000000000000001) (fp #b0 #b01111100110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!444 qq!34) #b00000000000000000000000000000010)) (fp.leq (select (arr!444 qq!34) #b00000000000000000000000000000010) (fp #b0 #b01111001110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!444 qq!34) #b00000000000000000000000000000011)) (fp.leq (select (arr!444 qq!34) #b00000000000000000000000000000011) (fp #b0 #b01110110110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!444 qq!34) #b00000000000000000000000000000100)) (fp.leq (select (arr!444 qq!34) #b00000000000000000000000000000100) (fp #b0 #b01110011110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!444 qq!34) #b00000000000000000000000000000101)) (fp.leq (select (arr!444 qq!34) #b00000000000000000000000000000101) (fp #b0 #b01110000110 #b1111111111111111111111100000000000000000000000000000)) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (select (arr!444 qq!34) #b00000000000000000000000000000110)) (bvsge #b00000000000000000000000000000110 (size!444 qq!34)))))

(declare-fun array_inv!393 (array!1020) Bool)

(assert (=> start!2633 (array_inv!393 qq!34)))

(declare-fun bs!2886 () Bool)

(assert (= bs!2886 start!2633))

(declare-fun m!22533 () Bool)

(assert (=> bs!2886 m!22533))

(declare-fun m!22535 () Bool)

(assert (=> bs!2886 m!22535))

(declare-fun m!22537 () Bool)

(assert (=> bs!2886 m!22537))

(declare-fun m!22539 () Bool)

(assert (=> bs!2886 m!22539))

(declare-fun m!22541 () Bool)

(assert (=> bs!2886 m!22541))

(declare-fun m!22543 () Bool)

(assert (=> bs!2886 m!22543))

(declare-fun m!22545 () Bool)

(assert (=> bs!2886 m!22545))

(declare-fun m!22547 () Bool)

(assert (=> bs!2886 m!22547))

(push 1)

(assert (not start!2633))

(check-sat)

(pop 1)

(push 1)

(check-sat)

(pop 1)

